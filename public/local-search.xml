<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>如何批量导出飞书文档？【效率工具指南】</title>
    <link href="/2023/03/26/2023-3-26-feishu_export/"/>
    <url>/2023/03/26/2023-3-26-feishu_export/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/eTAs8T5m8YVYwH9hHQHzug">效率工具指南</a>」<br>文/彭宏豪    </p><p>Hello 各位好，我是小豪。   </p><p>最近飞书开了一年一度的大会「春季未来无限大会」，开会的时候是上班时间，老实说我没看，也没有怎么关注……      </p><p>不说大会，来说说飞书中和个人用户更密切相关的一项应用——飞书文档。   </p><p>今年应该是飞书「商业化」的关键之年（用户养肥了可以开始收钱了），在飞书官网可以看到一个「版本对比｜飞书」的页面，如下图，列出了不同版本的价格。   </p><p>照目前的付费方案看，飞书虽然集成了众多功能，但它并不按单项功能来卖，而是把所有功能打包到一起出售。</p><p>如果你只用其中的「飞书文档」，想拥有更大的云文档空间，只能升级到 50 元/人/月，一年最少 600 块，就买这一项功能，我猜很多个人用户就会觉得太贵了……              </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16797290297420.jpg"></p><p>飞书开始商业化之后，原先的免费版权益也有所调整，说我留意到的一个，云文档空间从原本的 200 GB 下调到 50 GB。  </p><p>在网上看到有人吐槽，空间变小了，想升级到更大的空间，客服和他说：亲，个人用户无法直接升级，您需要先创建一个企业，以企业用户的身份，才能进行升级到「商业版」……想给飞书送钱，还得这么折腾，果然是先进生产力工具啊……            </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16797279146083.jpg"></p><p>说到这，可以引出今天这篇文章的主题了：      </p><p>如果你觉得飞书文档给的免费空间太小，或是一年 600 起步的价格太高，不想再用飞书了，这时就会有一个问题：<strong>如何批量导出存放在飞书上的文档呢？</strong>         </p><p>数据迁移或导出，一直是国内很多产品被诟病的地方……有些比较良心一点的，譬如腾讯文档，它提供了「批量导出」功能，只不过是要花钱💰，而有些产品，干脆不提供这一功能，被用户问到，就说这需求以后会做的，只是没告诉你，<strong>这需求它永远排不上期</strong>的哈哈哈哈     </p><p>这里我从网上找到了一位个人开发者制作的一个工具 <strong>feishu-backup</strong>，它可以比较方便地批量导出飞书文档，且导出的文档为 Markdown 格式。          </p><p>不过需要注意的是，feishu-backup <strong>只能批量导出存放在企业用户（飞书组织）里的文档</strong>，如果你之前把文档都放在了个人身份的账户里，那就无法使用这个工具了……     </p><p>还有一点，<strong>如果你想用这个工具从你就职的公司批量导出你创建过的所有文档，那也别想了</strong>……因为后面的操作有一步是需要企业的管理员审核的，你这么操作，别人会怎么想你呢？     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16797986209783.jpg"></p><p>feishu-backup GitHub 项目链接：<br><a href="https://github.com/dicarne/feishu-backup">https://github.com/dicarne/feishu-backup</a>      </p><p>下面简单介绍从飞书企业版中批量导出飞书文档的步骤：  </p><h2 id="飞书开放平台创建企业应用"><a href="#飞书开放平台创建企业应用" class="headerlink" title="飞书开放平台创建企业应用"></a>飞书开放平台创建企业应用</h2><p>在浏览器打开飞书开放平台 <code>open.feishu.cn/</code>，点击「创建应用」。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16797999508294.jpg"></p><p>点击下方的「创建企业自建应用」</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16798000351297.jpg"></p><p>在下图填入应用的名称、应用描述，这里可以随便填，没有特殊要求</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16798002639876.jpg"></p><p>进入到应用的配置页面，点击「创建版本」，在下方输入「应用版本号」和「更新说明」，接着把页面滑动到底部，点击「保存」按钮。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16798011382277.jpg"></p><p>创建版本后，点击右上角的「申请线上发布」，这时它会向企业的管理员发起「审批」流程。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16798053837664.jpg"></p><p>打开飞书的首页 <code>feishu.cn</code>，点击「飞书网页版」，打开飞书的 IM 页面。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16798007612762.jpg"></p><p>企业管理员的「开发者小助手」会收到一条消息，点击「进入管理后台审核」，在打开的页面中，点击右侧的「审核」，选择「通过」即可。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16798072039628.jpg"></p><p>回到飞书开放平台的后台，点击「权限管理」&gt;&gt;「云文档」，勾选「权限名称」左侧的复选框，全选云文档的 10 项权限，点击右上角的「批量开通」，一键开通所有权限。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16798004949956.jpg"></p><h2 id="获取-App-ID-和-App-Secret"><a href="#获取-App-ID-和-App-Secret" class="headerlink" title="获取 App ID 和 App Secret"></a>获取 App ID 和 App Secret</h2><p>点击飞书开放平台后台左侧栏的「凭证与基础信息」，可以看到应用的 App ID 和密钥 App Secret。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16798074884077.jpg"></p><h2 id="配置-feishu-backup"><a href="#配置-feishu-backup" class="headerlink" title="配置 feishu-backup"></a>配置 feishu-backup</h2><p>在浏览器打开 <code>https://dicarne.github.io/feishu-backup/#/config</code>，填写上面的 App ID 和 App Secret。  </p><p>点击下方的「计算」，重定向URL 输入框会生成一个链接，复制生成的链接。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16798097848507.jpg"></p><p>将复制的链接粘贴到飞书开放平台「安全设置」的重定向 URL 中，点击右侧的「添加」按钮。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16798099417483.jpg"></p><p>回到 feishu-backup 的配置页面，在浏览器打开底部的备份 URL。  </p><p>注：<strong>如果你之后时不时想用 feishu-backup 导出存放在飞书中的文档，请妥善保存这个备份 URL 链接，可以把它保存到备忘录或是收藏起来</strong>。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16798101463993.jpg"></p><p>打开备份 URL 链接会弹出下面的提示，点击「授权」即可。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16798102692523.jpg"></p><h2 id="导出飞书文档"><a href="#导出飞书文档" class="headerlink" title="导出飞书文档"></a>导出飞书文档</h2><p>授权之后，就来到了导出飞书文档的页面，点击上方的「下载云空间文档」，接着点击「选择文件」，下拉弹窗会显示云空间的所有文档。  </p><p>勾选文档左侧的复选框，再点击右侧的「下载选中文件」，feishu-backup 就会把选中的文档<strong>批量下载</strong>到本地。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16798105438371.jpg"></p><p>下载会得到一个压缩包，打开压缩包，就能看到导出的 Markdown 格式的文档（后缀为 <code>.md</code>），另外它会将文档中包含的所有图片，放在名为 assets 的文件夹中，这与 Notion 自带的导出 Markdown 文件是相似的。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/26/16798109141605.jpg"></p><p>最后还是要说一声感谢，感谢这位开发者开发了这么一个工具，虽然它还不能兼容所有的情况，但有这个工具，多少还是能帮到那些把文档放在飞书企业版上的用户，让他们的数字资产得以自由迁移到其他应用中。    </p><h2 id="扫码加入我在知识星球上创建的社群「效率工具指南」"><a href="#扫码加入我在知识星球上创建的社群「效率工具指南」" class="headerlink" title="扫码加入我在知识星球上创建的社群「效率工具指南」"></a>扫码加入我在知识星球上创建的社群「效率工具指南」</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/25/48844555552858t2.JPG" alt="48844555552858T2"></p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南"> </p>]]></content>
    
    
    
    <tags>
      
      <tag>在线文档</tag>
      
      <tag>数据迁移</tag>
      
      <tag>飞书</tag>
      
      <tag>飞书文档</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件传输：怎样把手机上的文件传输到电脑上？【效率工具指南】</title>
    <link href="/2023/03/26/2023-3-26-filetransfer/"/>
    <url>/2023/03/26/2023-3-26-filetransfer/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>把手机上的文件传输到电脑上，有这么几种常见的办法：</p><ul><li><p>隔空投送：如果你的手机为 iPhone，电脑为 MacBook 或者 iMac 等苹果设备，可以使用「隔空投送」进行传输，速度非常快，最为推荐，我目前最常使用的是这一种。      </p></li><li><p>USB 连接：将手机通过 USB 线连接到电脑上，手机会被电脑识别为外部设备。在手机的通知栏中点击“USB 传输”或者“数据传输”等选项，然后在电脑上打开文件管理器，即可访问手机上的文件并将它们传输到电脑上。</p></li><li><p>云存储：将文件上传到云存储服务（如 Google Drive、Dropbox、OneDrive、iCloud、国内的网盘应用等），然后在电脑上通过浏览器登录该服务，即可访问手机上的文件并将它们下载到电脑上。 </p></li></ul><p>国内的网盘应用，如百度网盘、夸克网盘、阿里云盘、蓝奏云网盘、115 网盘、123 网盘、天翼网盘等。       </p><ul><li>邮件附件：通过手机的邮件应用发送文件作为附件，然后在电脑上通过邮件客户端打开邮件并下载附件。   </li><li>局域网传输：可以使用一些第三方应用来进行文件传输，如 AirDroid、Xender、Shareit 等。这些应用可以在手机和电脑之间建立 Wi-Fi 连接或使用蓝牙等方式进行传输。</li></ul><p>如果你用的手机为 iPhone，电脑为 Windows 电脑，这两种设备还可以使用「<strong>SMB</strong>」进行传输，具体操作可以参考我以前回答过的一个问题：  </p><p><a href="https://www.zhihu.com/question/33879162/answer/1245209882">https://www.zhihu.com/question/33879162/answer/1245209882</a></p><ul><li>通讯工具：以微信为例，可以通过微信直接发送文件给其他微信用户，不过微信对可传输的文件大小和文件类型存在着限制。   </li></ul><p>如果你发送的是图片或视频文件，发送的时候没有勾选「原图」的话，文件会被压缩；<br>如果你发送的是 apk 安装包，微信出于安全考虑，会在安装包的末尾加多一个数字 1，这对于收到文件的人，需要先对文件进行重命名，才能打开 apk 安装包。    </p><h2 id="扫码加入我在知识星球上创建的社群「效率工具指南」"><a href="#扫码加入我在知识星球上创建的社群「效率工具指南」" class="headerlink" title="扫码加入我在知识星球上创建的社群「效率工具指南」"></a>扫码加入我在知识星球上创建的社群「效率工具指南」</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/25/48844555552858t2.JPG" alt="48844555552858T2"></p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南"> </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>Windows</tag>
      
      <tag>iPhone</tag>
      
      <tag>macOS</tag>
      
      <tag>文件传输</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MacBook Pro装机必备：隐藏菜单栏不常用图标｜隐藏刘海｜在电脑上养一只猫【效率工具指南】</title>
    <link href="/2023/03/25/2023-3-25-macapp/"/>
    <url>/2023/03/25/2023-3-25-macapp/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/n1l0CLiC9f2ogJzZQ7qTag">效率工具指南</a>」<br>文/彭宏豪    </p><p>Hello 各位好，我是小豪。   </p><p>在<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649921615&idx=1&sn=1f707a83c4a6d7fab85928b1019ec985&chksm=83a89c62b4df15749cb2fe92a436f6dc56a178a862f1fb21553aef69329fef5594eed23a4810&token=1166849618&lang=zh_CN#rd">去年年底的年度总结</a>中说到，我买了一台 M1 芯片的苹果电脑，买了之后其实挺长时间都是在吃灰……因为在家觉得还是 27 寸的 iMac 看起来更爽，不管是看剧，还是干活。     </p><p>为数不多会用到这台 14 寸笔记本的场景：   </p><ul><li>晚上在床上看一会电子书    </li><li>国庆或春节回老家期间       </li><li>有时看一下爱奇艺的视频（推荐《我们民谣2022》），因为在这台电脑上登了爱奇艺的账号，切换到别的设备又要重新验证……                </li><li>迄今为止只去过一次咖啡厅码字😂（去的不是星巴克）       </li></ul><p>其实吃不吃灰不是我特别关注的事情，主要是在家能享受到一种被苹果产品环绕的感觉（此处没有凡尔赛）：    </p><p>刷完手机看平板，看完平板看 iMac，iMac 太重没法随意移动，换到 MacBook，趴在床上还能接着看。      </p><p>唠完就进入正题，今天的这篇文章，想和各位分享我在 M1 14 寸刘海屏的 MacBook Pro 上安装的一些软件，有些软件是出于对新电脑的「妥协」才安装的。   </p><p>如果你手里也有和我一样的刘海屏电脑，不妨一起接着往下看👀     </p><h2 id="隐藏菜单栏不常用图标"><a href="#隐藏菜单栏不常用图标" class="headerlink" title="隐藏菜单栏不常用图标"></a>隐藏菜单栏不常用图标</h2><p>新款 MacBook 最为人吐槽的，莫过于从 iPhone 继承过来的刘海屏，原本接近全面屏的大屏幕，中间却多了一块突兀的刘海。  </p><p>不过我对刘海的外观设计没那么大的意见，和 iPhone 一样，看多就习惯了，比较难受的是，<strong>刘海挤占了原本并不宽裕的菜单栏空间</strong>。    </p><p>我在 Mac 上开的软件比较多，稍不注意就耗尽了菜单栏右侧拮据的空间，超出的图标会被隐藏起来，以至于有时我找不到想打开的应用……   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/25/16796731677758.jpg"></p><p>为了隐藏菜单栏不常用的图标，我安装了下图这个免费的应用——iBar，强大的菜单栏图标管理工具。  </p><p>如果你有用过截图软件 iShot 的话，可能会发现这两款软件的命名方式挺像的，没错，不止是名字像，这两款应用来自同一个厂商。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/25/16796785402512.jpg"></p><p>iBar 可以把不常用的图标「收纳」在一个图标中，点击菜单栏的 iBar 图标，下方会显示被隐藏的应用图标，如下图所示。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/25/16796787502288.jpg"></p><p>我使用 iBar 主要是图它免费，不确定以后会不会变成收费的，反正先用着。     </p><h2 id="隐藏刘海"><a href="#隐藏刘海" class="headerlink" title="隐藏刘海"></a>隐藏刘海</h2><p>前面说到，个人觉得新款 MacBook 刘海的外观，看多就习惯了。如果你看着还是不习惯，可以考虑在电脑上安装一款下图的免费应用——<strong>TopNotch</strong>。    </p><p>TopNotch，一款被称作可以「隐藏刘海」的免费应用，但我感觉它其实是在欺骗人的「视觉」，只是将菜单栏的背景强行更改为黑色，与黑色的刘海融为一体，给人营造「这是一台非刘海屏电脑」的假象😂    </p><p>TopNotch 安装包下载地址：<br><a href="https://pan.quark.cn/s/ea14e45ec439">https://pan.quark.cn/s/ea14e45ec439</a>   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/25/16796790434943.jpg"></p><p>运行 TopNotch，默认会启用软件的功能——将菜单栏背景更改为黑色，如果你想重新显示出刘海，可以点击菜单栏的应用图标，将其暂时关闭。         </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/25/16796795664290.jpg"></p><h2 id="菜单栏养了一只猫"><a href="#菜单栏养了一只猫" class="headerlink" title="菜单栏养了一只猫"></a>菜单栏养了一只猫</h2><p>这才是这篇文章中最想安利给各位的一款可爱的应用——RunCat。  </p><p>有了 RunCat，你就可以在电脑菜单栏上养一只猫🐱，而且是一只不断电、就不会停下来的猫。   </p><p>这只猫不只是一个观赏猫，TA 跑动的频率也和你的电脑息息相关：当小猫咪跑得越快时，说明你的电脑 CPU 占用比较高，这通常会出现在你打开新的标签页、渲染导出视频、或是打包代码的时候。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/25/16796783365012.jpg"></p><p>想在电脑中养一只小宠物的朋友，可以从 Mac App Store 免费下载这款应用。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/25/16796798070050.jpg"></p><h2 id="截图美化-Xnapper"><a href="#截图美化-Xnapper" class="headerlink" title="截图美化 Xnapper"></a>截图美化 Xnapper</h2><p>这其实是在之前的一篇文章《<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649921672&idx=1&sn=7485d0a8934a2231d78b6ecff7e18517&chksm=83a89ca5b4df15b317bd1292b2f25e8387915bf507be148e7b3c44d476e5f28375f51472e654&token=1166849618&lang=zh_CN#rd">同样是截图，咋差距就这么大呢？</a>》中介绍过的一款截图美化应用，功能也比较简单：  </p><p>Xnapper 可以给截图自动添加圆角，同时在最外面加一个渐变的背景和水印（付费后可自定义右下角的文字水印），让截图看起来更好看～      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/25/16796804897291.jpg"></p><p>买完 Xnapper 用了一阵时间，有一点点后悔😂，主要是觉得 Xnapper 的<strong>标注</strong>功能弱了一些，期待后面的更新能增强这方面的能力。    </p><h2 id="扫码加入我在知识星球上创建的社群「效率工具指南」"><a href="#扫码加入我在知识星球上创建的社群「效率工具指南」" class="headerlink" title="扫码加入我在知识星球上创建的社群「效率工具指南」"></a>扫码加入我在知识星球上创建的社群「效率工具指南」</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/25/48844555552858t2.JPG" alt="48844555552858T2"></p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>macOS</tag>
      
      <tag>效率工具</tag>
      
      <tag>装机必备</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>国内怎么使用微软的AI机器人new Bing？保姆级教学来啦！【效率工具指南】</title>
    <link href="/2023/03/19/2023-3-19-newBing/"/>
    <url>/2023/03/19/2023-3-19-newBing/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/eDvKR0AOYbq3rLhQ5CLC3Q">效率工具指南</a>」<br>文/彭宏豪    </p><p>Hello 各位好，我是小豪。   </p><p>过去的一周科技圈发生了很多事情，像是神仙打架，前有 GPT-4，后有 Microsoft 365 Copilot，中间还夹了一个百度的「文心一言」。  </p><p>如果你的微信上加了比较多做内容/做自媒体/做个人品牌/卖课的，相信你的朋友圈也会被相关的消息刷屏……    </p><p>但今天的文章不谈上面这些话题，说一下微软早前推出的 <strong>new Bing</strong>。    </p><p>new Bing 是微软推出的「必应搜索」的全新版本，集成了 OpenAI 旗下的人工智能技术，可以更容易理解用户输入的字词，进一步搜寻完整的答案，产出更符合实际解答的内容。</p><p>简单讲，就是新版的必应搜索中多了一个「聊天」功能，你可以像使用 ChatGPT 一样，来向它提出各种问题。   </p><p>新版必应搜索 new Bing 网址：<br><a href="https://www.bing.com/">https://www.bing.com/</a>      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/20/16792040213962.jpg"></p><p>不过，由于某些限制，有些朋友打开 new Bing 的时候，会自动重定向到旧版的必应 <code>cn.bing.com</code>，导致我们无法用上新版必应的「聊天」功能。      </p><p>要想解决这个问题，网上有多种方法，这里提供 2 种比较靠谱的：</p><ul><li>使用全局模式的🪜，IP 地址切换为美国或日本        </li><li>修改电脑的 hosts 文件</li></ul><p>第一种方法不便多讲，下面简单介绍第二种方法，修改电脑的 hosts 文件，这个方法适用于安装了不同操作系统的电脑，区别在于不同电脑 hosts 文件的位置存在着差异。   </p><p>如果你用的是 Windows 电脑，可以查看我之前发布过的一篇文章《<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649912608&idx=1&sn=5361b0f7e11214afb6b37a492deb6aab&chksm=83a8710db4dff81b0b7de39923553eb552b7d616c13b37e64b85d9af2191124e461229e94b87&token=420784323&lang=zh_CN#rd">全球最大的交友网站无法打开？这两个技巧来帮你</a>》，按照里面的操作，找到 hosts 文件的位置。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/20/16792141242121.jpg"></p><p>下面以苹果 Mac 电脑修改 hosts 文件为例，进行介绍：   </p><p>打开访达，点击顶部的「前往」选项卡，选择「前往文件夹」，在弹出的输入框中输入 /etc，点击下方返回的 <code>private &gt; etc</code>，就能进入到存放 hosts 文件的路径。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/20/16792143294333.jpg"></p><p>右击 hosts 文件，选择「复制」，将复制出来的 hosts 文件移动到 Mac 桌面，双击打开文件。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/20/16792145133191.jpg"></p><p>在打开的 hosts 副本文件下方空白的位置，粘贴下面的代码。    </p><pre><code class="hljs accesslog"># New Bing Chat<span class="hljs-number">20.219.54.1</span> bing.com<span class="hljs-number">20.219.54.1</span> www.bing.com<span class="hljs-number">20.219.54.1</span> r.bing.com<span class="hljs-number">20.219.54.1</span> cn.bing.com<span class="hljs-number">20.219.54.1</span> edgeservices.bing.com# New Bing Login<span class="hljs-number">40.126.35.80</span>  login.microsoftonline.com<span class="hljs-number">20.190.163.18</span> login.live.com<span class="hljs-number">13.107.253.59</span> logincdn.msauth.net<span class="hljs-number">13.107.253.59</span> acctcdn.msauth.net<span class="hljs-number">13.107.253.59</span> acctcdn.msftauth.net<span class="hljs-number">13.107.253.59</span> lgincdnvzeuno.azureedge.net</code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/20/16792148893864.jpg"></p><p>按下 Command + S，保存我们粘贴到 hosts 文件的代码，接着对 hosts 副本文件进行重命名，将文件名修改为 hosts，最后再将桌面的 hosts 文件拖回到原来的 etc 文件夹下，覆盖路径下原有的 hosts 文件。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/20/16792152465795.jpg"></p><p>修改电脑的 hosts 文件之后，重新打开 new Bing 的官网 <code>bing.com</code>，如果在顶部的工具栏可以看到「聊天」的选项，那说明你「可能」可以用上 new Bing 了。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/20/16792155037245.jpg"></p><p>之所以说「可能」，是因为当你点击「聊天」进入 new Bing 的页面时，它可能还会弹出下面的提示：   </p><blockquote><p>你已加入候补名单（意思就是你当前没法使用 new Bing，还要继续排队）   </p></blockquote><p>如果你信了它的鬼话，按照下方的「更快地访问新必应」给出的提示进行操作，最后等了半个月、一个月甚至更长时间，会发现还是没什么卵用，一点动静都没有。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/20/16791930635111.jpg"></p><p>我不知道这个到底是谁的锅，但千万不要「傻乎乎」地等待，要想早日用上 new Bing，还得靠自己，要点在这：   </p><ul><li>不要用 QQ 邮箱注册的<strong>微软账号</strong>去申请 new Bing 使用资格，这样很大概率会一直显示在排队          </li><li>如果你之前用的是 QQ 邮箱，不妨重新注册一个微软账号，可以使用微软的 Outlook 或者 Google 的 Gmail 邮箱     </li><li>在注册微软账号时，将电脑🪜切换为全局模式，且 IP 地址最好为美国/日本/韩国/香港/法国/荷兰    </li><li>注册微软账号的过程中，需要我们填入国家/地区的信息，这里填入的信息取决于上一步的 IP 地址，如果 IP 地址为日本，那国家/地区就选择日本       </li></ul><p>注册一个新的微软账号后，再次提交使用 new Bing 的申请，这回应该就会<strong>立即通过申请</strong>，你也就能在 Edge 浏览器中使用 new Bing。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/20/16792165289003.jpg"></p><p>👆上面的截图来自 Edge 浏览器 Dev 版本，实测 Edge 最新的正式版 v111 也能使用 new Bing 了。  </p><p>到这里，如果你的 Edge 浏览器还无法使用 new Bing，还可以尝试下面的办法：  </p><p>点击必应搜索首页右上角的按钮，点击「设置 &gt;&gt; 国家/地区」，注意要把这里的信息更改为非我国的位置。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/20/16792167066961.jpg"></p><h2 id="在-Chrome-浏览器中使用-new-Bing"><a href="#在-Chrome-浏览器中使用-new-Bing" class="headerlink" title="在 Chrome 浏览器中使用 new Bing"></a>在 Chrome 浏览器中使用 new Bing</h2><p>如果是在 Chrome 浏览器中打开 new Bing 的「聊天」功能，它会提示我们，只有在 Edge 浏览器上才能体验这一功能。      </p><p>如果你不想为了这个功能，在电脑上额外安装 Edge 浏览器，那有没有别的办法呢？   </p><p>——有的，安装一个<strong>浏览器插件</strong>即可。           </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/20/16792164344131.jpg"></p><p>这个浏览器插件的名称为 Bing Unchained - Use new Bing in Chrome，可从 Chrome 插件商店直接安装。  </p><p>无法访问 Chrome 插件商店的朋友，可以点击下方的链接，从网盘直接下载插件文件：   </p><p><a href="https://pan.quark.cn/s/04603f4cedaa">https://pan.quark.cn/s/04603f4cedaa</a></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/20/16792172268165.jpg"></p><p>在 Chrome 浏览器安装插件之后，刷新 new Bing 页面，就能直接在 Chrome 浏览器中使用 new Bing 啦！    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/20/16792175891565.jpg"></p><h2 id="扫码加入我的社群「效率工具指南」"><a href="#扫码加入我的社群「效率工具指南」" class="headerlink" title="扫码加入我的社群「效率工具指南」"></a>扫码加入我的社群「效率工具指南」</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/20/48844555552858t2.JPG" alt="48844555552858T2"></p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>微软</tag>
      
      <tag>newBing</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iPhone钱包添加交通卡被锁定，如何避免数据丢失【效率工具指南】</title>
    <link href="/2023/03/11/2023-3-11-iPhone_apple_pay/"/>
    <url>/2023/03/11/2023-3-11-iPhone_apple_pay/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/aaATPaQYMOrN0rzZOfK6-g">效率工具指南</a>」<br>文/彭宏豪         </p><p>Hello 各位好，我是小豪。   </p><p>这周有个同事用的 iPhone 手机，不慎被锁定🔒了，在尝试解锁时，输入太多次错误的锁屏密码，导致最后屏幕显示「iPhone 已停用」，不得不抹除手机的数据，将其还原为未设置锁屏密码的状态。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/11/16785146676993.jpg"></p><p>看到这你可能会纳闷，手机天天用，好端端地，又不是失忆了，怎么会忘了手机的锁屏密码？   </p><p>同事的手机被锁，感觉有一小小小小小部分责任在我，他听我说可以在 Apple 钱包里添加一张「深圳通/交通卡」，在坐地铁过闸机的时候方便一点，<strong>手机感应一下就能过闸</strong>，而不需要特地打开微信，找到乘车码小程序。   </p><p>不过没想到的是，在 Apple 钱包添加交通卡的过程中，会提示我们设置一个支付密码，这个支付密码会替换掉原来的锁屏密码……</p><p>这一步有点坑，如果你把支付密码设置为锁屏一样的密码，那你大概率不会遇到手机被锁定的问题，而如果你是个「马大哈」，随手设置了一个不容易记住的密码，那等你要用手机过闸时，会遇到一件莫名其妙的事情——iPhone 会提示你输入密码，而且你可能会误以为是让你输入锁屏密码，但其实它想让你输入的是 Apple 钱包的支付密码。    </p><p>此时你如果不冷静下来回忆一下，之前是否有设置过其他的密码，就是直愣愣地输入 N 次锁屏密码，那你的手机就会被锁定，而且可能还会引发一系列问题：上班迟到、约会迟到、航班延误、无法购买东西、没法联系别人……       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/11/img5055.PNG" alt="IMG_5055"></p><p>不止是我的同事遇到这个问题，我在网上看到有网友也分享了类似的遭遇……   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/11/16785147247280.jpg"></p><p>遇到这种问题，越发地感觉到 Plan B 的重要性：   </p><ul><li>出门在外，最好备点现金，现金可以放在手机壳里    </li><li>最好要有一部备用的手机📱，平常时不时给备用手机充下电，需要用到的时候可以随时使用       </li><li>最好有 2 张手机卡，2 张手机卡最好安在 2 台不同的手机上，分散风险    </li><li>备用手机里最好也要有重要联系人的电话号码，这里推荐使用「<strong>QQ同步助手</strong>」来实现通讯录在不同移动设备上的同步（如果有更好的通讯录同步工具，欢迎在评论区告诉我～）         </li><li>应该还有其他的，欢迎在评论区补充   </li></ul><p>再说回到同事手机被锁之后，后续的处理：   </p><p>他的手机最后已完全被锁定，我猜即便是输入正确的密码，也无法解开锁，唯一可行的办法是，抹除手机数据，重置手机。   </p><p>但重置之前，和许多人一样，会纠结手机上的数据（舍不得手机里的相册）就这么丢失了，更惨的是，他平常没有备份数据的习惯，我看到他的 iCloud 上一次备份相册的时间，还停留在遥远的 2021 年……        </p><h2 id="数据备份"><a href="#数据备份" class="headerlink" title="数据备份"></a>数据备份</h2><p>通过他这件事，也让我想到自己在「保险」方面薄弱的意识，数据备份、商业保险，这两件事看似不相关，但也有一些共性：   </p><ul><li>平常我们可能会觉得数据备份没啥必要，等真正遇到类似的情况，又会后悔以前为啥不做好备份            </li><li>我们可能会觉得买不买保险无所谓，不买还省钱了，等遇到意外的情况，又会后悔当初为啥不买保险……   </li></ul><p>是不是很相似、很真实呢？    </p><p>看到这里，希望各位日常在使用手机或电脑时，可以有意识地培养数据备份的习惯。    </p><p>说来惭愧，我在用的电脑，其实也没有备份数据的习惯，都是裸机在跑😂    </p><p>而手机的备份，也比较简单，就是开个 21 元/月的 iCloud 空间，让手机在连接 Wifi 的情况下，自动上传到云空间。   </p><p>如果不舍得开 iCloud 的话，也可以试试用国内的一些网盘应用，大多也都带有自动上传相册的功能，不过我不信任这些应用，从长远考虑，我觉得还是苹果的云服务更靠谱一些。   </p><p>你说 21 元/月或者 68 元/月的云空间，真的很贵吗？其实也并没有，<strong>只不过是大多数人觉得自己的数据不重要罢了</strong>，因为不重要，所以不舍得花那个钱，还会觉得那是冤枉钱。     </p><p>相关资料：  </p><p><a href="https://support.apple.com/zh-cn/HT212951">如果你看到“iPhone 不可用”/“iPad 不可用”信息或“安全锁定”屏幕</a>，<a href="https://support.apple.com/zh-cn/HT212951">https://support.apple.com/zh-cn/HT212951</a>     </p><p><a href="https://support.apple.com/zh-cn/HT204306">如果你忘记了 iPhone 密码</a>，<a href="https://support.apple.com/zh-cn/HT204306">https://support.apple.com/zh-cn/HT204306</a>       </p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>数据备份</tag>
      
      <tag>iPhone</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>滴答清单的3个隐藏功能，真的让人惊喜！</title>
    <link href="/2023/03/05/2023-3-5-didaqingdan/"/>
    <url>/2023/03/05/2023-3-5-didaqingdan/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/6TXuHHPvZip1blluZfpWNQ">效率工具指南</a>」<br>文/彭宏豪    </p><p>Hello 各位周末好，我是小豪。   </p><p>说到滴答清单，很多人都会把它和 Todolist(待办列表)、GTD 等联系在一起，但其实随着滴答清单的更新，它的用途也变得更加广泛，你可以把它用于：   </p><ul><li>随时记录灵感 ➡️ 便签功能   </li><li>项目管理 ➡️ 看板、时间线视图  </li><li>践行番茄工作法 ➡️ 专注功能     </li></ul><h2 id="便签"><a href="#便签" class="headerlink" title="便签"></a>便签</h2><p>在介绍滴答清单的便签功能之前，这里想先提一下 Mac 电脑上的一个功能：<strong>快速备忘录</strong>。       </p><p>忘了具体是从哪个版本开始，苹果在 macOS 系统上加了快速备忘录的功能，当我们把鼠标指针移动到电脑桌面右下的角落，角落会弹出一个小窗口。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779158600821tuya.jpg"></p><p>点击这个小窗口，就会快速启动苹果自带的「备忘录」App，方便我们随时记录灵感。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779156860184.jpg"></p><p>不过这个功能仅限在苹果设备上使用，如果你手里只有 Windows 电脑，那我更推荐你使用滴答清单的「便签」功能。</p><p>同样地，当你想随手记录东西的时候，按下<strong>添加便签</strong>的快捷键，就能在桌面上快速创建一个便签。   </p><p>滴答清单的便签外观，是不是更接近于我们用过的便利贴呢？        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779163982413.jpg"></p><p>添加便签的快捷键，可以在设置面板「快捷键 &gt;&gt; 全局操作」中查看👀，我已经忘了自己是否修改过这个快捷键了……      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779829670330tuya.jpg"></p><p>添加一个便签之后，再次按下快捷键，可以继续添加便签，接着我的桌面上就贴满了密密麻麻的便签。    </p><p>便利贴是做完一张，撕掉一张，在这里是做完一件，叉❌掉一个（小窗口）。          </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779169811494tuya.jpg"></p><p>在桌面上添加的便签，默认情况下会被收纳到滴答清单的「收集箱」中，因此即便你把桌面上的便签关闭了，你之前在便签中输入的内容，也是会保留在滴答清单中的，无需担心记录丢失～          </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779175479284tuya.jpg"></p><p>对于那些在收集箱或清单中创建的任务，我们同样可以把它以便签的形式「贴」到桌面上：   </p><p>右击任意一个任务，选择「打开便签」，选中的任务就会以便签的样式贴到桌面。          </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779807832956tuya.jpg"></p><p>当你把鼠标指针移动到任意一张便签的左下角时，它会显示「日期与提醒」，点击文字，可以给便签添加截止日期或提醒，这个操作与滴答清单中添加任务时是一致的。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779177661786.jpg"></p><p>给便签添加日期时，还有一个<strong>小细节</strong>，如果我们添加的日期是今天，滴答清单还会把当前便签自动归类到「时间管理四象限」中的「不重要但紧急」。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779148086456.jpg"></p><h2 id="看板-时间线视图"><a href="#看板-时间线视图" class="headerlink" title="看板/时间线视图"></a>看板/时间线视图</h2><p>之前在一篇文章《<a href="https://mp.weixin.qq.com/s/YkK8Qw3b9MCslauc83mAIQ">这款好用的清单工具，新增的功能让人好感度+233</a>》中介绍过，滴答清单的清单分为 2 种类型：   </p><ul><li>任务清单   </li><li>笔记清单   </li></ul><p>通常情况下，我们创建的清单都是任务清单。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779837143309.jpg"></p><p>在任务清单中添加的每一项任务，默认会自上往下排列，新添加的任务会排在旧任务的上方，这种默认的呈现方式被称作「列表视图」。    </p><p>点击任务清单右上角的「…」，在浮窗中可以将当前的视图切换为另外 2 种：   </p><ul><li>看板视图   </li><li>时间线视图     </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779833951275tuya.jpg"></p><p>滴答清单的<strong>看板视图</strong>如下，相信用过其他<strong>看板工具/项目管理工具</strong>的朋友，对这个视图并不陌生。   </p><p>任务清单中未分类的任务，都会放在「未分组」下面，点击旁边的「新分组」，给分组命名，之后就可以把未分组中的任务拖拽到相应的分组下面，更好地管理或分类所有任务。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779858638996tuya.jpg"></p><p>另外，任务清单还能切换到「<strong>时间线视图</strong>」，如下图所示，这种视图更专业的说法应该是叫「甘特图」。            </p><p>时间线视图提供了 3 种时间维度——月、周、日，下面是在「日」的维度下，点击视图的空白处，可以在对应的日期下方创建任务。     </p><p>这里还有一个小细节，将鼠标指针放到任务日期和主题中间的分隔线上方，可以设置任务的<strong>进度</strong>，同时它会在时间线的任务块右侧，以<strong>饼状图</strong>可视化呈现进度的百分比。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779864919486tuya.jpg"></p><h2 id="专注"><a href="#专注" class="headerlink" title="专注"></a>专注</h2><p>滴答清单的「专注」功能，有点像是在软件中集成了一个番茄钟或是潮汐 App。   </p><p>在电脑上使用这一功能，需要先打开设置面板，在「功能 &gt;&gt; 专注」中启用番茄计时。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779872209976tuya.jpg"></p><p>启用之后，滴答清单左侧栏会新增一个「专注」的按钮🔘，专注功能提供了番茄钟应用常见的 2 种模式：   </p><ul><li>番茄专注（倒计时 25 分钟）          </li><li>正计时</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779872358702tuya.jpg"></p><p>在使用专注功能的同时，我们还可以点击右上角的<strong>小喇叭</strong>，给专注加首 BGM，这些 BGM 更准确的说法应该是「<strong>白噪音</strong>」，模拟自然或现实环境中可以听到的各种声音，例如炉火、炸薯条、车流、咖啡馆、晨间、夏日、深海等。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779833262346tuya.jpg"></p><p>关于白噪音，ChatGPT 给出的解释如下：    </p><blockquote><p>白噪音是一种特殊的声音，是指频率范围内的所有频率具有相同的能量，并且在相同时间内是等能量的。它被称为“白”噪音，因为与白光具有相似的性质，白光包含所有可见颜色的等量的光，而白噪音包含所有可听频率的等量声音。白噪音可能听起来像是一个持续而均匀的静音，但实际上，它确实包含了所有频率的声音，只不过每个频率都以相同的强度存在。</p><p>白噪音常被用于减小噪音干扰，帮助人们更好地休息、集中注意力或者缓解压力。</p></blockquote><h2 id="快速设置日期或添加标签"><a href="#快速设置日期或添加标签" class="headerlink" title="快速设置日期或添加标签"></a>快速设置日期或添加标签</h2><p>最后，再补充 2 个使用滴答清单的小细节：   </p><p>当我们在任务详情中编辑任务内容时，如果想要给当前任务<strong>设置日期</strong>，可以按下星号✳️键，这时会弹出类似下图的 4 个选项：  </p><ul><li>今天的日期</li><li>明天的日期</li><li>7 天后的日期</li><li>下个月第 1 天的日期    </li></ul><p>从中选择一个，选中的日期就会被设置为任务的日期或截止时间。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779813535914tuya.jpg"></p><p>另外，在编辑任务详情时，我们还可以给任务快速<strong>添加标签</strong>：    </p><p>按下井号 #，会弹出一个浮窗，上面列有你之前创建过的所有标签。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779822175780tuya.jpg"></p><p>如果想创建一个新的标签，滴答清单也是支持的，在井号后面直接输入标签名，就能创建一个新的标签。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/05/16779822786376tuya.jpg"></p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>滴答清单</tag>
      
      <tag>项目管理</tag>
      
      <tag>便签</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在Notion中写公众号文章，这款浏览器插件真的绝绝子！</title>
    <link href="/2023/03/03/2023-3-3-notion_converter/"/>
    <url>/2023/03/03/2023-3-3-notion_converter/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/7zj0ejyAymrQ8woqirYzHQ">效率工具指南</a>」<br>文/彭宏豪      </p><p>Hello 各位好，我是小豪。</p><p>之前推荐过好多次 Notion 这款软件了，但说实话，<strong>在 Notion 中写公众号文章，这还是头一回</strong>。</p><p>之所以不在 Notion 中写公众号，主要是考虑到从 Notion 把文章最终搬到公众号上，需要经历比较多的环节：</p><p>Notion 文章导出 Markdown 文件 👉 用 MWeb 打开 Markdown 👉 把图片上传到腾讯云图床 👉 复制 Markdown 格式的内容，粘贴到在线排版工具 MdNice 👉 将渲染得到的富文本格式粘贴到公众号后台 👉 再在公众号后台微调一下格式</p><p>环节一多，整个写作到发布的流程就会变得特别冗长，流程冗长之后，也会降低我写文章的欲望，步骤太多，容易劝退人。</p><p>就像我现在做的视频内容一样，若无必要，用最简单的方式就好：录屏后简单剪辑一下，不加字幕直接上传，如果要去弄太多的步骤，我既没有那个时间，也会让我不想去碰这个东西……</p><p>刚起步做的事情，遵循<strong>简单最小（短）原则</strong>就行，才越不容易半途而废。   </p><p>说回到文章的主题上来，这回选择在 Notion 上写公众号文章，主要是发现了一个工具，它可以把前面冗长的流程简化为：</p><p>在 Notion 中写文章 👉 在 Notion 中将文章渲染为公众号支持的富文本格式 👉 将渲染好的文章粘贴到公众号后台</p><p>只用 3 步，一气呵成！</p><p>那还不得赶紧把这个工具拉出来溜溜，分享给同在用 Notion 和写公众号的朋友，如下图 ⬇️</p><p>这工具的名字叫 <strong>Notion converter - 笔记转换工具</strong>，是一款<strong>浏览器插件</strong>，目前已上架到 Chrome 和 Edge 浏览器的插件商店，打不开 Chrome 插件商店的朋友，可以在 Edge 浏览器上安装这款插件。  </p><p>Edge 插件商店地址：</p><p><a href="https://microsoftedge.microsoft.com/addons/detail/notion-converter-%E7%AC%94%E8%AE%B0%E8%BD%AC%E6%8D%A2%E5%B7%A5%E5%85%B7/donmgcoapjphmanmlfhhgcnlkmikggdn">https://microsoftedge.microsoft.com/addons/detail/notion-converter-笔记转换工具/donmgcoapjphmanmlfhhgcnlkmikggdn</a></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/04/untitled.png" alt="Untitled"></p><p>安装插件之后，回到网页版的 Notion，打开任意一个 Notion 页面，页面右上角会增加一个<strong>向左指的三角形</strong> ◀️ <strong>图标</strong>，如下图。</p><p>看到网上有人反馈说，这个小图标太不显眼了，还以为安装的插件不起作用，特此附上一张截图。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/04/untitled-1.png" alt="Untitled"></p><p> </p><p>点击小图标，插件就会执行<strong>渲染</strong>操作，在右侧显示 Notion 内容渲染后的效果，如下图右侧所示。</p><p>值得一提的是，这个插件的渲染并不是实时更新的，得到经过渲染的内容后，如果你重新编辑了 Notion 中的内容，那就要再次点击向左指的三角形 ◀️ 图标，再次执行渲染操作。  </p><p>点击向左指的三角形 ◀️ 图标下方的<strong>剪刀</strong> ✂️ <strong>图标</strong>，就能将渲染后的内容复制到系统剪贴板，此时再打开公众号后台，按下粘贴操作的快捷键，就能将内容粘贴到公众号后台。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/04/untitled-2.png" alt="Untitled"></p><p>最后再在公众号后台微调一下行间距、或者字号等参数，配上文章，就能直接发布啦！   </p><p>这么看下来，有了这款浏览器插件，对于<strong>一边用着 Notion，一边写公众号的人</strong>来说，真的不要太方便。    </p><p>看到这里的朋友，有空可以去尝试一下，没准你就会爱上这个新的<strong>写作工作流</strong>。</p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>Notion</tag>
      
      <tag>插件</tag>
      
      <tag>公众号</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客SSL证书到期，如何免费续期更换【效率工具指南】</title>
    <link href="/2023/03/01/2023-3-1-ssl/"/>
    <url>/2023/03/01/2023-3-1-ssl/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/ybhgs5YmmcBGTsZ3qqvFAA">效率工具指南</a>」<br>文/彭宏豪    </p><p>Hello 各位好，我是小豪。    </p><p>连续两年差不多这个时候，都会收到腾讯云☁️发来的一封邮件，告知我博客所用的 SSL 证书快到期了，让我提前续期证书，或是重新申请证书，以免影响到我的业务。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16775986045262.jpg"></p><p>说影响到我的业务，其实也没那么夸张，毕竟我的博客没法赚钱，反而还要倒贴钱——<strong>每年租用服务器的费用、每个月的图床支出</strong>……对不能通过博客赚到钱的人来说，搭建博客反而是一种负担。             </p><p>SSL 证书过期带来的直接影响，就是当有人打开网站时，浏览器会出现类似下图的提示，且网友不能看到网站的内容，必须得点击左下角的「高级」，再点击弹出的「继续访问」，才能访问网站。   </p><p>因为增加了这一步操作，且考虑到不少人一看到这个风险提示就会下意识地关掉网页，因此对于业务性质的网站，SSL 证书过期会导致网站的 UV 极速下滑。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16775991084503.jpg"></p><p>前面的铺垫简单解释了 SSL 证书的作用，接下来就以<a href="https://penghh.fun/">我的 Hexo 博客</a>为例，说下更换 SSL 证书的步骤：   </p><h2 id="在腾讯云后台免费申请-SSL-证书"><a href="#在腾讯云后台免费申请-SSL-证书" class="headerlink" title="在腾讯云后台免费申请 SSL 证书"></a>在腾讯云后台免费申请 SSL 证书</h2><p>我的 Hexo 博客用的是腾讯云的服务器，因此这里需要去到腾讯云服务器的后台，其他云服务厂商的操作应该也是类似的。     </p><p>打开腾讯云官网，点击顶部导航栏「产品」，在下方的搜索框输入 SSL，点击下方返回的 SSL 证书。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16775996859705.jpg"></p><p>点击下方的「产品控制台」，进入 SSL 证书管理后台。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16775997697867.jpg"></p><p>如果你和我的情况一样，之前申请的 SSL 证书快到期了，后台会有一个「快速续期」的选项，点击进入新的页面。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16775973567537.jpg"></p><p>打开的页面会让我们选择 SSL 证书的签发机构，这里我选择的是免费证书，签发机构也只有一家——亚洲诚信。    </p><p>如果是首次申请 SSL 证书，需要填入「证书绑定域名」，域名验证放方式选择「自动DNS验证」即可，输入你的邮箱，最后点击下方的「提交」按钮。     </p><p>稍等一小会，没有遇到其他问题的话，它很快就会通过我们的申请。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16775999861020.jpg"></p><p>SSL 证书审核通过后，点击腾讯云右上角的「站内信」，打开腾讯云给我们发的邮件，如下图，点击下方的蓝色按钮，前往证书管理控制台。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776001976927.jpg"></p><p>在打开的页面，找到下图的「手动部署」，点击蓝色的超链接，下载证书文件。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776002996368.jpg"></p><p>在 SSL 证书的下载页面，还需要根据服务器（后端服务）使用的语言，来选择要下载的文件。   </p><p>这里就要根据自己博客的具体情况来选啦，我的 Hexo 博客服务器端使用的是 Nginx，因此这里就点击 Nginx 右侧的「下载」按钮。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776003630723.jpg"></p><p>下载下来会得到一个安装包，解压安装包，里面会有 4 个文件，但其实我们只需要用到其中的 2 个文件，分别是以 <code>.crt</code> 和 <code>.key</code> 为后缀的文件。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776006285879.jpg"></p><h2 id="上传-SSL-证书前的准备"><a href="#上传-SSL-证书前的准备" class="headerlink" title="上传 SSL 证书前的准备"></a>上传 SSL 证书前的准备</h2><blockquote><p>这一步有一点点麻烦，我在折腾的过程中也是卡在这一步了。    </p></blockquote><p>要将电脑本地的 SSL 证书文件上传到远端服务器，有多种方式，稍微硬核一点的方法是通过电脑的终端上传，但因为我不习惯使用命令行，而且缺少了图形化的界面，这会让我操作起来有点不踏实，生怕把原本正常的东西搞砸了🤦‍♂️    </p><p>因此，这里我用的是一个叫 <strong>Royal TSX</strong> 的工具，我有点难说清这是一款什么样的软件，因此这个任务交给 Notion AI 来解释：    </p><blockquote><p>Royal TSX 是一款跨平台的远程桌面管理软件，支持 macOS、Windows、iOS 和 Android 系统。它可以管理多种远程桌面协议，包括 Microsoft Remote Desktop Protocol (RDP)、Apple Remote Desktop (ARD)、VNC、SSH 和 Telnet 等。</p><p>通过 Royal TSX，用户可以轻松地连接和管理多个远程计算机和服务器，以及执行各种远程管理任务和操作，如文件传输、终端访问、进程管理和脚本执行等。</p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776016671750.jpg"></p><p>Royal TSX 官网下载：<br><a href="https://royalapps.com/ts/mac/download">https://royalapps.com/ts/mac/download</a>     </p><p>简单来讲，这里会用到 Royal TSX 的 SSH 连接和文件传输（SFTP 连接）功能，将我们的电脑和远端的服务器连接起来，同时软件提供了图形化的界面，只要简单拖拽就能实现文件的上传和下载，更适合于没有计算机背景的人。   </p><p>首次打开 Royal TSX，首页显示的 Getting started 给我们提供了使用软件的引导：  </p><ul><li>安装插件     </li><li>创建一个文档      </li><li>添加你的第一个连接      </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16775461363039.jpg"></p><p>前面 Notion AI 在介绍 Royal TSX 时，说它可以管理多种远程桌面协议，软件能够支持多种协议，实际上是通过安装插件来实现的，<strong>要用到哪种协议，就给软件安装相对应的插件</strong>。  </p><p>下面以 macOS 版本的 Royal TSX 为例，点击屏幕左上角的 Royal TSX，选择 Plugins。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776043585175.jpg"></p><p>点击插件面板上方的 Available Plugins，找到下面两个插件——Terminal 和 File Transfer，依次点击插件右侧的 Install 按钮，安装这两个插件。  </p><p>安装插件之后，软件会提示重启软件，按照提示重启即可。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776045265102.jpg"></p><h3 id="SSH-连接"><a href="#SSH-连接" class="headerlink" title="SSH 连接"></a>SSH 连接</h3><p>点击左上角的 File 选项卡，选择 New Document，新建一个文档，接着按下 Command + S，会弹出一个保存的窗口，可设置文档的名称，你可以自定义文档名称，也可以保持默认的文档名 Connections。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776047432598.jpg"></p><p>单击选中刚创建的文档 Connections，点击左下角的加号 + ，在弹出的面板，选择 Terminal，打开一个终端。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776051302000.jpg"></p><p>右击刚创建的 Terminal，选择 Properties，打开属性面板。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776052760854.jpg"></p><p>打开的属性面板如下，要填入一些信息：  </p><ul><li>Display Name：可以给终端起个有辨识度的名字，方便与等下要添加的「文件传输」区分开来              </li><li>Connection Type：连接类型选择 SSH 连接，后面的 Port 为端口，保持默认的 22 即可           </li><li>Computer Name：这里需要输入服务器的公网 IP，这个可以从腾讯云服务器的管理后台查到🔍        </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776053921124.jpg"></p><p>接着将左侧切换到 Credentials 选项卡，这里同样要更改一下默认的配置：    </p><p>将右侧的下拉选项更改为下图中的 Specify username and password，选择这个之后，还要在下方填入服务器的用户名和密码。   </p><p>服务器的用户名默认为 root，如果你没改过的话，填入 root 即可，接着再输入服务器的登录密码，如果不慎忘记了登录密码，可以到腾讯云管理后台重置密码。   </p><p>最后点击右下角的 Apply &amp; Close，应用当前的设置，同时关闭设置面板。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776057282966.jpg"></p><h3 id="SFTP-连接"><a href="#SFTP-连接" class="headerlink" title="SFTP 连接"></a>SFTP 连接</h3><p>再次选中文档 Connections，点击左下角的加号 + ，在弹出的面板，选择 File Transfer，添加文件传输。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776061136083.jpg"></p><p>和前面配置 SSH 连接一样，选中刚添加的 File Transfer 并右击，选择 Properties，打开属性面板。   </p><ul><li>Connection Type：连接类型选择 SFTP，端口为 22   </li><li>Computer Name：同样是输入服务器的公网 IP     </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776063217811.jpg"></p><blockquote><p>接下来的这一步就是我在折腾的时候卡住的地方，不确定其他人到这一步会不会也会被卡住，仅作为提示。   </p></blockquote><p>将左侧切换到 Credentials 选项卡，你可以像前面一样，通过用户名和密码实现 SFTP 连接。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776064180109.jpg"></p><p>在上面的设置面板填入用户名和密码时，它并不会立即进行校验，而是当我们右击刚添加的「文件传输」，选择 Connect 时，它才会对我们填入的服务器用户名和密码进行校验。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776067324690.jpg"></p><p>在 SFTP 校验这一步，Royal TSX 给我弹出了一个错误的提示，说我输入的服务器用户名或密码有误……无法连接到远程的服务器。   </p><blockquote><p>如果你没有遇到这个错误提示，那下面的解决方法的部分可以直接跳过。     </p></blockquote><p>尝试了好几次，而且是在一位博主「老郭种树」发布的视频《<a href="https://www.bilibili.com/video/BV1xJ411y7mx/">【补充】Royal TSX SSH 密钥文件登录远程服务器</a>》的帮助下，我才找到了另一种解决方法。  </p><p>除了通过用户名和密码，其实我们还可以通过<strong>密钥文件</strong>登录/连接到远程的服务器。     </p><p>关于如何生成密钥文件，操作比较复杂，可以参考上面提到的视频，扫描二维码即可观看：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/qrcodea--a1.jpg" alt="QRcode_A — a1"></p><p>在本地生成密钥文件，同时将公钥和私钥上传到服务器的 <code>.ssh</code> 路径后，我们再次打开「文件传输」的属性面板，切换到 Credentials 选项卡。  </p><p>点击 Private Key File，切换到使用密钥文件登录的方式：   </p><p>将电脑本地路径 <code>user/用户名/.ssh</code> 下的私钥文件 <code>id_rsa</code> 拖拽添加到下方的 Private Key File 中，同时在下方输入生成密钥文件时所用的密码，这样就完成了密钥文件登录方式的配置。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776075558350.jpg"></p><p>关闭设置面板，再次右击「文件传输」，选择 Connect，操作无误地话，这回就能正常连接到远端的服务器了。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776067324690.jpg"></p><h2 id="将-SSL-证书文件上传到远端服务器"><a href="#将-SSL-证书文件上传到远端服务器" class="headerlink" title="将 SSL 证书文件上传到远端服务器"></a>将 SSL 证书文件上传到远端服务器</h2><p>完成 Royal TSX 的配置之后，接下来就是借助 Royal TSX，将本地的 SSL 证书文件上传到远端的服务器。   </p><p>前面我们右击「文件传输」，选择 Connect 之后，会打开下图的界面，左侧是电脑本地的文件，右侧是远端服务上存放的文件。     </p><p>在右侧的服务器根路径下，新建一个名为 ssl 的文件夹，进入文件夹，再创建一个名为 Nginx 的子文件夹。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776315863971.jpg"></p><p>打开 Nginx 文件夹，将本地的 2 个证书文件拖拽上传到文件夹中。   </p><blockquote><p>注：这里我对上传后的两个文件进行了重命名。    </p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776319492396.jpg"></p><p>选中 Royal TSX 左侧的 Terminal(这里我将它重命名为「远程服务器」)，选择 Connect，打开一个黑乎乎的窗口。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776320779411.jpg"></p><p>在窗口中依次输入如下命令：   </p><p>cd ssl/Nginx<br>chmod 755 penghh.crt<br>chmod 755 penghh.key<br>cd ../..<br>nginx -s reload      </p><p>第 1 行命令，是进入到我们刚创建的 Nginx 文件夹中；<br>第 2、3 行命令，是将我们刚上传的两个 SSL 文件的权限提升到 755；<br>第 4 行命令，是从 Nginx 文件夹返回到服务器的根路径下；<br>第 5 行命令是重启服务。          </p><p>完成以上操作后，就算是大工告成了。   </p><p>此时去到浏览器，打开个人博客或网站，点击浏览器地址栏的小锁，按照下面的步骤，查看证书的截止日期，如果时长为一年，那就是换上了新的 SSL 证书啦！        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/03/01/16776327515485.jpg"></p><p>对不懂技术的人，折腾起来还是有点麻烦的，但最后决定把操作过程写出来，以后跟着这个操作，心里就有谱了。   </p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>Hexo</tag>
      
      <tag>SSL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>国内的在线文档工具--石墨文档、腾讯文档、语雀文档，选哪款好？</title>
    <link href="/2023/02/18/2023-2-18-online_document/"/>
    <url>/2023/02/18/2023-2-18-online_document/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/X_6nqMjUDfiFtB8LT3cb6g">效率工具指南</a>」<br>文/彭宏豪    </p><p>Hello 各位好，我是小豪。   </p><p>作为一名同时开过石墨文档、腾讯会员、语雀文档会员的「韭菜」，今天就来简单介绍这 3 款在线文档的特点和缺点。  </p><p>先放上个人结论：  </p><ul><li>石墨文档：功能可能是最少的，迭代也比较慢，但却是最好看、最有品味的，缺点是非会员会带有广告         </li><li>腾讯文档：中规中矩，大厂豪横，限制最少，个人觉得外观有点丑，要不是工作需要，我不想用腾讯文档😂                        </li><li>语雀文档：编辑器做得很棒👍，知识库深得我心，缺点是不开会员就无法公开分享文档    </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767277000780.jpg"></p><h2 id="石墨文档"><a href="#石墨文档" class="headerlink" title="石墨文档"></a>石墨文档</h2><p>石墨文档，应该是我最早接触的在线文档工具，从上大学那会就开始用了，那会觉得这东西就是变革性的东西，把原本需要在本地编辑的文档直接挪到了线上。  </p><p>当别人还在用 Word 的时候，你已经用上了石墨文档。     </p><p>最初对石墨文档的印象是云端「办公三件套」，即在线文档、表格和幻灯片，这些年下来，石墨文档陆续加入了其他的文档类型，如：  </p><ul><li>表单       </li><li>应用表格（没用过，应该是多维表格）    </li><li>白板    </li><li>思维导图    </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767056345923.jpg"></p><p>和许多笔记软件一样，石墨文档也加入了这种已成为文档编辑器「标配」的交互方式——斜杠插入，面板顶部会显示「最近使用」的样式或元素。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767040866638.jpg"></p><p>与此同时，石墨文档也支持<strong>长按拖拽</strong>改变文本/元素位置的操作：</p><p>将鼠标指针移动到文本/元素的最左侧，长按弹出的菜单按钮拖拽，可以改变文本在文档中的位置。</p><p>不过，它目前只支持在<strong>垂直方向</strong>上拖拽改变元素的位置，而不能像 Notion 那样，支持多个块横向并排显示，这就少了很多想象的空间。          </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767050851870.jpg"></p><p>这里再说一下石墨文档中的 2 个细节功能：  </p><p>① 在文档中插入视频文件</p><p>石墨文档的「插入」菜单中，没有列出「视频/本地视频」的选项，但其实它是可以插入本地视频的，点击「附件」或「本地音频」，就可以将视频文件插入文档中。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767065530159.jpg"></p><p>本地视频上传到文档后，会显示为一个小卡片，选中小卡片，点击上方的「预览视图」，切换为下面的视图。  </p><p>点击预览窗口左下角的播放按钮，就可以在文档中播放视频。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767067852356.jpg"></p><p>不确定单个文档是否会对上传的视频体积存在限制，但在账号的层面，石墨对容量是有限制的，譬如我买了「个人高级版」，容量空间就有 30 GB。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767070904943.jpg"></p><p>② 中英文混排内容自动添加空格</p><p>另外一个小细节则是，石墨文档可以给<strong>中英文混排</strong>的内容自动添加空格，这个功能，没有强迫症的人可能用不到。    </p><p>点击菜单栏的「智能工具」，选择 排版优化 &gt;&gt; 优化设置，打开的窗口如下图所示，默认勾选「添加半角空格」，下方的小字也对这个选项作出了解释：  </p><blockquote><p>在中文与英文、中文与数字、中文与链接之间添加半角空格</p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767073505875.jpg"></p><p>如果你想使用这一功能，可以在写好文档之后，点击右上角的「智能工具」，选择 排版优化 &gt;&gt; 应用优化。  </p><p>下图中我也举了一个例子，作为优化前后的对比：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767081491589.jpg"></p><p>最后再说一下，未付费情况下，石墨文档存在如下的限制（缺点）：        </p><ul><li>网页端右下角时不时会弹出一些广告</li><li>只支持检索文档标题，不支持全文检索    </li><li>和语雀文档一样，无法公开分享文档，不过石墨文档还可以通过「邀请协作」，在<strong>小范围内</strong>与别人分享你的文档                             </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767092850614.jpg"></p><h2 id="腾讯文档"><a href="#腾讯文档" class="headerlink" title="腾讯文档"></a>腾讯文档</h2><p>腾讯文档，相信不用过多介绍，大家对它都比较熟悉了。   </p><p>和前面介绍的石墨文档一样，它可以创建在线文档、表格、幻灯片、收集表（表单）、思维导图，比石墨文档多了一个在线流程图。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767101228495.jpg"></p><p>此外，腾讯文档还上线了一个「插件库」，外部的第三方应用可以插件的形式集成到腾讯文档中，这些插件划分为 4 个使用场景：   </p><ul><li>在主页中使用（即创建的文件会显示在腾讯文档的主页）</li><li>在文档中使用</li><li>在表格中使用</li><li>在幻灯片中使用</li></ul><p>譬如其中的「<strong>BoardMix协同白板</strong>」插件，是一款集多种创意工具的<strong>在线白板</strong>，可补足腾讯文档本身没有「白板」的功能模块。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767221315298.jpg"></p><p>从插件库安装插件后，对于在主页中使用的插件，使用路径为：</p><p>同样是点击「新建」按钮，选择「<strong>更多类型</strong>」，在二级菜单中就能看到安装的插件，点击插件创建相对应的文件，这些文件会显示在腾讯文档的主页。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767234289593.jpg"></p><p>对于在文档中使用的插件，则可以点击菜单栏右上角的「扩展插件」，在展开的菜单，就能看到所有可以使用的第三方插件。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767237447298.jpg"></p><p>作为定位于多人在线协作的文档，只用一个链接就能将文档共享给其他人，同时依托腾讯本身的社交账号体系，也能很方便地记录浏览过文档的用户 ID。      </p><p>点击文档右上角的「文档操作」，选择「查看浏览记录」，在文档右侧打开的面板，就能查看浏览过当前文档的用户。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767239041829.jpg"></p><p>同时，在「浏览记录」面板的底部，还会提供文档的「浏览量」数据，包含了已登录或未登录状态下查看文档的次数，上方的「已查看」右侧的数字，我猜测应该是处于登录下查看文档的人数。   </p><p>这个特性，也让腾讯文档很适合作为活动宣发、引流的工具，毕竟文档的创建者可以直观地看到活动的曝光，或是粗略地估算转化数据。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767257987210.jpg"></p><p>最后，和前面介绍石墨文档一样，说一下，在未付费的情况下，腾讯文档存在的限制（大厂旗下的产品，限制会少一些）：    </p><ul><li>不支持全文检索   </li><li>从本地导入的文档不得超过 10 MB（上次我想把本地的一个 Word 文档导入腾讯文档，它提示我文件超过 10 MB，要想导入得先开通会员…）        </li></ul><p>腾讯文档其他列在会员方案里的各种权益，比如说高亮文档名、个性赞、个性文档背景、思维导图无节点思维等等，对我来说一点吸引力都没有，反而是它的会员设计，好像要走 QQ 的老路，整各种花里胡哨的东西……           </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767268211445.jpg"></p><h2 id="语雀文档"><a href="#语雀文档" class="headerlink" title="语雀文档"></a>语雀文档</h2><p>到这里，本文已经超出我最初想写的篇幅了，因此最后关于语雀文档的介绍，感兴趣的朋友可以查看我之前发布的一篇文章：</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649921701&idx=1&sn=31d7294575fa3dea6e308dcb7d8d4452&chksm=83a89c88b4df159ee56fcd05b46398f95be7682035f495eb514cf30256eb9c02bbd32c85e6e5&token=1601401092&lang=zh_CN#rd">我又喜欢上语雀文档了</a>      </p><p>最后还要补充我昨天在一篇<a href="https://www.yuque.com/yuque/blog/xpiwo8">文章《语雀的源起、定位与世界观》</a>中看到的一个有意思的说法，直接截图了哈：  </p><p>说到有很多从语雀或者飞书离职的员工，即便是离职之后（和公司没了利益关系），也会自发地向别人安利前东家的产品😂   </p><p>这是一种非常有意思的现象，<strong>我觉得如果一款产品能做到，在离了工作（或是工作以外的时间）、利益无关的情况下，用户还会主动地去使用、向别人安利</strong>，那看到这里的你，如果还没用过，那或许你也应该去尝试一下。              </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/18/16767269983491.jpg"></p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>石墨文档</tag>
      
      <tag>语雀文档</tag>
      
      <tag>在线文档</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>开了代理工具🪜，影响软件打开速度，该咋整？</title>
    <link href="/2023/01/30/2023-1-30-clashx/"/>
    <url>/2023/01/30/2023-1-30-clashx/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/6my8HwwxrJlI6pmjVbixKQ">效率工具指南</a>」<br>文/彭宏豪    </p><p>Hello 各位好，我是小豪。   </p><p>临时想来写一篇短文章，这个灵感来自我今早在公司群询问公司同事的一个问题：    </p><p>开了🪜软件，但在非全局代理的情况下，还是会影响国内某些在线软件的打开速度，即这些软件还是走了代理流量，导致打开速度变慢，该怎么解决呢？     </p><p>群里资深的杨工回复了一句：  </p><p>​&gt; 网址过滤<br>​<br>​难道高手都是惜字如金，抑或是大道至简？<br>​<br>​不过杨工回复的这 4 个字，再配合我在用的🪜软件，两个短语作为联合关键词，放到 Google 中一搜，找到了一篇貌似是解决方法的文章：<br>​<br><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/30/16750082595884.jpg"></p><p>瞟一眼后我就先收藏到 Cubox 里，等着晚上回家试一下～   </p><p>不试不知道，一试还让我找到了比上图更便捷的解决方法，至于为啥更简单，原因也很简单：主要是我用的🪜软件从最开始的 ClashX 变成了后来的 ClashX Pro。   </p><p>各位千万不要条件反射，一看到软件名多了 Pro，就以为软件要钱、软件会更复杂，这在 ClashX 这里是不存在的，因为 Pro，它好像反而变得更傻瓜了😂<strong>它把复杂留给了自己，把简单给了用户</strong>，而且和 ClashX 一样是<strong>免费</strong>的。   </p><p>相比 ClashX，ClashX Pro 目前我感知到的最直观的优点有 2 个—— </p><ul><li>增强模式：让终端轻松实现全局代理     </li><li>自定义网址白名单/过滤规则     </li></ul><p>过去在终端中输入命令下载一些东西时，经常会遇到网络连接失败的提示，这个问题对不懂技术的人解决起来比较麻烦。。。至少对我而言是这样。    </p><p>而有了 ClashX Pro，在终端中输入命令之前，打开软件菜单，开启「增强模式」，再回到终端输入并运行命令，大概率就能解决上面说到的网络连接失败的问题。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/30/16750088511232.jpg"></p><p>ClashX Pro 的另外一个优点，就可以解决这篇短文章的主题：想让国内的某些软件不走代理流量（走代理流量相当于走了弯路），恢复原本的加载速度，就要用到 ClashX Pro 的「自定义网址白名单/过滤规则」。   </p><p>操作也比较简单：</p><p>右击 ClashX Pro 的图标，选择「配置 &gt;&gt; 更多配置」，打开下图的「ClashX 设置」面板，在下方的「忽略这些主机与域的代理设置」中，<strong>添加不走代理流量的域名或者说网址</strong>，即前面说的「网址白名单」。   </p><p>比如我不想让<strong>国产在线白板软件 boardmix</strong> 走代理流量，因此我在原有设置的后面增加了 2 个过滤规则，这里的网址采用的是「正则表达式」的写法，不懂也没关系，依葫芦画瓢、照着写就好：  </p><p><code>,*.boardmix.cn,*-boardmix.cn</code></p><p>（注：过滤规则以英文的逗号作为分割）   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/30/16750093499802.jpg"></p><p>添加要过滤的网址后，退出并重启 ClashX Pro，重新打开过滤网址对应的网站，按道理打开速度就会恢复正常了。   </p><p>最后还想多说一句，在开启🪜软件的情况下，有时你觉得某个在线工具反而变卡了（尤其是国内的工具），有可能这不是软件本身（性能）的问题，而是我们在用的其他软件影响到它的网络环境了。    </p><p>你说这算谁的锅呢？我觉得好像都有责任😂不过公平来讲，感觉还是软件厂商的责任更多一些。。。  </p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>效率工具</tag>
      
      <tag>Clash</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我又喜欢上语雀文档了</title>
    <link href="/2023/01/07/2023-1-7-yuque/"/>
    <url>/2023/01/07/2023-1-7-yuque/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/919YXtxemTx66Wk2xwJANg">效率工具指南</a>」<br>文/彭宏豪    </p><p>Hello 各位好，我是小豪。  </p><p>去年写过一篇<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649921054&idx=1&sn=9d5ee4b5785d6ef6632ed7898dfc3e67&chksm=83a89233b4df1b257742448ed9c8a2b9be13b59b357f059f5a8c6e85648bcbb2abe7e5a9381a&token=402791595&lang=zh_CN#rd">吐槽语雀文档的文章</a>，没想到过了没多久就打脸了，我把工作中使用的在线文档从石墨换成语雀了，同时还充了语雀会员。  </p><p>有这个转变，还得先感谢网友 @C小调 分享他在语雀上创建的一个知识库，他说<strong>知识库首页的目录，很适合用来呈现我在知识星球上发布的内容</strong>，让未加入星球的用户可以更好地感知社群的价值，同时也方便加入社群的朋友找到自己想要的内容。         </p><p>听到他这么说，当晚就充了语雀的会员，开始用语雀整理社群里的内容，下图是语雀生成的社群内容目录截图。         </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/07/16731006568557.jpg"></p><p>除了这个直观的内容（文档）目录，对比其他的在线文档工具，语雀还有不少亮点：   </p><h2 id="文档被点赞或评论可以收到邮件通知"><a href="#文档被点赞或评论可以收到邮件通知" class="headerlink" title="文档被点赞或评论可以收到邮件通知"></a>文档被点赞或评论可以收到邮件通知</h2><p>在语雀上公开分享的文档，如果被人点赞，或是有人在文档下方留言，就可以收到一封通知邮件。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/07/16731019658818.jpg"></p><p>这个特性，可能有些朋友觉得没啥用，或是稀松平常，但我觉得这种及时反馈，对公开分享的人很重要，尤其是评论通知。  </p><p>在网上分享东西，最开心的事，莫过于分享的内容有人看👀、有人点赞👍、甚至是有人评论💬，这 3 种用户行为的难度，是依次递增的。        </p><p>而在没什么人看的语雀文档上，能收到一条评论或留言，更是难得😂尤其是语雀改版或推出新的会员方案之后，肉眼可见每篇文档的阅读量少得可怜。    </p><p>语雀文档的邮件通知，就保证了我能及时查看文档收到的评论，与此同时，当我回复了评论后，对方同样也能收到邮件通知，这样在茫茫网海偶然相遇的两个人，至少还能有再次交流的机会，而不是一方留了言就从此杳无音信。   </p><p>这个设计，也让我想到了我用 Hexo 框架搭建的博客 <code>https://penghh.fun</code>，评论区所使用的评论插件，存在一个不好的地方，评论的网友只有在评论上方附上邮箱，我才能收到 TA 评论了我的博客的通知，而且如果他没有附上邮箱，即便我回复了 TA 的评论，他也是无法收到通知的，两个人从此断了联系。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/07/16731034440966.jpg"></p><p>语雀文档的这个设计，就很好地解决了我的 Hexo 博客存在的问题～这一点，也是语雀文档区别于其他在线文档的地方。           </p><h2 id="知识库"><a href="#知识库" class="headerlink" title="知识库"></a>知识库</h2><p>用语雀之前，我很长一段时间都用着石墨文档，这两款产品在管理文档上也存在着差异：  </p><p>石墨文档是基于「文件夹」来管理文档，语雀则是基于「知识库」，先有知识库，再在知识库里面创建文档，每个文档下方可以创建另一个文档，但这些文档彼此间又相对独立，与 Notion 的页面嵌套还是存在着差别。            </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/07/16731043690583.jpg"></p><h2 id="个性化的主页（语雀花园）"><a href="#个性化的主页（语雀花园）" class="headerlink" title="个性化的主页（语雀花园）"></a>个性化的主页（语雀花园）</h2><p>每个语雀用户的个人主页，在语雀中被称作「我的花园」，这个页面支持自定义，用户可以基于语雀提供的功能，搭建一个带有个人风格的主页。     </p><p>下面是一些语雀花园的案例：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/07/16731047084955.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/07/16731048742827.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/07/16731049176596.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/07/16731047491978.jpg"></p><p>更多好看的语雀花园主页：</p><p><a href="https://www.yuque.com/aikexiansheng/grwv25/eieki93i1kbkegq3#w7X7tXuolg5zdEvvINzmxWiWgxDeCx0S">https://www.yuque.com/aikexiansheng/grwv25/eieki93i1kbkegq3#w7X7tXuolg5zdEvvINzmxWiWgxDeCx0S</a>          </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/07/16731053099844.jpg"></p><h2 id="使用「图册」制作轮播图"><a href="#使用「图册」制作轮播图" class="headerlink" title="使用「图册」制作轮播图"></a>使用「图册」制作轮播图</h2><p>这是今天刚发现的一个语雀功能，可以使用内置的「图册」轻松制作网页中常见的轮播图效果。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/07/20230107-233649.gif" alt="2023-01-07 23.36.49"></p><p>想了解如何使用语雀图册功能制作轮播图效果，可以参考官方的帮助文档：     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/07/qrcodea--a1-1.jpg" alt="QRcode_A — a1 -1-"></p><p>上图二维码对应的链接：<a href="https://www.yuque.com/yuque/gpvawt/kto0b55men1k7m9q">如何使用语雀图册功能制作轮播图</a>       </p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>语雀文档</tag>
      
      <tag>在线文档</tag>
      
      <tag>效率工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac截图软件Xnapper，截图美化样机工具【效率工具指南】</title>
    <link href="/2023/01/03/2023-1-3-xnapper/"/>
    <url>/2023/01/03/2023-1-3-xnapper/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/3lV5iXpvTMlFVKIgSshN_g">效率工具指南</a>」<br>文/彭宏豪    </p><p>Hello 各位晚上好，我是小豪。   </p><p>看过前一篇文章《<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649921661&idx=1&sn=4e5fd81132c1811d31b1cbb6b5cc9e4c&chksm=83a89c50b4df1546a1ff9b48533c66fea3c929b9beed46b4eaf80f458c267fcd8f7e63f26f7e&token=393504999&lang=zh_CN#rd">给视频加水印，推荐这4个好用工具！</a>》的朋友，不知道有没有发现和去年发布的文章的不同之处呢？   </p><p>没有发现也没关系，反正我已经习惯了，这不就来给大家揭开上一篇文章里的一点小心思了吗？  </p><p>就如文章题目说到的，这个小心思和「截图」或者说文章里的「配图」有关：  </p><p>上一篇文章除了前两张图片，后面用到的截图都有一个特点，截图的内容都居中显示，且背景设置了比较骚的渐变效果，如下图所示。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/08/16725695258084.jpg"></p><p>插入的截图带有这种效果，并不是我逐一亲手制作出来的，而是借助了一个非常好用的截图美化工具——<strong>Xnapper</strong>。  </p><p>正如 Xnapper 官网所写的，Take Beautiful Screenshots Instantly，<strong>瞬间制作漂亮的截图</strong>，这款软件的功能非常简单，或者说非常<strong>专注</strong>，就只是为了让你的截图更好看！   </p><p>而且软件本身的操作也非常简单：截图 ➡️ 预览 ➡️ 分享，这里的「分享」可以是分享到社交网站，也可以是粘贴到自己的文章中，反正细心留意到的，都会说好看的～       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/08/16727596462054.jpg"></p><p>需要说明的是，Xnapper 目前只能在 Mac 电脑上使用，没有 Windows 版本，也正因为这款软件的出现，我觉得使用 Mac 电脑的理由又加多了一条：  </p><p>为了用上 Xnapper 这么优秀的软件，我不得不买 Mac 电脑了。   </p><p>也不管你是否承认，Mac 上优秀、好看的软件，就是比 Windows 系统上的多……    </p><p>Xnapper 可免费下载，不付费的情况下使用，也完全没有任何问题，只是作为免费使用软件的「代价」，你用 Xnapper 截取的图片，右下角会带有 Xnapper 的官网地址。   </p><p>而如果是购买了 Xnapper 的注册码（一个注册码可用于 1 台设备），则可以选择是否显示水印，或者<strong>自定义水印的内容</strong>，譬如下图，我添加了「Screenshot by 公众号：效率工具指南」的水印，想给自己写的内容<strong>增加一点点辨识度</strong>，而不是被人偷偷搬运之后，不知道的人还以为文章是某个无耻的人写的。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/08/16727603275864.jpg"></p><p>想要购买 Xnapper 注册码的朋友，最好先去注册一个 Paypal 账号，再准备一张开通了 Visa 的储蓄卡，将 Paypal 支付首选的扣款方式设置为这张储蓄卡，就能在 Xnapper 官网购买注册码啦。    </p><p>最后简单说一下 Xnapper 的功能：   </p><p>Xnapper 默认的截图快捷键为 Control + Option + Command + 数字 4/5，这个快捷键有点长，用起来不习惯的话，可以自定义新的快捷键。   </p><p>使用 Control + Option + Command + 数字 4 截图后，就会进入到 Xnapper 的编辑界面，如下图所示。  </p><p>左上角是简单的标注功能，可以给截图添加文字或箭头；<br>右侧是 Xnapper 核心的调整选项，可以调整渐变背景的样式、圆角的大小、内边距的大小、最终截图的比例或大小等等；<br>编辑好之后，点击左下角的第一个按钮，就可以将编辑好的截图复制到剪贴板，就能随意粘贴到其他地方了。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/08/16727609234449.jpg"></p><h2 id="互动"><a href="#互动" class="headerlink" title="互动"></a>互动</h2><p>Windows 系统上目前没看到类似的软件，如果读者朋友们知道有类似软件的话，也欢迎在下方👇👇的评论区留言，感谢🙏   </p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>截图软件</tag>
      
      <tag>样机工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>给视频加水印，推荐4款好用工具！</title>
    <link href="/2023/01/01/2023-1-1-video_watermark/"/>
    <url>/2023/01/01/2023-1-1-video_watermark/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/1hydfGJDHCF70qs4xZg-QA">效率工具指南</a>」<br>文/彭宏豪        </p><p>Hello 各位好，我是小豪。  </p><p>去年写过一篇给图片加水印的文章《<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649919591&idx=1&sn=9071cfbf602b321aa393067f7a7a7c01&chksm=83a8944ab4df1d5cb044137d41b470c0eee3b70c50088ad95121dcd8929e102aa41a1bfd7885&token=838469253&lang=zh_CN#rd">逆行者？别人去图片水印，我却加水印</a>》，好像反响不是特别好，猜测也是平时比较少人用到，后来我想过一个类似的问题，如果把这里的媒介从图片更改为视频，即<strong>给视频加水印</strong>，这样的需求，得用什么软件呢？   </p><p>因此，今天的这篇文章，简单来分享一下，<strong>给视频加水印的 4 种方法</strong>，希望能帮到有需要的朋友。    </p><h2 id="剪辑软件"><a href="#剪辑软件" class="headerlink" title="剪辑软件"></a>剪辑软件</h2><p>如果你不想为了给视频加水印而特地去下载别的软件，那么剪辑软件就是一个特别合适的选择。  </p><p>以电脑上的「剪映专业版」为例，先将要添加水印的视频导入软件，并添加到时间轴上。  </p><p>如果是想添加<strong>文字水印</strong>，就点击左上角的「文本」，在视频素材上方添加一个<strong>文本轨道（图层）</strong>，输入文字水印的内容，同时将文本的持续时间拉到与视频素材一样长，再调整一下文本的大小和位置，这样一个简单的文字水印就做好了。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/01/16725682601642.jpg"></p><p>如果是想添加图片水印，也是类似的道理，差别就在于需要先准备好一张 PNG 格式（透明背景）的图片水印，再导入剪辑软件中。   </p><p>用剪辑软件添加水印，还有一个更高级的玩法，那就是添加<strong>动态水印</strong>，譬如添加类似新闻视频底部的<strong>滚动字幕</strong>（也叫<strong>跑马灯字幕</strong>），这种制作起来其实也不难，只需要你了解「如何给文本设置关键帧」，就能制作出动态水印。   </p><h2 id="OBS"><a href="#OBS" class="headerlink" title="OBS"></a>OBS</h2><p>如果你是想给自己录制的视频添加水印，其实不必等到视频录制好之后再添加水印，而是在录制的同时就能添加水印，省去后期添加视频水印的操作。  </p><p>要想实现在录制视频的同时添加水印，一个很好的方法就是，使用 OBS 来录制视频。  </p><p>OBS 这里就不过多介绍了，往期的内容也介绍过挺多次了。  </p><p>点击 OBS 左下方「来源」的加号 + ，依次添加「屏幕捕获」和「文本」，这里要注意添加的顺序，先添加「屏幕捕获」，再添加「文本」，这里的文本就是用来作为文字水印的图层。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/01/16725691972312.jpg"></p><p>点击添加「文本」后，会弹出下面的窗口，在文本框的位置输入文字水印的内容，默认的字体是英文，如果是输入中文内容，顶部的预览窗口会显示为乱码，因此我们还要点击「选择字体」，将默认的字体更改为<strong>支持中文的字体</strong>，譬如微软雅黑或者思源黑体等。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/01/16725695258084.jpg"></p><p>在 OBS 的预览窗口，长按鼠标左键并拖拽文本水印四周的任意一个<strong>锚点</strong>，可以自由调整文本水印的大小，同时还可以自动移动水印的位置。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/01/16725697956279.jpg"></p><p>如果想让静止的文本水印动起来，可以给文本图层添加特效： </p><p>右键单击「来源」中的文本图层，在弹出的面板，选择「滤镜」。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/01/16725700506939.jpg"></p><p>在打开的「效果滤镜」面板，点击左下角的加号 + ，选择「<strong>滚动</strong>」，就可以给原先静止的文字水印添加滚动效果，制作出类似跑马灯字幕的效果啦！    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/01/16725701336232.jpg"></p><p>完成以上设置后，点击 OBS 右下方的「开始录制」，就能录制出带有文本水印的视频内容了。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/01/16725703077671.jpg"></p><h2 id="万兴优转"><a href="#万兴优转" class="headerlink" title="万兴优转"></a>万兴优转</h2><p>万兴优转，一个多功能的视频处理工具，其中就包含了给视频添加水印的功能，如下图，点击「水印编辑」，打开添加水印的面板。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/01/16725737607118.jpg"></p><p>不得不说，万兴右转内置的「添加水印」功能还挺全的：既能添加图片水印，也能添加文本水印，而且还支持添加动态水印，难得有一款软件考虑得还挺周到的。  </p><p>不过，我还有一点想吐槽的，添加的文本水印，无论是在预览窗口，还是最终导出的视频，<strong>文字都是被拉伸过的</strong>……看起来很丑，这一点我觉得对强迫症来说是无法忍受的，也不知道是不是负责这功能的产品经理，根本就没用过这个功能……    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/01/16725738982780.jpg"></p><h2 id="芦笋录屏"><a href="#芦笋录屏" class="headerlink" title="芦笋录屏"></a>芦笋录屏</h2><p>最后，还想给各位介绍在线录屏软件「芦笋录屏」的一个小功能，它同样可以给视频添加水印，不过这功能是会员专属的～   </p><blockquote><p>新用户专属福利：如果你之前没有用过芦笋录屏，但想免费用上会员专属的功能，可以扫描下方的二维码注册账号，可以免费获得 30 天的高级版会员。   </p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/01/qrcodea--a1.jpg" alt="QRcode_A — a1"></p><p>在视频的播放页面，将鼠标指针移动到视频的右侧，就能看到芦笋提供的「水印」功能。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/01/16725745512616.jpg"></p><p>在水印编辑页面，开启「添加水印」，在输入框中输入文字，下方可以调整文字水印的透明度和位置，最后点击「保存」，就能给视频添加水印啦。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/01/16725748988673.jpg"></p><p>芦笋本身支持以链接的方式分享视频，当然你也可以选择将视频下载到本地，再通过其他工具传输视频文件。  </p><p>对于使用芦笋添加了水印的视频，在将视频下载到本地之前，芦笋提供了 2 个选项：  </p><ul><li>剪辑后的视频（即带有水印的视频）   </li><li>原始视频（未处理过的原始视频）    </li></ul><p>这个小细节还挺贴心的，你可以根据需要，选择下载对应的视频版本～     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/01/01/16725750795101.jpg"></p><p>以上分享的 4 个工具，就是我目前了解的给视频添加水印的方法，希望能帮到有需要的朋友。  </p><p>如果你知道其他更好用的工具，也欢迎在下方👇的评论区留言，与大家一起分享。     </p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>OBS</tag>
      
      <tag>效率工具</tag>
      
      <tag>视频加水印</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的 2022 年个人总结｜失落的一年</title>
    <link href="/2022/12/31/2022-12-31-summary/"/>
    <url>/2022/12/31/2022-12-31-summary/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/hzSffOuLzmJza2RQfg8i6w">效率工具指南</a>」<br>文/彭宏豪    </p><p>Hello 各位好，我是小豪。   </p><p>写这篇文章之前，我内心纠结、犹豫了一会，感觉今年没啥好写的，在想要不要写呢？   </p><p>最后还是决定写啦，才有了你现在看到的这篇文章。  </p><p>我的理解，写总结并不是为了找各种数据来证明自己过得不错，而纯粹只是想在年底做个记录📝，方便以后回过头来稍微有点东西可查，仅此而已。   </p><p>如果你也觉得这个想法不错，不妨现在就拿起笔，或者操起键盘⌨️，开始回顾一下你的 2022 吧。       </p><h2 id="糟糕的-1-月"><a href="#糟糕的-1-月" class="headerlink" title="糟糕的 1 月"></a>糟糕的 1 月</h2><p>今年开年不利，糟糕的 1 月，我是在不踏实、无助、无奈、彷徨中度过的。   </p><p>工作做得不踏实，没有有效的产出，很无力，也很讨厌每天早上的「站会」，与其说是站会，不如说是鞭尸大会，最终我还是失去了来深圳的第一份工作……             </p><p>失业后最开始不敢和家里人说，诚实说出来之后，心里一块石头落下了，但又有了新的烦恼：   </p><ul><li>回家要以什么心态面对家里人呢？    </li><li>回家这个年还能好好过吗？      </li><li>回家和别人谈到工作的事情，要不要说实话呢？   </li><li>家里人又会提起「回老家」的事情           </li></ul><p>虽然工作 3 年多了，但我还没怎么给过家里人钱，逢年过节又遇上失业，这个年过得真不是滋味。      </p><h2 id="封控的-2-3-月"><a href="#封控的-2-3-月" class="headerlink" title="封控的 2-3 月"></a>封控的 2-3 月</h2><p>和大家不同，我感觉我今年只有 11 个月，少了的那一个月，因为住的城中村有好多确诊的，整个村子被封，被迫居家，有点像是在坐牢。    </p><p>封控时间：2 月 22 日 - 3 月 30 日（在 3 月的最后 1 天终于解封了）           </p><p>具体可见我写过的一篇文章：<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649919719&idx=1&sn=279c40bc3bd3f9683d0b07f749b4a599&chksm=83a894cab4df1ddc5c82cce7ad4037aa103615eb3ce5f40e4455dd4f7c612a5934acbdc1aaf8&token=838469253&lang=zh_CN#rd">解封以后，被偷走的一个月</a>       </p><p>封控之前，还有一个小插曲，在事后看来，我也是<strong>足够幸运</strong>，那就是我在 2 月 17 日（周四）入职了现在的公司，上了 3 天班之后，就开始被封控在家，开启了长达 20 多天的远程办公。    </p><p>事后想起来，如果我当初还在纠结要不要再看看别的机会，没有选择入职现在的公司，被封控的那一个月，我会不会过得更难受，会不会在煎熬里度过呢？会不会一整年下来过得比现在还差呢？            </p><p>我不知道，过去的事情也无法假设，我只能说，这是今年最幸运的一件事。     </p><h2 id="根管治疗"><a href="#根管治疗" class="headerlink" title="根管治疗"></a>根管治疗</h2><p>过年回家的时候，除了发愁年后要找什么工作，还有一件让我吃饭都不得安宁的事，那就是牙疼——喝水牙疼、吃肉牙疼，原本桌上有很多好吃的东西，因为牙疼都索然无味了，那种感受，牙疼过的朋友都懂。    </p><p>刚从老家回到深圳的那天下午，牙疼又开始发作了，不过这次是疼到脑壳都痛，脑袋像是要炸开一样，最后吃了一颗布洛芬才有所缓解。     </p><p>真应了那句，「牙疼不是病，疼起来要命」。    </p><p>后来去了医院，医生说疼的牙都烂到牙根了，得做根管治疗，每周末要去一次医院，中间因为封控，导致整个疗程特别漫长。  </p><p>我特地在滴答清单中记录了根管治疗开始与结束的时间，历经 86 天，我提前带上了假牙（冠）。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/31/16724581384371.jpg"></p><p>整个疗程下来，包括最后戴上的牙冠，花了大几千块钱吧……肉疼，治疗牙齿真的是花钱如流水，一口好牙真的是一座金矿。  </p><p>劝各位还有一口好牙的时候，注意多保养牙齿，比如：  </p><ul><li>每年至少洗一次牙，去除牙结石（牙医推荐每半年洗一次牙）            </li><li>除了刷牙，最好还要养成使用「牙线」的习惯，我现在都不用水牙线了，而是用普通的牙线，<strong>买的时候注意买那种细牙线</strong>。别看牙齿已经刷干净了，用牙线很多时候还会掏出东西的，相信我……     </li></ul><h2 id="工作上更忙的一年"><a href="#工作上更忙的一年" class="headerlink" title="工作上更忙的一年"></a>工作上更忙的一年</h2><p>来了深圳一年多之后，越发体会到这座城市的一些不同，比如，身边或者网上的人，没说几句话，好像都离不开「搞钱」这两个字，搞钱即正义，以搞钱为荣。  </p><p>在简单对比了广州和深圳两座城市每月的支出，至少是 1000 的差额之后，对「努力搞钱、保住份工」这句话开始有了体会。       </p><p>从 2 月份换了工作之后，今年整体上比毕业以来的过去 3 年都要忙，晚上 10 点下班是常态，这种节奏恍惚之间又给了我一种回到<strong>高三下夜自习</strong>的错觉，那时候也是在教室待到 10 点才回宿舍。   </p><p>工作日工作时间比较长，但比较欣慰的地方在于，周末至少是双休的，多少能消除工作一周下来的疲惫。   </p><p>工作上更加忙碌，留给自己学习、写东西，或者做其他事情的时间就变少了，这方面有客观因素，当然更多的还是自己的自律（懒癌发作）、管理能力不足导致的：  </p><p>稍微有一点空闲时间，要么想玩游戏，要么想看视频放松，没有足够的自制力克服它们的诱惑……    </p><h2 id="运动"><a href="#运动" class="headerlink" title="运动"></a>运动</h2><p>上周阳了之后，在家休息的时候，点开了 iPhone 上好久没打开的「健康」App，最初是想瞟一眼自己的心率数据，发烧的时候心率不是会加快嘛？  </p><p>同时还点开了去年我非常关注的一个数据——<strong>最大摄氧量</strong>，从这一整年的数据趋势可以看出，年初的最大摄氧量已是巅峰，往后就是走下坡路了。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/31/9fa0118aff49460d95e347e483e0fbee.png" alt="9FA0118A-FF49-460D-95E3-47E483E0FBEE"></p><p>关于「有氧适能」的介绍，可以查看一段来自 Apple 官网的内容：  </p><blockquote><p>有氧适能测量的是你的最大摄氧量，也就是你的身体在锻炼时能够消耗的最大氧气量。你的有氧适能水平是你整体身体健康情况的重要指标，也是你长期健康情况的预测指标。Apple Watch 可通过测量你在户外步行、跑步或徒步旅行期间的心脏工作强度来提供有氧适能估算值。   </p><p>如果你使用“体能训练”App 开始进行户外步行、跑步或徒步旅行，Apple Watch 也可以估算你的最大摄氧量。Apple Watch 支持 14-65 <strong>毫升/千克/分钟</strong>的最大摄氧量范围，这个范围经验证适用于年满 20 周岁的用户。</p></blockquote><p>最大摄氧量指标变低，也和今年运动次数变少有关，之前做的一个<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649917925&idx=1&sn=08dc018b0d3e65be81c1b5bc8572ce18&chksm=83a88dc8b4df04dee5b2716977fc1dba3b56a4a6952a164198d6c448335a8b4c288568b4a23c&token=838469253&lang=zh_CN#rd">记录跑步数据的网站</a>，显示我今年只跑了 70 次（严格来说应该只有 69 次），对比年初计划的 200 次运动打卡，远远不及预期……             </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/31/16724638357045.jpg"></p><p>看了今年惨淡的运动次数、逐渐变差的身体，明年立个小 flag：多多运动，学会游泳🏊     </p><h2 id="今年最大的一笔支出"><a href="#今年最大的一笔支出" class="headerlink" title="今年最大的一笔支出"></a>今年最大的一笔支出</h2><p>今年 8 月份的时候，趁着教育优惠、还有一个同学还在上大学，找他帮了一下忙，从苹果官网买了一台 2021 款的 Macbook Pro。    </p><p>至此，我算是勉强集齐了苹果家的「旧三件」和「新三件」——</p><ul><li>苹果旧三件套：iPhone、iPad 和 Macbook</li><li>苹果新三件套：iPhone、AirPods 和 Apple Watch   </li></ul><p>买 Macbook Pro，主要有 2 个考虑，一个是想体验一下被很多人称赞过的 M1 系列芯片，另外一个则是考虑到有时想带电脑出门，不想因为 iMac 只能在家使用而被迫呆在家里。  </p><p>我对苹果 M1 系列芯片最大的预期是，能在电脑上使用移动端的 App，减少打开手机的次数，但就我使用过的几个 App 来说，<strong>体验其实不如预期，反而有点失望</strong>：   </p><ul><li>微信读书 App 无法用鼠标划线，还不如使用网页版       </li><li>知识星球 App 无法调整字号大小，还不如网页版的体验   </li><li>即刻 App 就是个移动版，跟 iPad 上的版本一模一样，没有针对 Mac 和 iPad 这两种设备进行适配，真的拉胯   </li></ul><p>不知道同样用着 M1 系列芯片 Macbook 的朋友，你们的感觉如何呢？欢迎在底部的评论区留言。      </p><h2 id="年龄焦虑-同龄人焦虑"><a href="#年龄焦虑-同龄人焦虑" class="headerlink" title="年龄焦虑/同龄人焦虑"></a>年龄焦虑/同龄人焦虑</h2><p>最后，还是要写一下以前没怎么提起的<strong>年龄焦虑</strong>或者说<strong>同龄人焦虑</strong>。   </p><p>这东西说起来也怪，你不去关注它的话，它好像并不存在，但当你有时在朋友圈看到，某某人结婚了，某某人生小孩了，某某人的孩子会打酱油了，这东西又突然跑出来了。     </p><p>有时会在想，咋别人结婚、生孩子看起来那么简单，而我是在入场的时候选错了模式吗？咋都这么 hard？       </p><p>原本 TA 们和我是同龄人，但现在我们好像完全是两个不同世界的人，关注点也全然不同，没有多少共同话题，就连维系关系慢慢也变得没什么必要。   </p><p>有时我也会胡思乱想，如果有一天我结婚了，能请到多少个人来呢？不会凑不齐一桌吧？        </p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
      <tag>写作</tag>
      
      <tag>年度总结</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新冠感染阳了，记录一下</title>
    <link href="/2022/12/26/2022-12-26-covid19/"/>
    <url>/2022/12/26/2022-12-26-covid19/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/mEX3Gy0Ha8qmMlw63DOemg">效率工具指南</a>」<br>文/彭宏豪    </p><p>好久没更新，一方面是年底比较忙，另一方面是我阳了，确实没想到，阳来得这么快，连身在 18 线农村的爸妈也中招了。      </p><p>症状那些就不说了，你在朋友圈、社交网络上可以看到很多人都在分享，大致方向一样，细节的就因人而异。    </p><h2 id="外卖送到后请放在门口"><a href="#外卖送到后请放在门口" class="headerlink" title="外卖送到后请放在门口"></a>外卖送到后请放在门口</h2><p>这几天吃饭，都是靠美团外卖解决的，一个明显的感受是，送餐的速度变慢了，配送费上调了，最直接的原因是，许多骑手也陆续中招了。       </p><p>最开始拿外卖的时候，把<strong>避免和骑手正面接触</strong>这条忘了，直接开门拿的……后来才想起来，我这该不会害人了吧。</p><p>有这意识之后，在下单的时候会加上一条备注：<strong>送到后请放在门口</strong>，或是在接到电话的时候，吩咐说放在门口就好。     </p><h2 id="出乎意料的便利店"><a href="#出乎意料的便利店" class="headerlink" title="出乎意料的便利店"></a>出乎意料的便利店</h2><p>到现在，我的嗓子暂时也还没出现网上很多人在说的「吞刀片」的情况，但我还是提前备了一盒润喉糖。   </p><p>原本我以为润喉糖只能在药店里买到（药店没货，或者有的不是我想要的），没想到这东西便利店也有卖。   </p><p>这便利店叫友家便利店，除了有润喉糖，还有<strong>防护面罩</strong>，有卖这东西，真的出乎我的意料，同时我还买了一包袋装的冰块，用来物理降温。   </p><p>买来的防护面罩，主要是下楼扔垃圾的时候可以戴上，下楼扔垃圾还有一个小插曲，两次遇到没带口罩、在垃圾桶里翻可回收物品的大叔，不知道他看见我这装扮，心里有什么想法。我只希望他别翻开我扔掉的东西，避免传染给他。        </p><p>不过话说回来，便利店的配送费是真的贵，14 块还是 16 块好像，对第一次下单的新用户有优惠，抵扣了 6 块钱。  </p><h2 id="文具店也有卖酒精"><a href="#文具店也有卖酒精" class="headerlink" title="文具店也有卖酒精"></a>文具店也有卖酒精</h2><p>可能是文具店生意不好做，文具店老板也干起了副业，卖各种消毒的物品或防护用具。  </p><p>之前家里没有提前备着酒精，真想用到的时候，药店买不到，后来还是听公司的同事说，在美团上可以买到，就从一家文具店里买了一瓶酒精喷雾，500 毫升，30 大洋。  </p><p>除了酒精喷雾，也可以买点<strong>酒精湿巾</strong>备着，用来擦拭被喷嚏或者咳嗽污染的桌面、电脑键盘、鼠标等等。         </p><h2 id="好心人送的退热贴"><a href="#好心人送的退热贴" class="headerlink" title="好心人送的退热贴"></a>好心人送的退热贴</h2><p>托了腾讯团队紧急上线的「新冠防护药物公益互助」小程序的福，我从上面拿到了 3 片退热贴，感谢好心人，感谢腾讯团队，感谢科技。   </p><p>开口和别人要东西，很不好意思，也不知道要多少合适，最开始我问施予援助的小姐姐要了 2 片退热贴，她说自己手里有 5 片，愿意额外再多给我 1 片，真的太感动了。             </p><p>有需要的朋友，也可以扫码看看，可以先发布求助信息，再去重点关注帮助信息，主动联系有药物的人，当然加人的时候，也要注意分辨对方——是真的好心人，还是为了引流卖高价物资的人。。。对于后者，可以在小程序里进行举报。             </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/30/img4182.PNG" alt="IMG_4182"></p><h2 id="被人抢光的姜"><a href="#被人抢光的姜" class="headerlink" title="被人抢光的姜"></a>被人抢光的姜</h2><p>最开始发烧不怎么出汗，盖了被子也没用，朋友和家里人说，煮一碗「姜葱糖水」喝下去，能辅助出汗。  </p><p>打开美团买菜、朴朴超市，看到上面的姜都被人抢光了（难不成大家都约好一起喝姜葱糖水的？），有些店显示隔天才有货。   </p><p>后来打开很久没用的饿了么，反而买到了，也可以说是「捡漏」了，买完没过多久，卖姜的这家店也变为「休息中」了。   </p><p>说来也怪，我在美团上点过的外卖，不少也像卖姜的这家店一样，原本正常营业或处于配送范围的，隔了一天，在饭点的时候就变成「已打烊」或者「超出配送范围」，不确定这是不是单量过多、运力不足双重作用下，店家怕被打差评，所以不得以采取的临时措施呢？   </p><h2 id="同事送的退烧药"><a href="#同事送的退烧药" class="headerlink" title="同事送的退烧药"></a>同事送的退烧药</h2><p>针对新冠的药物，我手里只有一盒布洛芬缓释胶囊，吃了之后觉得退烧不够给力，而且体温反复，时降时升——早上刚起来还有一点药效，温度相对低一些，等到了傍晚，药效完全消失，体温又升上来了，这样的情况持续了两天。  </p><p>有点担心，就找了公司的同事，想看看公司物资里还有没有多余的另一款退烧药——<strong>对乙酰氨基酚</strong>，结果是物资中没退烧药了，但公司的病友群里有热心的同事，匀了一些给我用。         </p><p>这些被人帮助的经历，总让我想起一句话，「<strong>没有人是一座孤岛</strong>」，在我看来，这句话至少有两重含义，一是在当下，每个人都很难独善其身，很难不被感染，除非你是住在山洞里，另外一个则是，也正是人与人之间存在联系或连接的可能，才让我们共同渡过了那些看似不可战胜的困难：    </p><ul><li>家里没药，还好有药物公益互助小程序         </li><li>不能出门，只能求助外卖小哥、美团跑腿师傅等等，让他们帮助我们解决吃饭问题、满足各种需求           </li></ul><h2 id="做得不好的地方"><a href="#做得不好的地方" class="headerlink" title="做得不好的地方"></a>做得不好的地方</h2><p>家里有 3 个小孩，在这波之前，其实是完全有时间窗口给家里的爸妈买一些东西的，比如布洛芬、抗原啥的，但就是自己不够果断，在群里征询另外两人的意见，心理上存在一些侥幸，延误了时机，最后只给他们买了 999 感冒灵和咳嗽水……完全用不上😓       </p><p>我也可以把部分责任归咎于，病毒的蔓延速度远远超出了我的想象，迅速席卷到了十八线农村，来得太快就像龙卷风，把人打个措手不及……但这并不会减轻我的愧疚，因为原本就有机会不那么被动的。       </p><p>在城市可以起作用的东西，到了农村就失灵了，不过比较幸运的是，村子里靠点人际关系，还是能弄到一点退烧药，让我非常担心的妈妈很快就退烧了，感谢老天爷啊🙏   </p><p>而我的爸爸就比较顽固了……坚决不吃药，用身体硬扛，希望他也能早点恢复活力。                  </p><p>经此一次，还是要引以为戒，以后不要再发生类似的事情了……       </p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>「效率工具指南」使用说明书</title>
    <link href="/2022/12/13/2022-12-13-notice/"/>
    <url>/2022/12/13/2022-12-13-notice/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 各位好，我是小豪。  </p><p>忘了是去年，还是今年年初，因为飞书的宣传，网上刮起了一阵给自己写一份「<strong>个人使用说明书</strong>」的风，即用一份文档来介绍自己，同时让别人了解如何可以更好地「使用」你。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/13/16706458575916.jpg"></p><p>最开始觉得这个概念挺好的，曾经也想学着其他人一样，给自己写一份个人使用说明书，但就像很多次在别人面前做自我介绍一样，有点害羞，或是觉得没啥好写的，就把这个想法搁置了。      </p><p>不过，最近看公众号后台的一些私信，不知道怎么地，萌生了给自己的公众号「效率工具指南」写一份使用说明书的想法。  </p><p>也可能是我觉得相比于人，公众号才更像是一个产品，它不能自我表达，因此需要一个简介或一篇文章来介绍它，而人就是人，人是可以自由表达的复杂生命体，任何介绍自己的东西，都只是其中的一个切片，只能力求接近，无法完全概括。      </p><h2 id="私信要账号-密码"><a href="#私信要账号-密码" class="headerlink" title="私信要账号/密码"></a>私信要账号/密码</h2><p>先说一下，最近在后台看到好几个人私信说，「想要账号、想要密码」，我并不知道你们要什么账号（私信中缺少关键信息），也不知道你们是从哪里看到我的。      </p><p>如果你是在网上看到有人说，关注我的公众号就可以拿到某某社交平台的账号，那我猜你是被人骗了，我并没有发布过这种信息。这种套路，可以参考公众号「三表龙门阵」发布过的一篇文章：<a href="https://mp.weixin.qq.com/s/53uknYNfgvGJJlDQoJZMSQ">一场与我有关的骗局</a>             </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/13/16706471627425.jpg"></p><h2 id="私信获取软件安装包"><a href="#私信获取软件安装包" class="headerlink" title="私信获取软件安装包"></a>私信获取软件安装包</h2><p>因为长期写软件工具的文章，不少朋友可能会误以为，关注我的公众号之后，在后台回复软件名称，就能拿到软件安装包。   </p><p>首先要说声抱歉，我并没有那么多耐心，去逐一回复每条想要安装包却拿不到安装包的私信，因为真的回复不过来，而且也很难解释清楚。     </p><p>事实上，除了一些文章中说到「后台回复 XX 关键字获取安装包」，其余的软件，比如很多人想要的 PS、加速器、思维导图软件、录屏软件 Camtasia 等等，我都没有在后台设置自动回复。          </p><p>之所以不设置，一方面是我比较懒，设置自动回复只能在电脑上操作，而且还要先把安装包上传到网盘，再把网盘链接粘贴到后台，一两次还能接受，但让我操作 100 遍就烦了，另一方面是，分享这些软件存在一定的风险，我不想为这些破事浪费自己的时间。     </p><p>这里再多说一嘴，<strong>别以为在国内分享国外的破解软件就毫无风险</strong>，如果你分享的国外软件恰好被国内某个恶心的代理商代理了，挡到他们赚钱了，他们的法务很可能会找上门，投诉你的公众号、网站等等，别问我怎么知道，因为我以前就被他们套路了：   </p><p>加我的微信，问我是不是有某个软件的安装包，我说是的，还热心地给对方发送了安装包的网盘链接……但其实对方是个演员，骗我发网盘链接，截图下来作为投诉文章侵权的证据，最后文章就被删了，你说我找谁说理去。    </p><h2 id="私信提问之前建议这么操作"><a href="#私信提问之前建议这么操作" class="headerlink" title="私信提问之前建议这么操作"></a>私信提问之前建议这么操作</h2><p>在后台私信提问之前，建议你先在微信上打开我的公众号主页，点击右上角的「搜索」图标，输入问题的关键词，比如「视频转音频」、「音乐格式转换」等，可能就能找到问题的答案。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/13/imgc9686231d6e11.jpeg" alt="IMG_C9686231D6E1-1"></p><p>另一种<strong>更推荐的提问方式</strong>，就是加入我在「知识星球」App 上创建的社群，在 App 内发布动态，或是使用 App 的「提问」功能向我发起提问。   </p><p>因为这是一个付费社群，<strong>收人钱财，与人解答</strong>，是最基本的契约精神。当然社群提供的服务不只有回答问题，还会发布一些我觉得有价值的信息，<strong>有时一条有价值的内容，就能省去你几个小时的折腾</strong>。    </p><p>社群内已发布的内容，可查看下面的目录（点开图片查看大图）：                 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/13/xnip2022121013435zhang-jie-tu.jpg" alt="Xnip2022-12-10_13-43-5长截图"></p><p>⚠️ 注：目录仅列出了社群已发布的其中一部分内容，并不代表加入社群后可看到的全部内容，且随着社群的持续更新，最终交付的内容会远超现有的内容。  </p><p>社群原价 99 元/年，加入后可查看之前发布的所有内容，以及未来一年更新的内容，前 100 名加入可领取 20 元的优惠券，以 79 元的价格加入。机不可失，现在就扫码加入吧：                          </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/13/xing-qiu-you-hui-quan-1.png" alt="星球优惠券 -1-"></p><h2 id="加我微信请写明来意"><a href="#加我微信请写明来意" class="headerlink" title="加我微信请写明来意"></a>加我微信请写明来意</h2><p>和许多做公众号的博主一样，我在公众号的菜单栏也放了自己的微信二维码，供一些有需要的朋友添加。   </p><p>但鉴于不少朋友加完之后就「沉默」了，不发言也不在朋友圈互动，这样成为微信好友的意义不大。    </p><p>为了减少无效加好友的行为，我学着和别人一样，在微信签名上加了一个备注：<strong>添加微信请注明来意</strong>，但还是有些朋友图方便，或是在加微信的时候没看到，再多唠叨一句：加我微信请写明来意，有需要再加，谢谢。   </p><h2 id="获得本公众号推荐的标准"><a href="#获得本公众号推荐的标准" class="headerlink" title="获得本公众号推荐的标准"></a>获得本公众号推荐的标准</h2><blockquote><p>这个说起来有点惭愧，只是做了一点微小的工作。    </p></blockquote><p>之前推荐过一些朋友的公众号，这其中有些是现实中认识的，有些是在网上认识的网友，推荐的理由无非以下这些：     </p><ul><li>TA 发的内容有价值   </li><li>TA 做的产品有意思，或是我觉得有用，比如网友「江湖人称向前兄」做的微信读书摘录导出工具「小悦记」      </li><li>纯粹个人的偏好，就是想推荐            </li></ul><p>个人的偏好很难说清，以前推荐可能是想学公众号「小众消息」的作者那样，给推荐的朋友增加一点点读者，希望 TA 能坚持更新下去，在获得物质回报之前可以得到一点精神上的激励。    </p><p>尤其是对那些既没有很多关注者又没有获得收益的写作者而言，可能很长一段时间都在这么两种状态之间徘徊：  </p><p><strong>想更新公众号吧，这东西又不能赚钱，也没啥人留言；不想更新公众号吧，好像又无法彻底放下这个号。</strong>        </p><p>如此内耗下去，很大概率就是断更……公众号长草 ➡️ 变得荒芜 ➡️ 无人问津 ➡️ 公众号已冻结 ➡️ 此公众号已注销 ➡️ 互联网上查无此人。      </p><h2 id="合作-推广"><a href="#合作-推广" class="headerlink" title="合作/推广"></a>合作/推广</h2><p>这部分是写给一些想寻求合作或者商务合作的人的：  </p><p>首先要说的是，本公众号<strong>不免费推荐主动联系「想让我帮忙推荐一下」的产品</strong>，我免费推荐的工具或者软件，和前面的「获得本公众号推荐的标准」类似，要么是我自己在用的，要么是我自己有需求的，要么是我喜欢的，其他的暂不免费推荐。    </p><p>之前有些朋友想让我帮着推荐一下，没记错的话，不少都帮着免费推荐了，这都没啥，反正都是过去的事了，但以后想让我免费推荐的朋友，在开口前，是否得先回忆一下：   </p><p>自己是否曾经给这个号赞赏过呢？是否转发过这个号的文章呢？是否向别人推荐过这个号呢？是否给这个号的文章点过在看呢？       </p><p>如果没有的话，那我为啥要给你推荐呢？   </p><p>我的公众号关注数虽然不多，但也是我写了好几年积攒而来的，读者也不是大风刮来的，你开口是轻松，但我过去的付出谁看见了呢？     </p><p>这就是我内心真实的想法，也是我讨厌网上各种「伸手党」、「白嫖党」的原因，他们以为能白嫖到的就是自己赚了，但殊不知，正是这种「白嫖即正义」的氛围，让原本热衷分享的人越来越少，只剩下各种倒卖资源、制造信息差的二手贩子。  </p><p>我没有在指责🫵谁，我在骂我自己，因为接不到广告赚不到钱，只能开个付费社群来回血了，我也是其中一名跳梁小丑。                      </p><p>最后再给各位推荐一篇文章：    </p><p><a href="https://mp.weixin.qq.com/s/DhYofGRmp-B2DXsOn4L56g">聊聊怎么线上跟人社交</a> </p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>知识星球</tag>
      
      <tag>随笔</tag>
      
      <tag>公众号</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在线的思维导图工具有哪些推荐？8款免费在线思维导图软件推荐！</title>
    <link href="/2022/12/03/2022-12-3-online_mindmap/"/>
    <url>/2022/12/03/2022-12-3-online_mindmap/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/JMkTUA2GkSAXivEWfOBm-A">效率工具指南</a>」<br>文/彭宏豪    </p><p>现如今很多软件都流行推出<strong>网页版</strong>，对于<strong>思维导图软件</strong>来说也不例外，表现为我们可以看到各式各样的<strong>在线思维导图软件</strong>。<br>相比传统的基于本地的导图软件，在线思维导图软件有如下突出的<strong>优势</strong>：  </p><ul><li>使用前无需安装，降低用户的使用成本    </li><li>跨平台，大多支持主流的操作系统，例如 Windows、macOS 和 Linux 系统等  </li><li>创建的思维导图文件可保存到云端，数据多设备自动同步   </li><li>部分导图软件还支持<strong>多人在线协同编辑</strong>，头脑风暴更高效</li></ul><p>今天这篇文章，我从之前体验过的思维导图软件中，选取了 <strong>8 个免费好用的在线思维导图软件</strong>，与各位分享，希望能帮到有需要的朋友！  </p><blockquote><p>写在前面：码字不易，如果这篇文章对你有帮助，请别忘了<strong>点赞</strong>和<strong>关注</strong>我哦，关注不迷路，下期更精彩！</p></blockquote><h2 id="01-BoardMix博思白板"><a href="#01-BoardMix博思白板" class="headerlink" title="01 BoardMix博思白板"></a>01 <a href="https://boardmix.cn/?source=peng_blog_8mindmap">BoardMix博思白板</a></h2><p>BoardMix博思白板，一款集合了多种功能的<strong>在线白板软件</strong>，其中就包括我们想要的<strong>思维导图</strong>功能。<br>BoardMix 的导图功能依托于在线的白板之上，因此它也可以归入<strong>在线思维导图</strong>的范畴。  </p><h3 id="✅-BoardMix思维导图功能特点："><a href="#✅-BoardMix思维导图功能特点：" class="headerlink" title="✅ BoardMix思维导图功能特点："></a><strong>✅ BoardMix思维导图功能特点：</strong></h3><ul><li>在线思维导图，打开即用   </li><li>完全免费，<strong>无节点限制</strong>   </li><li>内置 11 种导图主题，自由变换     </li><li>导图节点支持插入多张图片    </li><li>支持 Markdown 编辑模式     </li><li>支持导入 XMind 文件     </li><li>支持导出 SVG、PDF、图片文件（<strong>图片无水印</strong>）   </li><li>支持嵌入外部应用中使用，例如 Notion 和 AirTable 等，具体可参考我发布过的一个视频     </li><li>额外功能：思维导图一键转表格、思维导图路线图</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image1.png" alt="image1"></p><p>说句题外话，思维导图软件发展到现在，开始出现了从以前<strong>单一的导图软件</strong>过渡到<strong>集合多种功能的综合软件</strong>，例如这里提到的 <strong>BoardMix博思白板</strong>，国外的 <strong>Miro、Whimsical</strong> 等，这些产品的设计思路可能不在于把单个功能做到极致，而是可以在一个软件中联动使用多个功能，各取所长，让用户不需要在多个应用间来回切换。    </p><p>在 BoardMix博思白板中新建一个白板后，点击左侧菜单栏的<strong>思维导图图标</strong>，选择一种布局或主题样式，在白板任意位置单击，就能创建一个导图的中心节点。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image2.png" alt="image2"></p><p>选中添加的导图节点，再次单击节点，就能编辑节点中的内容，在节点上方弹出的菜单，可以修改节点内容的层级、字体、字号、粗体/斜体/下划线/删除线、对齐方式、文本颜色、文本背景色。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image3.png" alt="image3"></p><p>点击上方菜单最左侧的「T」选项，在弹出的二级面板中，可一键更改文本内容的样式，可选择的文本样式有：  </p><blockquote><p>标题、一级标题、二级标题、三级标题、有序列表、无序列表、任务列表</p></blockquote><p>不同的标题样式，对应的字号大小存在着差别，<strong>导图的主节点可选择「标题」或「一级标题」</strong>，让文本看起来比较大，之后的子节点的字号可以随之递减。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image4.png" alt="image4"></p><p>在选中导图节点的情况下，点击右侧或下方的<strong>加号 +</strong> ，可以创建新的分支主题，或是和大多数思维导图软件一样，按下<strong>快捷键</strong>也能创建分支主题：  </p><ul><li>Enter：创建同级的分支主题   </li><li>Tab：创建下一级的分支主题（子节点或孙子节点）</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image5.png" alt="image5"></p><p>选中导图的主节点，在上方弹出的菜单，选择「<strong>导图主题</strong>」，可以更改导图当前使用的布局或主题样式。   </p><p>譬如下图我更改了导图的主题样式，从左侧的蓝灰样式变为右侧的小清新样式。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image6.png" alt="image6"></p><p>如果你对 BoardMix 主题样式的配色方案不满意，也可以自行更改<strong>导图节点的背景色</strong>和<strong>导图连接线的颜色</strong>。  </p><p>选中导图节点，点击上方菜单的第 2 个选项「<strong>填充颜色</strong>」，可以重新设置节点的背景颜色。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image7.png" alt="image7"></p><p>而如果是更改<strong>导图连接线的颜色</strong>，同样是先选中导图节点，点击「<strong>分支颜色</strong>」选项，从打开的面板选择一种颜色，修改之后就会更改节点所在的连接线和后面所有分支的颜色。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image8.png" alt="image8"></p><p>如果是想要在导图节点中插入图片，可点击上方菜单的「<strong>插入图片</strong>」，将本地的图片上传到导图中。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image9.png" alt="image9"></p><p>如果插入导图节点的图片尺寸比较大，会占用节点较多的空间，或是影响到节点内容的展示，这时我们选中节点插入的图片，长按拖拽图片右下角的锚点，<strong>缩小图片的尺寸</strong>。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image10.png" alt="image10"></p><p>BoardMix博思白板支持多人在线协作，而在其中创建的思维导图也是依托于白板之上，这也让我们可以在一个文档中同时编辑一个思维导图。    </p><p>点击右上角的「<strong>分享</strong>」按钮，将文档链接设置为<strong>所有人可编辑</strong>，接着将文档链接发送给其他人，对方打开链接就能加入编辑，用于头脑风暴或是记录会议纪要，也是杠杠滴！  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image11.png" alt="image11"></p><p>在文件导出方面，BoardMix思维导图支持导出下图的格式——PNG、JPG、PDF、SVG 和软件专属的 bdx 格式，导出为图片格式时，点击下方的「分辨率」，可以调整导出图片的分辨率，数值越大，图片越清晰。    </p><p>如果是选择 PDF 或 SVG 文件，由于这两种本质上都是矢量文件，可无限放大不失真，也就没有调整分辨率的需要啦，具体选择哪种导出格式，按自己的需要来就好了~  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image12.png" alt="image12"></p><p>BoardMix博思白板目前对个人用户完全免费，也没有对思维导图功能有任何限制——<strong>可添加无限节点，不会导图做到一半就弹出付费的窗口</strong>，使用 BoardMix 内置的导图功能，可以说是白嫖了！有在寻找免费思维导图软件的朋友，可以去使用一下哇~   </p><p><a href="https://boardmix.cn/?source=peng_blog_8mindmap">BoardMix博思白板，免费多功能在线思维导图，无限节点，支持导出高清无水印图片！</a>      </p><h2 id="02-石墨文档"><a href="#02-石墨文档" class="headerlink" title="02 石墨文档"></a>02 石墨文档</h2><p>接下来说说，我每天在用的石墨文档中内置的「思维导图」功能，整体而言，<strong>石墨的导图功能比较简单（陋）</strong>，如果你对导图软件没有太多的要求，就是纯粹用来编辑内容，不搞那些花里胡哨的东西，那么就可以考虑用它。    </p><p>点击石墨文档左上角的「创建」按钮，在弹出的面板，选择「思维导图」，创建导图文件。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image13.png" alt="image13"></p><p>从石墨文档顶部的工具栏，多少也能看出导图功能比较简单，就是一些添加导图节点、设置文本样式的选项。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image14.png" alt="image14"></p><p>如果想在导图中插入图片，可以点击工具栏的「插入图片主题」，不过插入的图片会<strong>单独置于一个节点中</strong>，而不是像前面介绍的 BoardMix博思白板一样，导图内容和图片位于同一个节点中。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image15.png" alt="image15"></p><p>在界面的左上角，石墨文档还提供了切换视图模式的选项：  </p><ul><li>思维导图：默认视图    </li><li>大纲视图：和另一款思维导图「幕布」一样，每个导图节点为大纲笔记中的一行     </li><li>混合视图：大纲视图和思维导图并排显示，如下图，左侧是大纲视图，右侧是思维导图，不过在这种视图模式下，左侧的大纲视图无法编辑</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image16.png" alt="image16"></p><p>由于这个导图功能是基于石墨文档之上，因此它也继承了石墨文档「协作」的功能，如果你想要和其他人在线编辑思维导图，可以点击右上角的按钮，邀请其他人加入协作，就能一起编辑同一份思维导图。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image17.png" alt="image17"></p><p>在文件导出方面，石墨文档提供了 2 种导出格式：图片和 xmind，可选择的文件格式偏少。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image18.png" alt="image18"></p><p>最后值得一提的是，使用这一功能做好的思维导图，可以<strong>直接嵌入石墨文档</strong>中，方法也很简单：   </p><p>在石墨文档中输入<strong>斜杠 /</strong> ，呼出下图的面板，找到「<strong>石墨云文件</strong>」，在弹出的面板中选择导图文件，就能将导图嵌入文档中啦。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image19.png" alt="image19"></p><h2 id="03-腾讯文档"><a href="#03-腾讯文档" class="headerlink" title="03 腾讯文档"></a>03 腾讯文档</h2><p>与石墨文档相类似地，还有腾讯文档，腾讯文档同样内置了「<strong>思维导图</strong>」功能，不过这个功能藏得<strong>相对隐蔽</strong>一些。<br>点击「新建 &gt;&gt; 更多类型」，选择「<strong>在线思维导图</strong>」，就能在腾讯文档中创建一个导图文件。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image20.png" alt="image20"></p><p>打开刚创建的思维导图，顶部工具栏的选项，与石墨文档大同小异，不制作花里胡哨的导图，功能基本够用，其中有一个添加「<strong>概要</strong>」的选项，为超级会员专属的功能（<strong>同样的概要功能，这在前面介绍的 BoardMix博思白板中是完全免费的</strong>）。    </p><p>在导图的左下角，腾讯文档清晰地列出了已添加和免费节点的数量（100个），想要创建无限节点的导图，同样得先升级为超级会员。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image21.png" alt="image21"></p><p>选中任意一个导图节点，点击右上角的「插入」，可在节点中插入<strong>图片、超链接、备注、标签</strong>和<strong>图标</strong>。  </p><p>在导图节点插入的<strong>图片，会与导图内容位于同一个节点中</strong>，而不是像石墨文档那样，图片会成为节点的下一个分支。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image22.png" alt="image22"></p><p>插入节点的图片默认位于文本内容的上方，这对于我来说不太习惯，选中图片，左上角提供了调整图片位置的选项，更改为「<strong>图片在下</strong>」或「<strong>图片在右</strong>」，看起来就比较舒服了。   </p><p>如果我们插入的图片尺寸较大，它也会占据比较大的空间，有可能会妨碍我们浏览导图的其他内容，此时将鼠标指针移动到图片右下角的圆形上方，长按左键并拖拽，可以自由更改图片的大小。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image23.png" alt="image23"></p><p>除了图片，我们还可以在节点中插入「<strong>备注</strong>」，用作节点内容的<strong>补充</strong>或<strong>说明</strong>，当我们插入备注时，可以在右侧打开的「备注」面板中输入相应的内容，下方的小字有一个提示，备注支持「支持Markdown语法」。   </p><p>最开始我以为是所见即所得的渲染方式，但看到输入的 Markdown 语法并没有实时渲染为富文本，还以为这功能不起作用，直到我将鼠标移动到节点的「备注」小图标上方，才看到渲染后的效果。   </p><p>不过这个「<strong>引用</strong>」样式，看起来真的有点丑啊，上方咋空出来了那么大的间距呢？  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image24.png" alt="image24"></p><p>在导出方面，腾讯文档提供了多种文件格式：图片、在线文档、在线幻灯片、PDF 和 POS，免费用户可选择将导图导出为<strong>标清图片（PNG）、在线文档</strong>和<strong>在线幻灯片</strong>。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image25.png" alt="image25"></p><h2 id="04-幕布"><a href="#04-幕布" class="headerlink" title="04 幕布"></a>04 幕布</h2><p>幕布，一款跨平台的思维导图软件，既有网页版，也有电脑客户端，还有移动版，我觉得是国内少有的能把跨平台做得这么好的导图软件了。   </p><p>在幕布刚推出时，因为看到一些博主的推荐，于是我也去用了这款产品，设计简约，产品功能不花里胡哨，很对我的胃口。<br>幕布将大纲笔记（无序列表）和思维导图融合到了一起，编辑时用大纲视图模式，需要演示的时候，可以一键切换为思维导图。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image26.png" alt="image26"></p><p>从去年 7 月以来，幕布一直处于「正常运营但停止更新」的状态，不少人都会这款产品未来的走向表示担忧，还有些公司为了撬幕布的用户，美名其曰出了一个帮助用户迁移文件的插件……<del>（其实还不是想把幕布的用户转化成自家的用户）</del>  </p><p>不过，最近我在一个文档的评论区看到一个<strong>小道消息</strong>：<strong>幕布 2023 年开始会恢复更新</strong>，所以大伙别着急，幕布还能可以用的，别急着把自己的数据导出去，大家再给幕布一点时间，等待幕布回归！  </p><h2 id="05-飞书思维笔记"><a href="#05-飞书思维笔记" class="headerlink" title="05 飞书思维笔记"></a>05 飞书思维笔记</h2><p>飞书思维笔记，是一款内嵌在「飞书」中的思维导图工具，它的存在，有点像是前面介绍的石墨文档思维导图之于石墨文档，作为整个<strong>飞书产品矩阵</strong>的一种补充~   </p><p>打开飞书云文档，点击右上角的「新建」，选择「<strong>新建思维笔记</strong>」，创建一个导图文件。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image27.png" alt="image27"></p><p>打开思维笔记，一股浓浓的幕布风扑面而来，还是原来熟悉的配方和界面，有那味了哈哈哈哈哈哈哈  </p><p>点击左上角的按钮，可以从当前的大纲视图切换为思维导图，相信用过幕布的朋友，对这种切换方式并不陌生。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image28.png" alt="image28"></p><p>在思维导图模式下，长按任意节点并拖拽，可以移动导图节点，更改节点在导图中的位置。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image29.png" alt="image29"></p><p>如果你想把存放在云端的思维导图下载到本地，可以点击右上角的「…」，选择「<strong>下载为</strong>」，思维笔记提供了 2 种导出格式——FreeMind 和图片。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image30.png" alt="image30"></p><h2 id="06-Whimsical"><a href="#06-Whimsical" class="headerlink" title="06 Whimsical"></a>06 Whimsical</h2><p>Whimsical，和最前面介绍的 <strong>BoardMix博思白板</strong>一样，一款集合了多种功能——流程图、线框图、<strong>思维导图</strong>、项目和文档工具——的综合应用。   </p><p>与 BoardMix 的操作逻辑相似，在 Whimsical 中创建的思维导图，也是基于<strong>白板</strong>这个容器之上，点击左侧工具栏的思维导图按钮，在白板上单击，即可开始编辑导图内容。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image31.png" alt="image31"></p><p>Whimsical 是海外团队打造的产品，目前仅有英文版本，但软件本身并不复杂，因此软件语言并不会影响产品的使用。<br>对于免费用户，Whimsical 提供了 3000 个 Block 的使用权限，如果全部用来创建思维导图，则意味着最多可以创建 3000 个节点，超出后想继续使用，就需要付费啦~  </p><h2 id="07-XMind海外版"><a href="#07-XMind海外版" class="headerlink" title="07 XMind海外版"></a>07 XMind海外版</h2><p>说实话，发现 XMind 海外版的过程有一点意外，这是我在一条动态的评论区发现的，原 po 主说 XMind 没有在线协作功能，准备换掉 XMind，下面有一个网友在评论区说 XMind 海外版有协作功能。  </p><p>XMind 海外版 <code>xmind.works</code> 是一个在线的思维导图软件，外观与国内的客户端挺像的，但账号与国内的版本不互通，即海外版和国内版的数据不能自动关联，需要重新注册一个账号。    </p><p>如果你想与其他人分享当前编辑的导图，可点击左上角的「文件」菜单，选择 Share，借用 Google Drive、Dropbox 或者 OneDrive 网盘实现多人在线协作。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image32.png" alt="image32"></p><p>依稀记得 XMind 国内版最初也有云端同步功能，不过后来官方说是太少人用这个功能了，就选择把这个功能下掉了……这对已经习惯使用各类在线协作工具的人来说，可能不太能接受了，也让 XMind 在这方面显得有些滞后。  </p><h2 id="08-Miro"><a href="#08-Miro" class="headerlink" title="08 Miro"></a>08 Miro</h2><p>Miro，一款在国外拥有非常高知名度的<strong>在线白板软件</strong>，与回答开头介绍的 <strong>BoardMix博思白板</strong>可以归为一类产品。    </p><p>Miro 的使用逻辑也是基于无限大的白板之上，初次使用需要创建一个白板，打开之后点击左侧的思维导图工具，就能创建一个思维导图。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image33.png" alt="image33"></p><p>不过就我自己的使用体验而言，Miro 思维导图节点间的<strong>连接线太细</strong>，也没有给用户提供调节粗细的选项，对比已经看惯了的粗线条，反而看起来觉得有点不习惯…   </p><p>还有一点，在使用快捷键添加导图节点时，如果是<strong>添加同级的节点</strong>，通常的导图软件是按一次 Enter 回车键就好，在 Miro 中则需要<strong>按两次 Enter 键</strong>——第一次是进入节点的编辑状态，第二次才是添加同级节点。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/12/02/image34.png" alt="image34"></p><p>由于 Miro 是海外的产品，在国内的打开速度比较慢，要用代理才会有所改善，而且 Miro 免费版对功能也做了限制，譬如只能创建 3 个白板，无法使用计时器、音视频通话等功能。  </p><p>在与他人进行远程协作时，如果想使用音视频通话就白板内容展开沟通，要么是使用外部的会议软件，要么就是可以切换到国内同款的 BoardMix博思白板，BoardMix 目前完全免费，没有对软件功能进行限制~  </p><h2 id="✅最后的小总结"><a href="#✅最后的小总结" class="headerlink" title="✅最后的小总结"></a>✅最后的小总结</h2><p>呼（实际上是气喘吁吁），一口气分享了 <strong>8 款在线制作思维导图的软件</strong>，最后再来简单总结一下：  </p><ul><li>BoardMix博思白板：在线思维导图，<strong>完全免费</strong>，无节点限制，可导出高清图片（<strong>最为推荐！！！</strong>）  </li><li>石墨文档思维导图：功能比较简单     </li><li>腾讯文档思维导图：与石墨文档类似，功能比石墨文档丰富一点点，免费用户可创建 100 个节点   </li><li>幕布：融合大纲笔记和思维导图的跨平台工具。有一个好消息：<strong>幕布在 2023 年会恢复更新</strong>。     </li><li>飞书思维笔记：字节收购幕布后重新做的导图工具     </li><li>Whimsical：多功能在线协作应用，包含导图功能，免费用户最多可创建 3000 个节点       </li><li>XMind海外版：可在线使用的XMind版本    </li><li>Miro：多功能的在线白板软件，创建的导图简约美观，需要有良好的网络条件</li></ul><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>幕布</tag>
      
      <tag>思维导图软件</tag>
      
      <tag>在线思维导图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>怎么用Notion做思维导图？用自带的功能就够了！【效率工具指南】</title>
    <link href="/2022/11/27/2022-11-27-notion_mindmap/"/>
    <url>/2022/11/27/2022-11-27-notion_mindmap/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/LGb-13wwZEcp5yKo_3APwQ">效率工具指南</a>」<br>文/彭宏豪    </p><p>Hello 各位好，我是小豪。   </p><p>众所周知，Notion 非常强大，集成了多种功能，但唯独少了思维导图。  </p><p>关于这个问题，我之前也找了一些方法，思路都是在 Notion 中嵌入带有思维导图功能的第三方网页应用，例如：  </p><ul><li>BoardMix博思白板        </li><li>Miro   </li><li>Whimsical   </li></ul><p>👉想了解使用第三方导图应用的方法，可以查看我之前在 B 站发布的视频：</p><p><a href="https://www.bilibili.com/video/BV18e411u7RR/">活久见！笔记软件Notion也能制作思维导图啦！【效率工具指南】</a>             </p><p>除了这些，我最近还看到了另外一个不错的方法，不需要借助第三方应用，使用 Notion 的<strong>代码块</strong>，就能直接在 Notion 中创建思维导图。         </p><p>创建的思维导图如下：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/27/16695237621440.jpg"></p><p>这个方法的优点：  </p><ul><li>不需要借助外部应用，完全免费         </li><li>不需要创建或登录账号   </li><li>可以随时修改    </li><li>可以添加无限多的导图节点           </li></ul><p>当然，这种方法也存在一些缺点，譬如：  </p><ul><li>无法在导图节点中插入图片   </li><li>功能不如专业的思维导图软件那么丰富       </li><li>还有可能少数人会觉得绘制起来比较麻烦（这个我还能接受）    </li></ul><p>看完使用 Notion 代码块绘制思维导图的优缺点，接下来就来看看如何绘制吧～     </p><p>在 Notion 中输入斜杠 <code>/code</code>，点击下方返回的 Code，添加一个代码块。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/27/16695241623814.jpg"></p><p>点击代码块左上角「向下」的小箭头，在弹出面板的搜索框输入 <strong>Mermaid</strong> 并单击，将代码块所使用的语言设置为 Mermaid。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/27/16695242610462.jpg"></p><blockquote><p>补充一点小知识：    </p><p>这里选择的 Mermaid 语言，是一个基于 JavaScript 的图表和图表工具，它使用受到 Markdown 启发的文本定义和渲染器，来动态创建和修改图表，例如<strong>流程图、时序图、类图、状态图、用户旅程图、甘特图、饼状图、需求图、Git 分支图、思维导图</strong>等。     </p><p>Mermaid 的主要目的是帮助文档跟上开发的步伐。   </p><p>了解更多与 Mermaid 有关的内容，可以在浏览器中打开 Mermaid 的帮助文档：<a href="https://mermaid-js.github.io/mermaid/#/README">https://mermaid-js.github.io/mermaid/#/README</a>     </p></blockquote><p>选择 Mermaid 语言后，在代码块中输入类似下图的内容，就能渲染得到一个思维导图。   </p><pre><code class="hljs ada">graph LR;公司架构<span class="hljs-comment">--&gt;商务</span>公司架构<span class="hljs-comment">--&gt;研发</span>公司架构<span class="hljs-comment">--&gt;设计</span>公司架构<span class="hljs-comment">--&gt;运营</span>公司架构<span class="hljs-comment">--&gt;产品</span></code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/27/16695286652598.jpg"></p><p>简单解释一下输入的这些内容/符号的含义：    </p><p>第一行的 graph LR;  </p><p>graph 是告诉程序我要开始绘图了；<br>LR 是绘制从左到右的图形，这里的 L 和 R 分别是 Left 和 Right 的缩写。  </p><p>LR 还可以更改为其他 3 个值：   </p><ul><li>RL：从右到左    </li><li>TB：可不是指某宝哦，而是从上到下，T 和 B 分别是 Top 和 Bottom 的缩写    </li><li>BT：可不是指种子哦，而是从下到上   </li></ul><p>后面的就比较好理解了，从一个节点到下一个节点，节点内容中间加 2 个短横线 - 和 1 个大于号就好了，即 <code>--&gt;</code>。  </p><p>如果我们想在节点间的连接线上添加内容，如下面导图圈出的文本，则是在两个节点中间的 <code>--&gt;</code>插入 <code>--你想在导图连接线上添加的内容</code>。    </p><p>掌握使用 Mermaid 的这几个要点，<strong>在 Notion 中绘制一个简单的思维导图</strong>就绰绰有余了。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/27/16695303427924.jpg"></p><h2 id="用-Mermaid-在-Notion-中绘制其他的图形"><a href="#用-Mermaid-在-Notion-中绘制其他的图形" class="headerlink" title="用 Mermaid 在 Notion 中绘制其他的图形"></a>用 Mermaid 在 Notion 中绘制其他的图形</h2><p>前面说到 Mermaid 可以绘制多种图形，除了思维导图，如果你想在 Notion 中绘制其他的图形/图表，也可以考虑使用 Mermaid 来绘制：  </p><h3 id="绘制流程图"><a href="#绘制流程图" class="headerlink" title="绘制流程图"></a>绘制流程图</h3><p>流程图中不同的形状有着相对应的含义，例如：矩形/圆角矩形表示流程图的开始，菱形表示判断，柱形表示数据……   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/27/16695320089639.jpg"></p><p>绘制流程图时，在第一行输入流程图对应的英文 flowchart，且在后面写上流程图的方向，上图的方向是 TB，即从上往下。   </p><p>如果是像前面创建思维导图一样，<strong>直接输入文本</strong>，在流程图中渲染得到的就是<strong>矩形</strong>。   </p><p>其他形状对应的写法如下：  </p><ul><li>菱形：id{这是菱形}    </li><li>圆角矩形：id(这是圆角矩形)   </li><li>圆形：id((这是圆形))   </li><li>柱形：id[(这是柱形)]    </li><li>类似跑道外形的圆角矩形：id([这是类似跑道外形的圆角矩形])     </li><li>六边形：id      </li></ul><h3 id="绘制饼状图"><a href="#绘制饼状图" class="headerlink" title="绘制饼状图"></a>绘制饼状图</h3><p>用 Mermaid 绘制饼状图，则在第一行输入表示饼状图的 pie，后面跟上 title 和饼状图的名称。  </p><p>下面的则是组成饼状图的每一项，遵循程序中「<strong>键值对</strong>」的写法，左侧是<strong>项目名称</strong>，中间隔一个英文冒号，右侧是对应的<strong>比例</strong>或者<strong>数值</strong>（绝对值）。     </p><p>如果为数值，Mermaid 会自动计算数值在数值在总和中所占的比例，而不需要我们手动计算对应的比例。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/27/16695325577276.jpg"></p><p>关于 Mermaid 的用法，就简单介绍到这里咯，介绍它并不是说大家都要用它来绘制图形，而是提供一种选择：     </p><p>如果你想在 Notion 中绘制一些简单的图形/图表，例如思维导图或者饼状图，那么可以考虑用它，但对于一些复杂的图形，建议还是<strong>用更专业的工具</strong>，而不是被自己所掌握的语言、工具甚至是思维所束缚～   </p><p>让工具回归工具，让你成为你。    </p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>Notion</tag>
      
      <tag>笔记软件</tag>
      
      <tag>思维导图软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>除了PPT和Prezi，还有什么适合做演示的软件或者网站｜Gamma【效率工具指南】</title>
    <link href="/2022/11/24/2022-11-24-gamma/"/>
    <url>/2022/11/24/2022-11-24-gamma/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/2swnlCmweaRvwnTk2ggERQ">效率工具指南</a>」<br>文/彭宏豪     </p><p>Hello 各位好，我是小豪。    </p><p>今年最让人眼前一亮的演示软件，莫过于 <strong>Gamma</strong>，一款被誉为演示届 Notion 般存在的在线演示工具。     </p><p>刚经过简单的使用，我在 Gamma 上看到了 Notion 和 Craft 这两款软件的影子。       </p><p>打开 Gamma 官网，首页写着两句话：<strong>像一份文档一样写作，像一份幻灯片一样演示</strong>，简言之，Gamma 可以像编辑文档一样来编辑幻灯片，你可以把重心放在内容上，美化的事情交给软件。     </p><p>(注：deck 原意是甲板，但在外企中经常用来指代幻灯片)   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677449597735.jpg"></p><p>Gamma 官网：<br><a href="https://gamma.app/">https://gamma.app/</a></p><p>下图是我在 Gamma 中创建的一页幻灯片，一个卡片就是一页幻灯片，卡片顶部的标题，可以看成是这页幻灯片的标题。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677454115591.jpg"></p><p>输入卡片标题后，按回车键换到下一行，就能看到一个非常熟悉的交互方式，和 Notion 一样，输入斜杠 / 可以呼出插入不同块元素的面板。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677456819437.jpg"></p><p>当然，呼出的面板中的选项，带有 Gamma 自己的特色，譬如前面几项：   </p><ul><li>在底部添加新的卡片</li><li>在当前卡片嵌套一个新的卡片  </li><li>将当前的卡片进行分割，一分为二      </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677459645575.jpg"></p><p>往下滑动菜单，还能看到其他有意思的选项，例如：  </p><ul><li>插入来自 GIPHY 的 GIF 图片   </li><li>插入 Loom 录制的视频文件（Loom 在国内也有对应的产品——芦笋录屏）      </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677461572296.jpg"></p><p>还能插入各式各样的图表，例如：  </p><ul><li>序列图  </li><li>韦恩图 </li><li>时间线图   </li><li>矩阵  </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677463560905.jpg"></p><p>除了使用类似 Notion 的交互方式插入元素，我们还可以点击右侧的<strong>工具栏</strong>，将对应的元素拖拽插入幻灯片中。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677465040828.jpg"></p><p>添加到页面中的元素，像 Notion 中的块一样，长按元素左上角的图标并拖拽移动，可以自由更改元素在幻灯片中的位置。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677471933165.jpg"></p><p>需要说明的是，不像 PPT，Gamma 中每一页幻灯片的高度并不是固定的，也不需要每一页保持一样的高度，你可以根据需要，自由地调整幻灯片页面的高度。     </p><p>编辑好一个页面后，点击卡片底部的加号，可以快速创建一个新的卡片（新的幻灯片页面）。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677455998795.jpg"></p><p>如果你创建了多个卡片（多张幻灯片），可以点击左侧的按钮，打开 Gamma 文件的目录，这里会显示每个卡片的标题。  </p><p>当我们把鼠标移动到标题上方时，右侧会弹出卡片的缩略图，让我们对卡片内容有个大概的了解。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677455240716.jpg"></p><p>点击卡片右上角的「…」，弹出的面板提供了一些与卡片操作相关的选项，点击「Change background」，可以给卡片添加来自 Unsplash 的图片作为背景图。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677483286865.jpg"></p><p>点击右侧面板的「Advanced」选项卡，我们可以更改卡片的大小、透明度和颜色，因为我们在卡片下方添加了背景图，选择不同的选项，可以得到略有不同的效果。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677484985668.jpg"></p><p>除了修改单张卡片的样式，我们还可以点击页面右上角的「Theme」，更改 Gamma 文件的主题，在弹出的面板，选择不同的主题，会影响文件的<strong>全局样式</strong>。   </p><p>更改全局主题后，幻灯片的背景和文本的字体也会相应地发生变化，这种设计，让我想起了之前短暂用过的笔记软件 Craft。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677486516943.jpg"></p><p>编辑好 Gamma 文件的内容后，点击右上角的 Present，可以进入<strong>演示模式</strong>，点击键盘的方向键，可以快速切换到其他页面。   </p><p>在演示模式下，页面底部还有一个<strong>细节</strong>，它提供了一个类似<strong>进度条</strong>的设计，以一种可视化的方式，让演讲者或者观众可以了解到演示的进度。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677488132030.jpg"></p><p>最后，如果你想把在 Gamma 中创建的幻灯片分享给其他人，可点击右上角的 Share，在弹出的面板，点击 View，根据需要设置相应的权限：   </p><ul><li>编辑  </li><li>评论   </li><li>查看</li></ul><p>设置好对应权限后，将链接分享给其他人，对方打开就能直接查看、编辑或评论啦～     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677491869677.jpg"></p><p>看到这里，如果你对这款在线演示工具还有兴趣，不妨打开去尝试一下吧！    </p><p>需要说明的是，Gamma 目前仅支持 Google 账号登录，如果你之前没有注册过 Google 账号，那么想用上 Gamma，就会有一些困难，因为现如今注册一个 Google 账号，也变得挺麻烦的，需要验证手机号，如果你直接输入大陆的手机号，大概率无法顺利注册……    </p><p>最后的问题好像反而变成：2022 年如何注册一个 Google 账号？   </p><p>有需要的朋友，可以参考我在去年写过的一篇文章，有可能有用，也有可能已经失效了：    </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649912873&idx=1&sn=7a11acaec4173d7a9501359b4aa5d524&chksm=83a87204b4dffb12a3b1e058dbddbba43e293dcef288db6391927660bac6aca610c62f21e9f8&token=178478264&lang=zh_CN#rd">2021年，如何注册一个Google账号？</a>             </p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>Notion</tag>
      
      <tag>PPT</tag>
      
      <tag>办公软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>制作思维导图的软件有哪些？推荐10个好用的思维导图软件！</title>
    <link href="/2022/11/22/2022-11-22-mindmap/"/>
    <url>/2022/11/22/2022-11-22-mindmap/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于博客「效率工具指南」<br>文/彭宏豪      </p><p>制作思维导图的软件有哪些？</p><p>——多到选不过来！</p><p>思维导图这个领域太卷了，无论大小厂商，不论什么软件，都想从就那么大的蛋糕上分一口，以至于思维导图软件多到选不过来。</p><p>选择太多，每一款都去试也不太显示，既浪费时间也没那个精力～因此，也给了我们这类「工具人」一个机会，在亲自体验了 N 款导图软件后，想把其中比较<strong>好用的 10 款思维导图软件</strong>介绍给大家！  </p><p>话不多说，开整！</p><h2 id="01-BoardMix博思白板"><a href="#01-BoardMix博思白板" class="headerlink" title="01 BoardMix博思白板"></a>01 <a href="https://boardmix.cn/?source=peng_blog_10mindmap">BoardMix博思白板</a></h2><p>BoardMix博思白板，一款集合了多种功能的在线白板软件，其中就包括我们想要的<strong>思维导图</strong>功能。</p><p>✅ <strong>BoardMix思维导图功能特点</strong>：</p><ul><li>在线思维导图，打开即用</li><li>完全免费，<strong>无节点限制</strong></li><li>内置 11 种导图主题，自由变换</li><li>导图节点支持插入多张图片</li><li>支持 Markdown 编辑模式</li><li>支持导入 XMind 文件     </li><li>支持导出 SVG、PDF、图片文件（<strong>图片无水印</strong>）  </li><li>支持嵌入外部应用中使用，例如 Notion 和 AirTable 等，具体可参考我发布过的一个视频   </li><li>额外功能：思维导图一键转表格、思维导图路线图         </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image1.png" alt="image1"></p><p>说句题外话，思维导图软件发展到现在，开始出现了从以前<strong>单一的导图软件</strong>过渡到<strong>集合多种功能的综合软件</strong>，例如这里提到的 <strong>BoardMix博思白板</strong>，国外的 <strong>Miro、Whimsical</strong> 等，这些产品的设计思路可能不在于把单个功能做到极致，而是可以在一个软件中联动使用多个功能，各取所长，让用户不需要在多个应用间来回切换。</p><p>在 BoardMix博思白板中新建一个白板后，点击左侧菜单栏的<strong>思维导图图标</strong>，选择一种布局或主题样式，在白板任意位置单击，就能创建一个导图的中心节点。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image2.png" alt="image2"></p><p>选中添加的导图节点，再次单击节点，就能编辑节点中的内容，在节点上方弹出的菜单，可以修改节点内容的层级、字体、字号、粗体/斜体/下划线/删除线、对齐方式、文本颜色、文本背景色。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image3.png" alt="image3"></p><p>点击上方菜单最左侧的「T」选项，在弹出的二级面板中，可一键更改文本内容的样式，可选择的文本样式有：</p><blockquote><p>标题、一级标题、二级标题、三级标题、有序列表、无序列表、任务列表</p></blockquote><p>不同的标题样式，对应的字号大小存在着差别，<strong>导图的主节点可选择「标题」或「一级标题」</strong>，让文本看起来比较大，之后的子节点的字号可以随之递减。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image4.png" alt="image4"></p><p>在选中导图节点的情况下，点击右侧或下方的<strong>加号 +</strong> ，可以创建新的分支主题，或是和大多数思维导图软件一样，按下<strong>快捷键</strong>也能创建分支主题：</p><ul><li>Enter：创建同级的分支主题  </li><li>Tab：创建下一级的分支主题（子节点或孙子节点）</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image5.png" alt="image5"></p><p>﻿</p><p>选中导图的主节点，在上方弹出的菜单，选择「<strong>导图主题</strong>」，可以更改导图当前使用的布局或主题样式。    </p><p>譬如下图我更改了导图的主题样式，从左侧的蓝灰样式变为右侧的小清新样式。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image6.png" alt="image6"></p><p>如果你对 BoardMix 主题样式的配色方案不满意，也可以自行更改<strong>导图节点的背景色</strong>和<strong>导图连接线的颜色</strong>。</p><p>选中导图节点，点击上方菜单的第 2 个选项「<strong>填充颜色</strong>」，可以重新设置节点的背景颜色。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image7.png" alt="image7"></p><p>而如果是更改<strong>导图连接线的颜色</strong>，同样是先选中导图节点，点击「<strong>分支颜色</strong>」选项，从打开的面板选择一种颜色，修改之后就会更改节点所在的连接线和后面所有分支的颜色。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image8.png" alt="image8"></p><p>如果是想要在导图节点中插入图片，可点击上方菜单的「<strong>插入图片</strong>」，将本地的图片上传到导图中。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image9.png" alt="image9"></p><p>﻿<br>如果插入导图节点的图片尺寸比较大，会占用节点较多的空间，或是影响到节点内容的展示，这时我们选中节点插入的图片，长按拖拽图片右下角的锚点，<strong>缩小图片的尺寸</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image10.png" alt="image10"></p><p>﻿</p><p>BoardMix博思白板支持<strong>多人在线协作</strong>，而在其中创建的思维导图也是依托于白板之上，这也让我们可以在一个文档中同时编辑一个思维导图。</p><p>点击右上角的「<strong>分享</strong>」按钮，将文档链接设置为<strong>所有人可编辑</strong>，接着将文档链接发送给其他人，对方打开链接就能加入编辑，用于头脑风暴或是记录会议纪要，也是杠杠滴！</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image11.png" alt="image11"></p><p>在文件导出方面，BoardMix思维导图支持导出下图的格式——PNG、JPG、PDF、SVG 和软件专属的 bdx 格式，导出为图片格式时，点击下方的「分辨率」，可以调整导出图片的分辨率，数值越大，图片越清晰。</p><p>如果是选择 PDF 或 SVG 文件，由于这两种本质上都是矢量文件，可无限放大不失真，也就没有调整分辨率的需要啦，具体选择哪种导出格式，按自己的需要来就好了~</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image12.png" alt="image12"></p><p>BoardMix博思白板目前对个人用户<strong>完全免费</strong>，也没有对思维导图功能有任何限制——<strong>可添加无限节点，不会导图做到一半就弹出付费的窗口</strong>，使用 BoardMix 内置的导图功能，可以说是白嫖了！有在寻找免费思维导图软件的朋友，可以点击下方的链接🔗，前往 BoardMix 官网使用一下哇~   </p><p><a href="https://boardmix.cn/?source=peng_blog_10mindmap"><strong>BoardMix博思白板，免费在线思维导图，无限节点，支持导出高清无水印图片！</strong></a></p><h2 id="02-石墨文档思维导图"><a href="#02-石墨文档思维导图" class="headerlink" title="02 石墨文档思维导图"></a>02 石墨文档思维导图</h2><p>接下来说说，我每天在用的石墨文档中内置的「思维导图」功能，整体而言，<strong>石墨的导图功能比较简单（陋）</strong>，如果你对导图软件没有太多的要求，就是纯粹用来编辑内容，不搞那些花里胡哨的东西，那么就可以考虑用它。</p><p>点击石墨文档左上角的「创建」按钮，在弹出的面板，选择「思维导图」，创建导图文件。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image13.png" alt="image13"></p><p>从石墨文档顶部的工具栏，多少也能看出导图功能比较简单，就是一些添加导图节点、设置文本样式的选项。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image14.png" alt="image14"></p><p>﻿</p><p>如果想在导图中插入图片，可以点击工具栏的「插入图片主题」，不过插入的图片会<strong>单独置于一个节点中</strong>，而不是像前面介绍的 BoardMix博思白板一样，导图内容和图片位于同一个节点中。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image15.png" alt="image15"></p><p>在界面的左上角，石墨文档还提供了切换视图模式的选项：</p><ul><li>思维导图：默认视图</li><li>大纲视图：和另一款思维导图「幕布」一样，每个导图节点为大纲笔记中的一行</li><li>混合视图：大纲视图和思维导图并排显示，如下图，左侧是大纲视图，右侧是思维导图，不过在这种视图模式下，左侧的大纲视图无法编辑</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image16.png" alt="image16"></p><p>由于这个导图功能是基于石墨文档之上，因此它也继承了石墨文档「协作」的功能，如果你想要和其他人在线编辑思维导图，可以点击右上角的按钮，邀请其他人加入协作，就能一起编辑同一份思维导图。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image17.png" alt="image17"></p><p>在文件导出方面，石墨文档提供了 2 种导出格式：图片和 xmind，可选择的文件格式偏少。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image18.png" alt="image18"></p><p>﻿<br>最后值得一提的是，使用这一功能做好的思维导图，可以<strong>直接嵌入石墨文档</strong>中，方法也很简单：</p><p>在石墨文档中输入<strong>斜杠 /</strong> ，呼出下图的面板，找到「<strong>石墨云文件</strong>」，在弹出的面板中选择导图文件，就能将导图嵌入文档中啦。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image19.png" alt="image19"></p><h2 id="03-幕布"><a href="#03-幕布" class="headerlink" title="03 幕布"></a>03 幕布</h2><p>幕布，一款跨平台的思维导图软件，既有网页版，也有电脑客户端，还有移动版，我觉得是国内少有的能把跨平台做得这么好的导图软件了。</p><p>在幕布刚推出时，因为看到一些博主的推荐，于是我也去用了这款产品，设计简约，产品功能不花里胡哨，很对我的胃口。</p><p>幕布将大纲笔记（无序列表）和思维导图融合到了一起，编辑时用大纲视图模式，需要演示的时候，可以一键切换为思维导图。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image20.png" alt="image20"></p><p>不过，比较遗憾的是，幕布后来被字节收购后就停止更新了，不确定是不是已经成了内部的边缘项目，没人维护，个人对幕布的未来表示担心，希望这么好的产品不要轻易就关掉了。</p><p>还有一点，幕布虽然内置了链接分享的功能，但这个分享功能我觉得目前是属于基本不可用的状态，随便分享一点东西都会提示违规。之所以有这问题，我猜测是为了最大程度地降低审核内容的成本，幕布把审核力度提上去了，稍有一丁点不对劲的内容，就咔嚓掉，这样某种程度上也保证幕布可以活得尽可能长~</p><h2 id="04-飞书思维笔记"><a href="#04-飞书思维笔记" class="headerlink" title="04 飞书思维笔记"></a>04 飞书思维笔记</h2><p>飞书思维笔记，是一款内嵌在「飞书」中的思维导图工具，它的存在，有点像是前面介绍的石墨文档思维导图之于石墨文档，作为整个<strong>飞书产品矩阵</strong>的一种补充~</p><p>打开飞书云文档，点击右上角的「新建」，选择「<strong>新建思维笔记</strong>」，创建一个导图文件。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image21.png" alt="image21"></p><p>打开思维笔记，一股浓浓的幕布风扑面而来，还是原来熟悉的配方和界面，有那味了哈哈哈哈哈哈哈</p><p>点击左上角的按钮，可以从当前的大纲视图切换为思维导图，相信用过幕布的朋友，对这种切换方式并不陌生。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image22.png" alt="image22"></p><p>﻿<br>在思维导图模式下，长按任意节点并拖拽，可以移动导图节点，更改节点在导图中的位置。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image23.png" alt="image23"></p><p>如果你想把存放在云端的思维导图下载到本地，可以点击右上角的「…」，选择「<strong>下载为</strong>」，思维笔记提供了 2 种导出格式——FreeMind 和图片。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image24.png" alt="image24"></p><h2 id="05-MindNode"><a href="#05-MindNode" class="headerlink" title="05 MindNode"></a>05 MindNode</h2><p>MindNode，是苹果生态中比较出名的思维导图应用，和不少苹果专属的软件一样，MindNode 目前只能在苹果设备上使用，支持 macOS、iOS 和 iPadOS 系统。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image25.png" alt="image25"></p><p>MindNode 可能是众多思维导图软件中的一股清流，没有复杂的软件功能或界面设计，一切都保持着极简的风格，占据软件窗口最大区域的，就是我们需要编辑的导图。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image26.png" alt="image26"></p><p>对于免费用户，目前只能使用 MindNode 默认的导图样式，如果想用上更多的导图主题，就需要开通会员啦，软件采用订阅制，价格对多数人而言还是可以接受的。</p><h2 id="06-DesktopNaotu"><a href="#06-DesktopNaotu" class="headerlink" title="06 DesktopNaotu"></a>06 DesktopNaotu</h2><p>DesktopNaotu，一款基于百度脑图的离线版本，让我们在离线模式下依旧可以使用导图工具，支持 Windows、macOS 和 Linux 系统。</p><p>Windows 版本的 DesktopNaotu 界面如下图，有用过网页版的朋友想必不会感到陌生，两者可以不能说如出一辙，简直是一模一样啊哈哈哈哈</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image27.png" alt="image27"></p><p>﻿</p><p>值得一提的是，DesktopNaotu 的「帮助」选项卡中，还提供了「备份百度脑图到本地」的选项，打开的帮助文档提供了将存放在云端的文件备份到本地的方法，有备份需求的朋友可以看看。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image28.png" alt="image28"></p><h2 id="07-Whimsical"><a href="#07-Whimsical" class="headerlink" title="07 Whimsical"></a>07 Whimsical</h2><p>Whimsical，和最前面介绍的 <strong>BoardMix博思白板</strong>一样，一款集合了多种功能——流程图、线框图、<strong>思维导图</strong>、项目和文档工具——的综合应用。</p><p>与 BoardMix 的操作逻辑相似，在 Whimsical 中创建的思维导图，也是基于<strong>白板</strong>这个容器之上，点击左侧工具栏的思维导图按钮，在白板上单击，即可开始编辑导图内容。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image29.png" alt="image29"></p><p>Whimsical 是海外团队打造的产品，目前仅有英文版本，但软件本身并不复杂，因此软件语言并不会影响产品的使用。</p><p>对于免费用户，Whimsical 提供了 3000 个 Block 的使用权限，如果全部用来创建思维导图，则意味着最多可以创建 3000 个节点，超出后想继续使用，就需要付费啦~</p><h2 id="08-XMind海外版"><a href="#08-XMind海外版" class="headerlink" title="08 XMind海外版"></a>08 XMind海外版</h2><p>说实话，发现 XMind 海外版的过程有一点意外，这是我在一条动态的评论区发现的，原 po 主说 XMind 没有在线协作功能，准备换掉 XMind，下面有一个网友在评论区说 XMind 海外版有协作功能。</p><p>XMind 海外版 <code>xmind.works</code> 是一个在线的思维导图软件，外观与国内的客户端挺像的，但账号与国内的版本不互通，即海外版和国内版的数据不能自动关联，需要重新注册一个账号。</p><p>如果你想与其他人分享当前编辑的导图，可点击左上角的「文件」菜单，选择 Share，借用 Google Drive、Dropbox 或者 OneDrive 网盘实现多人在线协作。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image30.png" alt="image30"></p><p>依稀记得 XMind 国内版最初也有云端同步功能，不过后来官方说是太少人用这个功能了，就选择把这个功能下掉了……这对已经习惯使用各类在线协作工具的人来说，可能不太能接受了，也让 XMind 在这方面显得有些滞后。</p><h2 id="09-MindMeister"><a href="#09-MindMeister" class="headerlink" title="09 MindMeister"></a>09 MindMeister</h2><p>MindMeister 是一个在线的思维导图软件，包括头脑风暴、笔记、项目策划等必须采用到创意规划的工作。它具有时尚的现代界面和大量的自定义选项（包括更多的企业布局），在创建思维导图时会自动对齐节点，从而可以轻松创建出美观的思维导图。</p><p>但有些功能（例如导出为 PDF 或图片）需要付费，因此对于个人来说，它不是最佳的选择。不过，对于团队来说，它的协作功能非常棒。</p><p>MindMeister 可以将团队成员添加到思维导图中，互相发表评论，或者以其他方式共同进行头脑风暴或提出想法。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image31.png" alt="image31"></p><h2 id="10-Miro"><a href="#10-Miro" class="headerlink" title="10 Miro"></a>10 Miro</h2><p>Miro，一款在国外拥有非常高知名度的<strong>在线白板软件</strong>，与回答开头介绍的 <strong>BoardMix博思白板</strong>可以归为一类产品。</p><p>Miro 的使用逻辑也是基于无限大的白板之上，初次使用需要创建一个白板，打开之后点击左侧的思维导图工具，就能创建一个思维导图。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image32.png" alt="image32"></p><p>﻿</p><p>不过就我自己的使用体验而言，Miro 思维导图节点间的<strong>连接线太细</strong>，也没有给用户提供调节粗细的选项，对比已经看惯了的粗线条，反而觉得这种外观设计有点丑…    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/22/image33.png" alt="image33"></p><p>由于 Miro 是海外的产品，在国内的打开速度比较慢，要用代理才会有所改善，而且 Miro 免费版对功能也做了限制，譬如只能创建 3 个白板，无法使用计时器、音视频通话等功能。</p><p>在与他人进行远程协作时，如果想使用音视频通话就白板内容展开沟通，要么是使用外部的会议软件，要么就是可以切换到国内同款的 BoardMix博思白板，BoardMix 目前完全免费，没有对软件功能进行限制~</p><h2 id="最后的总结"><a href="#最后的总结" class="headerlink" title="最后的总结"></a>最后的总结</h2><p>呼（实际上是气喘吁吁），一口气分享了 <strong>10 款制作思维导图的软件</strong>，最后再来简单总结一下：</p><ul><li>BoardMix博思白板：在线思维导图，完全免费，无节点限制，可导出高清图片</li><li>石墨文档思维导图：功能比较简单</li><li>幕布：融合大纲笔记和思维导图的跨平台工具，目前处于暂停维护的状态，产品未来的走向不太明朗</li><li>飞书思维笔记：字节收购幕布后重新做的导图工具</li><li>MindNode：苹果生态专属的思维导图软件</li><li>DesktopNaotu：基于百度脑图推出的离线版思维导图，免费</li><li>Whimsical：多功能在线协作应用，包含导图功能，免费用户最多可创建 3000 个节点</li><li>XMind海外版：可在线使用的XMind版本</li><li>MindMeister：在线思维导图软件，导出图片时需要付费</li><li>Miro：多功能的在线白板软件，创建的导图简约美观，需要有良好的网络条件</li></ul><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>思维导图软件</tag>
      
      <tag>在线工具</tag>
      
      <tag>在线思维导图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>又一款VSCode神级插件Marp，用Markdown来做PPT【效率工具指南】</title>
    <link href="/2022/11/12/2022-11-12-vscode_plugin/"/>
    <url>/2022/11/12/2022-11-12-vscode_plugin/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于我的 <a href="https://penghh.zhubai.love/posts/2203059185087090688">Newsletter「效率工具指南」</a>，欢迎订阅。     </p><p>Hello 各位好，我是小豪。    </p><p>今天这篇文章，想来介绍一款很久之前在一个视频中看到的工具——Marp，正如文章标题写的那样，这是一款基于 Markdown 来做 PPT 的工具。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16681792907364.jpg"></p><p>Marp 官网：<br><a href="https://marp.app/">https://marp.app/</a>   </p><p>我最初是在 doyoudo 创始人 @展哥 的前端视频中看到这款工具的，左侧是 Markdown 语法，右侧是渲染得到的幻灯片。  </p><p>因为对这款工具比较感兴趣，我也注意到了软件左上角的名称，就把软件名记到了「幕布」里，想着有一天买了 Mac 也要试一下这款软件。           </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16681794054239.jpg"></p><p>然后就一直被我遗忘到了现在，但实际情况是，这款软件也能在 Windows 或 Linux 系统上使用，并不局限于 macOS 系统。   </p><p>今天要介绍的是 Marp 推出的 VS Code 插件——<strong>Marp for VS Code</strong>，在 VS Code 安装了这个插件后，意味着我们也可用 VS Code 来制作幻灯片了。    </p><p>说到这，不得不再次感慨 VS Code 的强大——除了不能生孩子，啥都能做。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16681820992253.jpg"></p><p>安装了 Marp for VS Code 插件后，不需要任何配置，就能直接做 PPT。      </p><p>点击 VS Code「文件」选项卡，选择「新建文件」，在弹出的面板，文件类型选择 <strong>Marp Markdown</strong>。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16681779123091.jpg"></p><p>选择 Marp Markdown 文件后，会新建一个下图的文件，开头有一个配置选项 <code>marp: true</code>，表示使用 Marp 来创建 PPT。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16682174486364.jpg"></p><p>点击文件右上角的「预览」按钮，就可以在右侧看到第一个幻灯片页面。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16682193869163.jpg"></p><p>上面空空如也，接下来就轮到我们用 Markdown 语法大展身手了：  </p><p>对于熟悉 Markdown 的朋友不用多说，就像是写文章一样来写 PPT。   </p><p>如果想要创建第二个页面，只要在末尾添加 3 个短横线 <code>-</code>，下方就会多出一张新的幻灯片。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16682195202992.jpg"></p><p>不过，如果我们想要在幻灯片中插入图片，就会略微麻烦一些。   </p><p>直接插入的本地图片，渲染后会显示为丢失，解决的方法是先将本地图片<strong>上传到网上（图床）</strong>，再粘贴图片链接🔗，图片才能正常显示。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16682199694760.jpg"></p><p>插入的图片会显示为原始的大小，如果图片比较大，会占据整个幻灯片页面，影响其他内容的展示。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16682203088914.jpg"></p><p>要想解决这个问题，只需要在 Markdown 图片名称的位置，配置一下图片的宽度或高度：  </p><p><code>w:300 h:300</code>  </p><p>这里的 w 和 h 分别是 width 和 height 的缩写，注意 <strong>w 和 h 必须是小写</strong>。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16682203796142.jpg"></p><h2 id="更改全局主题"><a href="#更改全局主题" class="headerlink" title="更改全局主题"></a>更改全局主题</h2><p>Marp 渲染得到的幻灯片默认为白底蓝/黑字，如果你不喜欢默认的样式，可以在 Markdown 文件的开头，更改 theme 字段的值，来更改幻灯片的全局主题。      </p><p>theme 字段有 3 个值：  </p><ul><li>default（默认值，可省略）   </li><li>uncover   </li><li>gaia     </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16682207136574.jpg"></p><p>下图是 uncover 主题的效果，所有内容都<strong>居中显示</strong>，引用内容的样式从竖线变为双引号。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16682210046434.jpg"></p><p>下图是 gaia 主题的效果，白色背景更改为<strong>浅黄色</strong>，有点像一些阅读类 App 的暖光/护眼模式，但我不确定这种颜色是否真的护眼……        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16682211160349.jpg"></p><p>如果想用 gaia 主题<strong>浅黄色的背景</strong>，但又想像 uncover 主题那样，让内容<strong>居中显示</strong>，可不可以做到呢？   </p><p>——Yes！   </p><p>只要在文件开头的配置中，再添加一个 class 字段，值设置为 lead 即可。   </p><p>不过最终的效果还是有一点差别，添加了引用和无序列表样式的内容，还是会保持原来的靠左显示。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16682214200719.jpg"></p><h2 id="更换单个幻灯片的背景和文字颜色"><a href="#更换单个幻灯片的背景和文字颜色" class="headerlink" title="更换单个幻灯片的背景和文字颜色"></a>更换单个幻灯片的背景和文字颜色</h2><p>前面设置的主题，属于<strong>全局样式</strong>，会影响到所有幻灯片的背景颜色。  </p><p>如果我们想自定义其中一个或多个页面的颜色，也是可以做到的。   </p><p>在想要更改幻灯片背景色的页面开头，加上 <code>&lt;!-- _backgroundColor: 颜色--&gt;</code> 字段，就可以更改页面的背景色。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16682220926219.jpg"></p><p>这里的颜色可以是颜色的英文，例如上面的蓝色 blue，也可以是 rgb 值，这有点像是在写 CSS 样式了😂          </p><p>更换背景色之后，如果新的背景色与文本内容的颜色区分不明显，就会影响到文本内容的正常观看，这时就需要更改文字的颜色啦。   </p><p>更改文本内容的颜色，需要在下面多配置一个选项 <code>&lt;!-- _color: 颜色--&gt;</code>，就能自定义文本的颜色。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16682224461487.jpg"></p><p>既然可以修改单张幻灯片的背景色，那有些人可能就会想到：可不可以更改所有幻灯片的背景色呢？   </p><p>也是可以的～只要在文件开头新增一个选项 backgroundColor，就能自定义所有幻灯片的背景色。   </p><p>当然，<strong>页面单独设置的背景色会覆盖掉全局设置的颜色</strong>，正如你在下图看到的，即便我们将全局的背景色更改为黄色，第二页还是维持了单独设置的蓝色。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16682227116421.jpg"></p><h2 id="将幻灯片导出为-PDF"><a href="#将幻灯片导出为-PDF" class="headerlink" title="将幻灯片导出为 PDF"></a>将幻灯片导出为 PDF</h2><p>最后，无论用 Marp 和 VS Code 来写 PPT 有多么好，最终还是要落回到地面，思考一个问题：如何把你做好的 PPT 分享给其他人？如何让你兼容更多的人或场景呢？   </p><p>还好 Marp 也为我们考虑到了，支持将渲染得到的 PPT 导出为 PDF 文件。   </p><p>方法如下：  </p><p>点击 Marp Markdown 文件右上角的 Marp 图标（三角形图标），在弹出的面板，选择「Export Slide Deck」，就可以将 PPT 导出为 PDF 啦～       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16682231746370.jpg"></p><h2 id="⚠️注意事项"><a href="#⚠️注意事项" class="headerlink" title="⚠️注意事项"></a>⚠️注意事项</h2><p>如果你的 VS Code 安装了 Markdown 渲染插件 Markdown Preview Enhanced，需要先将这个插件「禁用」或是「卸载」，转而使用 VS Code 后来集成的 Markdown 预览功能，才能正常看到渲染后的 PPT 页面。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/12/16681795751416.jpg"></p><h2 id="了解更多"><a href="#了解更多" class="headerlink" title="了解更多"></a>了解更多</h2><p>基于 Marp 制作 PPT 的基本用法，就介绍到这里啦，如果你想更深入地了解 Marp 的用法，可以查看 连玉君 老师博客上的一篇文章：   </p><p><a href="https://www.lianxh.cn/news/521900220dd33.html">用Markdown制作幻灯片-五分钟学会Marp（下篇）-M110b</a>     </p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>插件</tag>
      
      <tag>Markdown</tag>
      
      <tag>PPT</tag>
      
      <tag>VSCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>4款免费的图片压缩工具推荐</title>
    <link href="/2022/11/10/2022-11-10-picture_compress/"/>
    <url>/2022/11/10/2022-11-10-picture_compress/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 各位好，我是小豪。    </p><p>今天这篇文章，给大家推荐 <strong>4款好用的图片压缩工具</strong>，希望能帮到有需要的朋友。      </p><h2 id="01-Pixso"><a href="#01-Pixso" class="headerlink" title="01 Pixso"></a>01 <a href="https://pixso.cn/?source=xiaolvtools_blog">Pixso</a></h2><p>Pixso，一个对标国外的 Figma 的<strong>在线 UI 设计工具</strong>，虽然是 UI 设计工具，看起来比较专业，但软件也内置了<strong>图片压缩</strong>功能，完全免费，且不限制上传的图片大小。   </p><p>点击 Pixso 顶部的 图形工具 右侧的下拉图标 ﹀ ，在弹出的面板，选择<strong>图片</strong>，将待压缩的图片上传到 Pixso。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/10/16680091655574.jpg"></p><p>选中上传到 Pixso 画布的图片，点击右侧导出的<strong>加号+**，勾选「开启图片压缩」的复选框，启用 Pixso 的压缩功能，在右侧还可以更改压缩的强度——</strong>高品质、中品质、低品质**：     </p><p>高品质对应<strong>轻度压缩</strong>，低品质则是<strong>较强压缩</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/10/16680091922806.jpg"></p><p>确定好压缩强度后，点击下方的「导出xxxxx」，就能将压缩后的图片下载到本地。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/10/16680092692969.jpg"></p><h2 id="02-docsmall"><a href="#02-docsmall" class="headerlink" title="02 docsmall"></a>02 docsmall</h2><p>docsmall，是一个在线的图片、Gif 和 PDF 压缩工具。   </p><p>工具本身是免费的，但有一个限制，上传的静态图片和 Gif 大小<strong>不能超过 25 MB</strong>，超过就无法使用这个工具了。   </p><p>上传图片后，默认会选择「轻度」压缩，通常我用的也是默认的选项，当然你可以根据需要，自行调整「<strong>压缩强度</strong>」的大小。       </p><p>docsmall 支持批量压缩图片，一次最多可上传 30 个文件。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/10/16680094096682.jpg"></p><h2 id="03-多功能在线图片处理工具-Images-Tools"><a href="#03-多功能在线图片处理工具-Images-Tools" class="headerlink" title="03 多功能在线图片处理工具 Images Tools"></a>03 多功能在线图片处理工具 Images Tools</h2><p>Images Tools，一个多功能的在线图片处理工具，可用来转换图片格式、更改图片尺寸、给图片加水印、裁剪图片、批量重命名图片等。  </p><p>如果只是压缩图片，直接调小中间的「<strong>品质</strong>」参数，就能实现对图片的压缩了。  </p><p>如果想额外调整图片的尺寸，那就要先开启左侧的「尺寸」，下方就会多出一些和调整图片尺寸相关的选项，缩小「百分比」，可以保持原有比例缩小图片的大小。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/10/16680099087403.jpg"></p><p>除了压缩图片，我之前在<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649919591&idx=1&sn=9071cfbf602b321aa393067f7a7a7c01&chksm=83a8944ab4df1d5cb044137d41b470c0eee3b70c50088ad95121dcd8929e102aa41a1bfd7885&token=1593882372&lang=zh_CN#rd">一篇文章</a>中也介绍过这个工具「添加水印」的功能：    </p><p>点击左侧栏的「水印」，启用水印功能，这里同样可以选择添加「图片」或「文字」水印。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/10/16468379038482.jpg"></p><p>下面我以添加文字水印为例，在右侧的「内容」输入文本内容，下面可以调整水印的大小、字体颜色、位置、透明度和旋转角度等。    </p><p>左侧是水印在不同设备或图片尺寸上的预览效果。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/10/16468382242671.jpg"></p><p>如果觉得一张图片只有一个水印太单薄的话，可以点击右侧的「<strong>重复</strong>」选项卡，打开重复选项，调整下面的参数，增加图片中水印的数量，让别人盗无可盗。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/10/16468384084026.jpg"></p><p>设置好所有参数后，点击右上角的「保存」按钮，接着回到网站首页。    </p><p>点击右侧的区域，上传你想添加水印的图片，支持批量上传多张图片，最好不超过 100 张。   </p><p>上传图片后，网站会自动按照前面设置好的参数处理图片。处理完之后，会自动把多张图片打包到一个压缩包并下载。           </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/10/16468385485996.jpg"></p><p>细心的话，你会发现 Images Tool 的操作逻辑与其他图片处理工具不太一样：   </p><p>Images Tool 是先配置好参数，再上传处理图片；而绝大多数图片处理工具的逻辑是，先上传图片，再配置参数。   </p><p>获取 Images Tool 的网址，请点击下方的公众号卡片「效率工具指南」，在后台回复【<strong>水印</strong>】两个字。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/10/gong-zhong-hao-xiao-lu-gong-ju-zhi-nan.png" alt="公众号：效率工具指南"></p><h2 id="04-图压"><a href="#04-图压" class="headerlink" title="04 图压"></a>04 图压</h2><p>图压，一款免费开源的本地图片压缩工具，支持 Windows 和 macOS 系统。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/10/16680110468589.jpg"></p><p>图压支持压缩的图片格式更多，除了常规的 JPG、PNG 和 GIF，还支持压缩矢量格式的 SVG 文件。</p><p>将图片拖拽到软件窗口，它就会自动压缩拖入的图片，不需要手动确认再开始压缩。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/10/16680111642553.jpg"></p><p>在对图片进行压缩之前，这里有两种模式可供选择，一种是调整「压缩强度」，强度越大，压缩后的图片越小，另一种则是控制压缩后的「文件大小」。   </p><p>在压缩前就能选择压缩后的文件大小，这对一些要求上传的图片不能超过某个数值的平台，例如公众号文章不能插入超过 10 MB 的图片，真的很有帮助。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/10/16680111832664.jpg"></p><p>图压在软件下方还提供了其他的设置选项，例如是否更改压缩后的图片格式、图片的保存位置、以及压缩后的图片名称。</p><p>对于压缩得到的文件，图压默认会在文件名称的末尾加上 -tuya，以与压缩前的原始图片进行区分。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/10/16680112042851.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>格式转换</tag>
      
      <tag>在线工具</tag>
      
      <tag>图片压缩</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac电脑虚拟机Parallels Desktop安装Windows系统【效率工具指南】</title>
    <link href="/2022/11/06/2022-11-6-mac_windows/"/>
    <url>/2022/11/06/2022-11-6-mac_windows/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/25I-M1tRAoxGRxl60PTseg">效率工具指南</a>」<br>文/彭宏豪    </p><p>Hello 各位好，我是小豪。   </p><p>上周尝试给吃灰多年的 Kindle 刷安卓系统，照着网上的教程，其中有一个步骤，不得不在 Windows 系统上操作……  </p><p>因为这样，我也不得不在磁盘「<strong>寸土寸金</strong>」的 Mac 电脑上安装了 Windows 系统，因此今天的这篇文章，来简单分享一下 Mac 电脑安装 Windows 系统的方法。  </p><p>下图是虚拟机软件预估的 Win10 系统会占用的磁盘空间大小——21.47 GB，虽然我有 1 TB 空间，但还是肉疼。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16673502888841.jpg"></p><p>我在 Mac 电脑上安装 Windows 系统的方法是：先安装虚拟机软件 Parallels Desktop，再在虚拟机软件中安装 Win10 镜像系统。   </p><p>除了这种方法，应该还有其他的方案，比如 Intel 芯片的电脑还支持的「双系统」，即在启动电脑时，可选择要使用的操作系统。   </p><p>不过我图方便，还是用了更为简单的「虚拟机 + 镜像系统」的方案。     </p><p>在开始之前，需要准备好 2 个东西——    </p><ul><li>虚拟机软件 Parallels Desktop，可从官网下载，软件提供免费使用，过期后就需要付费，价格还比较高，当然你也可以从一些其他渠道下载（懂的都懂）；                </li><li>Win10 镜像系统文件，格式为 iso，可从 msdn itellyou 下载。  </li></ul><p>msdn itellyou 网址：<br><a href="https://msdn.itellyou.cn/">https://msdn.itellyou.cn/</a>      </p><p>下载 Parallels Desktop 后，就和普通的软件一样安装就好啦。    </p><p>打开 Parallels Desktop，选择「安装 Windows 或其它操作系统」。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677027509849.jpg"></p><p>如果你已经提前下好 Win10 镜像系统文件，Parallels 会扫描到本地已有的 iso 文件，并给出下图的提示「已找到安装映像」。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677028347619.jpg"></p><p>之后 Parallels 还会询问，你想把安装的 Windows 用于哪种用途，这里我选择「<strong>生产力</strong>」，猜测它是会根据我们选择的用途，给出不同的分配 Mac 磁盘空间和运行内存的方案。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16673500675834.jpg"></p><p>接着选择存放 Win10 系统的位置，名称和保存位置按默认的即可，记得勾选底部的「<strong>安装前设定</strong>」，否则无法顺利进入下一步。           </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16673502888841.jpg"></p><p>在打开的窗口，点击「配置」，选择「硬件 &gt;&gt; CPU 与内存」，选择「高级」，在弹出的窗口，将「虚拟机监控程序」更改为「Parallels」。    </p><p>后面的步骤我就没有截图了，按照提示进行操作，应该就能顺利安装 Win10 系统啦。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16673503936012.jpg"></p><h2 id="虚拟机无法连接网络"><a href="#虚拟机无法连接网络" class="headerlink" title="虚拟机无法连接网络"></a>虚拟机无法连接网络</h2><p>在 Parallels 虚拟机安装好 Win10 系统后，不确定是不是因为我用了特殊版的虚拟机软件，每次打开 Win10 系统都会遇到下面的提示：  </p><blockquote><p>您的虚拟机将继续正常运作，但将无法连接网络。  </p></blockquote><p>说人话就是，你在虚拟机中安装的 Win10 系统不能上网！  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16676379886646.jpg"></p><p>对于这个问题，其实也有对应的解决方法：   </p><p>打开 Mac 的「访达」，点击顶部菜单栏的「前往」选项卡，选择「前往文件夹」。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677046261873.jpg"></p><p>在打开的窗口，粘贴下面的路径，打开 Parallels 安装位置的文件夹。     </p><p><code>/Library/Preferences/Parallels/</code></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677047183972.jpg"></p><p>打开的文件夹下有一个名为 <code>network.desktop.xml</code> 的文件，将这个文件<strong>拖拽复制</strong>一份到 Mac 桌面，然后使用 Mac 内置的「文本编辑器」或者电脑上安装的代码编辑器，例如 <strong>VS Code</strong> 打开复制的文件。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677048535212.jpg"></p><p>打开文件后，找到 <code>&lt;UseKextless&gt;</code> 这一行代码，将中间的数字 -1 更改为 0，保存文件。     </p><p>接着将 Mac 桌面经过修改的文件，拖回到 <code>/Library/Preferences/Parallels/</code> 文件夹中，<strong>替换已有的同名文件</strong>。    </p><p>此时再重新打开虚拟机 Parallels，运行 Win10 系统，应该就不会再弹出「无法连接到网络」的提示啦。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677050328010.jpg"></p><p>✅ 虚拟机 Win10 系统可以正常连接到网络的标志： </p><p>Win10 系统右下角的小电脑不会出现一个红色的叉号；或是打开 Edge 浏览器，可以正常访问网页。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16677055233076.jpg"></p><h2 id="另外一个问题"><a href="#另外一个问题" class="headerlink" title="另外一个问题"></a>另外一个问题</h2><p>除了前面的问题，我使用 Parallels 还遇到了另外一个错误提示：</p><blockquote><p>无法将虚拟摄像头连接到 Win10 </p></blockquote><p>这个问题目前我还没找到解决方法，而且我暂时也没有在虚拟机的 Win10 系统连接摄像头的需求，因此把这个问题搁着，也没啥大碍。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/06/16676385996234.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>Windows</tag>
      
      <tag>Win10</tag>
      
      <tag>macOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Apple Watch手表的多种妙用｜附苹果手表选购指南和建议</title>
    <link href="/2022/11/05/2022-11-5-applewatch/"/>
    <url>/2022/11/05/2022-11-5-applewatch/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/qAzgpyYasyFT7y2G1lqrWQ">效率工具指南</a>」<br>文/彭宏豪    </p><p>前两天听到同事在调侃买的 Apple Watch 没有用，续航差（每天一充），感觉她对手表挺不满意的。  </p><p>我购入 Apple Watch SE 的时间没她那么长，使用下来，整体上对手表还是挺满意的。    </p><h2 id="跑步查看配速"><a href="#跑步查看配速" class="headerlink" title="跑步查看配速"></a>跑步查看配速</h2><p>决定要买 Apple Watch，主要还是受到一位博主 @辉哥 的影响，之前有一阵子他立了一个 flag——坚持跑步 100 天，并且将自己的跑步截图发布到知识星球里。</p><p>每次看他发布的跑步动态，配上苹果手表提供的<strong>跑步配速、运动圆环</strong>截图，一方面觉得很有<strong>仪式感</strong>，另一方面觉得，<strong>培养运动习惯，前期需要用足够的数据反馈来激励自己，才能一步一步坚持下来</strong>，这里的数据反馈可能是公里数、配速、每次跑步的时长、3 个圆环都闭合上的次数等等。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/21/img9d0bdab8d00a1.jpeg" alt="IMG_9D0BDAB8D00A-1"></p><p>上面说到的「跑步配速和运动圆环截图」，来自于 iPhone 上的「健身」App，这个 App 是免费的，无法从应用商店搜索下载，只有在你购买了 Apple Watch 之后，它才会安装到你的手机上。  </p><p>购入 Apple Watch SE 已有 111 天，今年断断续续跑步 75 次了，每次 3 公里，我觉得可以坚持这么多天，应该也和 Apple Watch 脱不了关系，因为多数时候，我都会将运动截图发动到微信群、知识星球和即刻上，一边证实自己确实运动了，一边收获别人的点赞。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/21/img82786e868fc71.jpeg" alt="IMG_82786E868FC7-1"></p><h2 id="戴着口罩时解锁手机"><a href="#戴着口罩时解锁手机" class="headerlink" title="戴着口罩时解锁手机"></a>戴着口罩时解锁手机</h2><p>上次在 iPhone 13 的文章提到，在家里用 Face ID 解锁 iPhone 很好用，但换到公众场所，每次都需要先摘下口罩才能解锁手机或者支付费用。   </p><p>用了接近 10 天新手机，看到系统给我推送了一条消息，「使用 Apple Watch 解锁」，才想起挺早之前在科技媒体上看到的，可以用 Apple Watch 来代替 Face ID 解锁手机。  </p><p>苹果产品团队的厉害之处就在于，可以给自己的产品挖掘到新的使用场景，就像这里，可以在戴着口罩时用手表解锁手机，好像你买的 Apple Watch 更香了。。。      </p><p>启用的方法：打开 iPhone 设置 &gt;&gt; 面容 ID 与密码 &gt;&gt; 使用 APPLE WATCH 解锁。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/21/img9752b69851051.jpeg" alt="IMG_9752B6985105-1"></p><h2 id="解锁-Mac-电脑"><a href="#解锁-Mac-电脑" class="headerlink" title="解锁 Mac 电脑"></a>解锁 Mac 电脑</h2><p>我家里的 Mac 是旧款的电脑，不像 2021 款配备了带有 Touch ID 的妙控键盘，可以通过指纹解锁电脑。   </p><p>但有了 Apple Watch 之后，在佩带手表的情况下，可以通过它快速解锁电脑。   </p><p>启用的方法：系统偏好设置 &gt;&gt; 安全性与隐私，勾选「使用您的 Apple Watch 解锁 App 和 Mac」。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/21/16374559218828.jpg"></p><h2 id="温和地叫你起床"><a href="#温和地叫你起床" class="headerlink" title="温和地叫你起床"></a>温和地叫你起床</h2><p>晚上睡觉的时候戴在手上，第二天早上会通过震动的方式叫醒你，替代原先吵闹的闹钟铃声。</p><h2 id="监测睡眠质量"><a href="#监测睡眠质量" class="headerlink" title="监测睡眠质量"></a>监测睡眠质量</h2><p>Apple Watch 上有一个监测睡眠质量的第三方应用——AutoSleep，它可以给出我们处于轻度睡眠、安宁睡眠和深度睡眠的时长，持续记录以评估我们的睡眠质量。</p><p>这款应用需要付费下载，为买断制，价格为 25 元。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/21/img0315.PNG" alt="IMG_0315"></p><p>除了这些，知识星球「曹将和朋友们」里的一位网友 @好姑娘 在社群里也分享过苹果手表的使用心得，她写得更加详细，感兴趣的可以查看下图：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/21/image582125128421254.PNG" alt="image_582125128421254"></p><h2 id="【附】Apple-Watch-选购指南"><a href="#【附】Apple-Watch-选购指南" class="headerlink" title="【附】Apple Watch 选购指南"></a>【附】Apple Watch 选购指南</h2><p>我选购的 Apple Watch 型号为 Apple Watch SE，应该是目前最便宜的苹果手表。     </p><p>如果你希望手表<strong>屏幕常亮</strong>（官方也称之为<strong>始终显示</strong>），不想抬起手腕等待屏幕亮起，那就得购买 Apple Watch Series 5 及之后更新的型号，廉价款的 Apple Watch SE 是不带有屏幕常亮功能的。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/05/16676166604698.jpg"></p><p>和 iPad 平板有点相似，每款 Apple Watch 都分为两个类别——<strong>GPS 版</strong>和<strong>蜂窝版</strong>，前面的版本只有连上手机的网络，才能接收微信消息、在线听音乐等，但有一个例外：它可以在无网络的条件下使用微信支付，这样即便你只戴了手表出门运动，运动完还能去小卖部买瓶水。    </p><p>GPS 版的 Apple Watch 手表，如果想脱离手机还能听音乐的话，需要提前在手表中缓存好音乐。     </p><p>Q：Apple Watch 可以外放音乐吗？<br>A：不可以，需要连上蓝牙耳机才能听到音乐，而且最好是 AirPods。   </p><p>Q：Apple Watch 听音乐一定要用 Apple Music 吗？<br>A：不一定，只是用 Apple Music 的体验会好一些，网易云或者 QQ 音乐的缓存有时好像会出一些问题，不知道这是不是个例？     </p><p>Q：你觉得 Apple Watch 最好用的点在哪里？<br>A：和 iPhone 打配合，大大缩短了戴着口罩😷解锁手机屏幕的时间。    </p><p>Q：想戴着苹果手表入睡，但又担心手表的续航，影响第二天使用，该怎么办？<br>A：其实这个问题完全不用担心，以我在用的 Apple Watch SE 为例，我会在晚上洗澡前给手表提前充电🔋（一般这时候还有 30%-40% 的电量），洗完澡刷牙再加上睡前的一小段时间，手表多数时候就已经充满电啦，充满电之后就可以愉快地戴着手表入睡啦。       </p><p>Q：哪些苹果手表支持快充呢？<br>A：Apple Series 7 及之后的型号，包含 Apple Series 8 和 Apple Watch Ultra。    </p><p>苹果手表快充需要准备的 2 件东西——Apple USB-C 磁力快速充电线和 Apple 18W、20W、29W、30W、61W、87W 或 96W USB-C 电源适配器。   </p><p>想了解更多信息，可以查看苹果手表的帮助文档：   </p><p><a href="https://support.apple.com/zh-cn/HT212769">关于 Apple Watch 快速充电 - 官方 Apple 支持 (中国)</a>      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/11/05/16676186982898.jpg"></p><p>Q：我想买手表⌚️，你会推荐买哪一款？<br>A：世界上的商品非常多，但好商品非常少，很多都是粗制滥造，或者只是在模仿别人，要买就买开创者的产品，推荐买苹果家的手表，虽然续航差，但买完你会回来感谢我的。     </p><h2 id="【附】介绍-Apple-Watch-的视频"><a href="#【附】介绍-Apple-Watch-的视频" class="headerlink" title="【附】介绍 Apple Watch 的视频"></a>【附】介绍 Apple Watch 的视频</h2><ul><li><a href="https://www.bilibili.com/video/BV1GU4y197UY/">我给我妈买了一只 Apple Watch - 黄杨ME</a>    </li><li><a href="https://www.bilibili.com/video/BV1Gv411N7yJ/?is_story_h5=false&p=1&share_from=ugc&share_medium=iphone&share_plat=ios&share_session_id=8B83A9F3-D829-4160-A0B5-7E992A356EBC&share_source=WEIXIN&share_tag=s_i&timestamp=1667611110&unique_k=eyOd05X">6 款智能手表横评：苹果、三星、OPPO、华为、魅族、TicWatch - 先看评测</a>     </li></ul><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>Apple</tag>
      
      <tag>iPhone</tag>
      
      <tag>苹果手表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大厂都没有余粮了：明确反对语雀文档的收费方案</title>
    <link href="/2022/10/30/2022-10-30-yuque/"/>
    <url>/2022/10/30/2022-10-30-yuque/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/LBfq8rPDfzEp4wlOpybUjA">效率工具指南</a>」<br>文/彭宏豪      </p><p>Hello 各位好，我是小豪。   </p><p>今天又来开喷了，这回喷的产品是我之前推荐过的<strong>语雀文档</strong>。    </p><p>关于语雀文档，我之前写过的文章有：   </p><ul><li><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649882091&idx=1&sn=3fcdadbdd565b7b73581a43facf14d6d&chksm=83abf9c6b4dc70d0eb0848aab841ffea91faedbe8576c9dc9a16459c05ddffbde0f9c8403065&token=1680651249&lang=zh_CN#rd">10万阿里人在用的办公神器，再不用就晚了</a>    </li><li><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649900305&idx=1&sn=b9f95664c2efa48538a8e24f53e271b5&chksm=83a8413cb4dfc82a00229c4d0649d8e25e56bd431d7d7ead72f3dd120590df9af327c2fb71dd&token=1680651249&lang=zh_CN#rd">阿里的语雀文档好在哪里？</a>  </li></ul><p>但上周看到语雀开完「语雀知识大会」后，更新了原有的收费方案，其中有 1 条规则让我很想吐嘈：   </p><p>免费用户不具备<strong>公开分享文档</strong>的权益，要想用上其他很多同类在线文档都有的「公开分享」功能，亲您这边至少要充值 99 元的会员费呢～       </p><p>看到旁边有个用户这么评价这个新的规则：  </p><blockquote><p>普通用户连分享功能都割了，这有点扯了，这不是让在线文档做了太监？      </p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/30/16671277492738.jpg"></p><p>说到这个功能为啥收费，有一位可能是语雀官方工作人员（根据 IP 属地为浙江推测）的用户在知乎评论到：   </p><blockquote><p>因为在国内公开的审核成本太高了……相信做内容的公司都知道这个痛，也许不合情，但在国内很合理。   </p></blockquote><p>我想先反驳一下这位知友最后说的「也许不合情，但在国内很合理」，正确的应该是「<strong>也许不合理，但在国内很合情</strong>」（注：情指的是国情）。              </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/30/16671285885758.jpg"></p><p>乍一看这位知友说的似乎很有道理，站在公司的角度，把审核用户公开分享的内容的成本转嫁到分享人身上，<strong>谁公开分享谁付钱</strong>，这逻辑成立。         </p><p>但从用户的角度出发——</p><p>不想过多讨论的人可能会说：这关我屁事，谁要你审核我公开分享的内容了？        </p><p>客观一点的人可能会说：我知道审核成本也是一笔不小的成本，但这成本本来就是内容工具服务提供方的立身之本，自己应担负的责任，为啥要转嫁到我头上呢？    </p><p>但不管怎么说，我偏向于认为，绝大部分用户都不会去想那么多，<strong>只要看到语雀不花钱就不能公开分享，只因为这一点，就会无情地抛弃你，然后换到下一款文档工具或笔记软件</strong>。        </p><p>那些以前吹语雀文档有多么好用的人，多数也不会为它付费，<strong>大多数人只是用嘴投票，真正到了要让它们掏钱的时候，他们都跑光了</strong>。     </p><p>现实就是如此残酷，就像是我前几天发了一张付费星球的图片，没人付费一样，那种感觉简直糟透了。    </p><p>说回到语雀文档，我觉得还有不少槽点：  </p><ul><li>性能差，这一点我有 2 个体会，之前创建了一份 7000 多字的笔记，里面包含有一些代码，后面想继续编辑，就会变得很卡顿；另外一个是前面截图的「语雀新收费方案」的说明文档，似乎是文档的评论或批注数过多，也会导致文档在缩放页面时变得很卡顿，简直不能忍受         </li><li>在线文档导出的 Markdown 文件不会将文档中的图片单独打包（这增加了文档导出的成本）          </li></ul><p>这次上线的新收费方案，可能可以靠情怀让一些忠实用户付了费，但接下来的产品如果还是这样，我觉得也没啥好说的。      </p><p>付了费的用户，如果连起码的自由迁移文档数据的权益都没有，那我宁愿不用，我整个本地的 txt 或者 Markdown 文档，不花钱，还能把数据掌握在自己手里，它难道不香吗？    </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
      <tag>语雀文档</tag>
      
      <tag>在线文档</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows电脑免费设置动态壁纸！这个QQ音乐隐藏用法相见恨晚</title>
    <link href="/2022/10/24/2022-10-24-windows_dynamicwallpaper/"/>
    <url>/2022/10/24/2022-10-24-windows_dynamicwallpaper/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/foDtsriS8rbDjA9Vs5aeOg">效率工具指南</a>」<br>文/彭宏豪    </p><p>Hello 各位好，我是小豪。  </p><p>今天的文章比较简单，来分享一下 QQ 音乐电脑版的一个隐藏玩法：将视频设置为桌面壁纸，起到和 Windows 上非常出名的动态壁纸软件 Wallpaper Engine 一样的效果。   </p><p>方法也非常简单，如下图所示：  </p><p>点击 QQ 音乐 Windows 版本右上角的「装扮」图标，切换到「桌面装扮」，可以看到软件内置的 4 个动态壁纸，点击其中任意一个，下载后就设置为桌面壁纸，而且是动态的。   </p><p>不过 QQ 音乐内置的动态壁纸很丑，但还好它提供了使用其他动态壁纸的选项，点击下方的「<strong>自定义动态壁纸</strong>」，可以将本地的其他视频设置为桌面壁纸。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/24/zhuo-mian-zhuang-ban.png" alt="桌面装扮"></p><p>需要注意的是，目前这个功能只能在 Windows 版本的 QQ 音乐中使用，苹果电脑上的版本缺少了这个功能。   </p><p>苹果用户想给 Mac 电脑桌面设置动态壁纸，可以查看我前不久发过的文章：  </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649920947&idx=1&sn=46c18af69e0a2c5a1cd92748ac557249&chksm=83a8919eb4df1888ed7a4d26d4416871df7729fae92df92575f5c56b4c32a3dbdbd9a3b597db&token=2127183971&lang=zh_CN#rd">推荐2个动态壁纸软件</a>        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/24/16666255004147.jpg"></p><p>有了设置动态壁纸的工具，接下来的问题就是，<strong>去哪里下载好看的动态壁纸</strong>？    </p><p>这里推荐一个今天刚看到的免费下载动态壁纸的网站：  </p><p>对于每个视频，网站提供了 3 种版本：1080p、4K 和移动端的版本，你可以根据自己在用的显示器分辨率下载对应分辨率的版本，看了官网有 300 多个页面，视频数量应该够你选了。                </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/24/16666259454184.jpg"></p><p>MyLiveWallpapers 网址：<br><a href="https://mylivewallpapers.com/">https://mylivewallpapers.com/</a>      </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>壁纸</tag>
      
      <tag>QQ音乐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何用手机把视频中的音频提取出来？</title>
    <link href="/2022/10/21/2022-10-21-videotoaudio/"/>
    <url>/2022/10/21/2022-10-21-videotoaudio/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/1wohLgmRIUMQnS38pgT5-Q">效率工具指南</a>」<br>文/彭宏豪      </p><p>Hello 大家好，我是小豪。      </p><p>前几天在后台看到有几位朋友留言问，「如何提取视频中的音频」，因此今天给大家介绍 4 个提取音频的方法。</p><h2 id="01-更改文件格式"><a href="#01-更改文件格式" class="headerlink" title="01. 更改文件格式"></a>01. 更改文件格式</h2><p>第一个提取音频的方法非常简单，右击文件选择「重命名」，将视频文件格式的后缀 mp4 更改为 mp3，原本的视频就会自动变为音频。</p><p>更改文件格式后播放文件，如果打开的文件仍为视频，可以试着再次更改文件格式，将 mp3 更改为 m4a 或 wma。</p><p>由于 iPhone 不支持在手机上更改文件格式的后缀，因此如果你想在 iPhone 或 iPad 上提取音频，可以使用下面介绍的方法。</p><h2 id="02-快捷指令"><a href="#02-快捷指令" class="headerlink" title="02. 快捷指令"></a>02. 快捷指令</h2><p>快捷指令是 iPhone 和 iPad 独有的应用，因此这个方法只适合使用苹果设备的朋友。</p><p>使用相机扫描下方的二维码，按照页面提示，在快捷指令中添加「提取音频」。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/21/16663141562589.jpg"></p><p>添加「提取音频」快捷指令后，点击运行「提取音频」，从相册中选择想要提取音频的视频。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/21/16663142224802.jpg"></p><p>接着需要选择保存音频的位置，你可以将音频保存在 iPhone 本地或 iCloud 云盘中。</p><p>保存之后，打开文件 App，找到保存音频的文件夹，就能看到从视频中提取的音频。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/21/16663142363165.jpg"></p><h2 id="03-Convertio"><a href="#03-Convertio" class="headerlink" title="03. Convertio"></a>03. Convertio</h2><p><a href="https://convertio.co/zh/mp4-mp3/">https://convertio.co/zh/mp4-mp3/</a>  </p><p>Convertio，是一个多功能的文件格式转换网站，它支持转换的文件格式有图像、文档、电子书、音频和视频等。</p><p>由于我们想提取的是音频，根据待提取视频的格式选择转换前的视频格式，转换后选择音频格式 MP3，接着上传视频文件，等待网站完成音频的提取。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/21/16663142623493.jpg"></p><p>当然，对于免费用户而言，Convertio 仅支持转换不超过 100 MB 的文件。如果待提取的视频文件超过 100 MB，可以使用下面这个终极工具。</p><h2 id="04-Premiere"><a href="#04-Premiere" class="headerlink" title="04. Premiere"></a>04. Premiere</h2><p>Premiere，是设计公司 Adobe 推出的视频剪辑软件，它的功能非常强大，前面介绍的工具能做的，它一样能做，而且还可能做得更好。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/21/16663142769369.jpg"></p><p>打开 Pr，新建一个项目工程，将视频拖拽到时间轴，右击视频，选择「取消链接」，将原本绑定在一起的视频和音频分离。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/21/16663142993475.jpg"></p><p>接着选中视频（在 Pr 中，被选中的对象会呈现为灰色），按 Delete 键删除，只保留音频。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/21/16663143063984.jpg"></p><p>点击「文件」选项卡，选择「导出–媒体」。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/21/16663143147580.jpg"></p><p>在弹出的窗口，将格式设置为「MP3」。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/21/16663143222049.jpg"></p><p>点击「输出名称」右侧的蓝色文字，设置导出的音频文件名称和保存的位置，最后点击底部的「导出」按钮即可。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/21/16663143323411.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">       </p>]]></content>
    
    
    
    <tags>
      
      <tag>快捷指令</tag>
      
      <tag>在线工具</tag>
      
      <tag>音频提取</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客增加文章置顶功能【效率工具指南】</title>
    <link href="/2022/10/20/2022-10-20-article_pin/"/>
    <url>/2022/10/20/2022-10-20-article_pin/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 各位好，我是小豪。   </p><p>留意过公众号「历史消息」页面的朋友，想必会在不少公众号看到下图的「<strong>作者精选</strong>」模块，它有点像是<strong>置顶</strong>🔝功能，可以让作者或运营者把最想让用户看到的内容排在所有文章的最前面。   </p><p>目前这个模块最多只支持置顶 2 篇文章，数量多了也不好，会让设计出来的精选失去了意义——要先把别的文章设为精选，就必须先取消掉原有的精选（在「订阅号助手」App 中操作）。           </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/20/img3665.JPEG" alt="IMG_3665"></p><p>因为公众号的这个精选功能，我就联想到：为啥我不给自己的个人博客也整一个呢？     </p><p>说来就来，下图就是我的 Hexo 博客添加了「<strong>文章置顶</strong>」功能后的效果，我选取了其中 2 篇用作测试：  </p><ul><li>我终于拥有自己的独立博客了   </li><li>油猴脚本获取公众号文章封面       </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/20/16661981781654.jpg"></p><p>给 Hexo 博客添加「文章置顶」功能也非常简单，当然需要说明的是，不同的 Hexo 主题添加或配置这个功能的方法，存在着细微的差异。  </p><p>以我在用的 Hexo Fluid 主题为例，官方提供的「配置指南」也提供了详细的说明：  </p><p>安装版本号 &gt;= 2.0.0 的 <code>hexo-generator-index</code> 插件，并在文章开头的 <code>Front-matter</code> 中额外增加一个 sticky 属性，就能将文章置顶啦。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/20/16661986069840.jpg"></p><p>Hexo Fluid 主题配置指南：<br><a href="https://hexo.fluid-dev.com/docs/guide/#%E6%96%87%E7%AB%A0%E6%8E%92%E5%BA%8F">https://hexo.fluid-dev.com/docs/guide/#%E6%96%87%E7%AB%A0%E6%8E%92%E5%BA%8F</a></p><p>我跟着配置指南的提示，分别给两篇文章添加了 sticky 属性，两个值分别为 100 和 99，数字大的文章会排在数字小的文章上方，效果就如前面你所看到的那样。           </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/20/16661984858109.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/20/16661988818465.jpg"></p><p>如果你使用的是别的 Hexo 主题，可能要安装另外的插件 <code>hexo-generator-index-pin-top</code>，并配置 top 属性来实现文章的置顶，具体可参考网上的一篇文章：   </p><p><a href="https://blog.51cto.com/u_15477117/4919708">https://blog.51cto.com/u_15477117/4919708</a>  </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">       </p>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue前端项目集成element-plus组件库：全局引入和按需引入</title>
    <link href="/2022/10/19/2022-10-19-vue_emelentplus/"/>
    <url>/2022/10/19/2022-10-19-vue_emelentplus/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><blockquote><p>注：标题的「按需引入」可细分为 2 种，<strong>按需引入</strong>和<strong>按需自动引入</strong>，更推荐使用后一种。      </p></blockquote><p>element-plus，基于 Vue 3.0 的桌面端<strong>组件库</strong>。      </p><p>element-plus 的使用方式和很多其他的组件库是一样的，所以学会 element-plus，其他类似 ant-design-vue、NaiveUI、VantUI 都是差不多的。   </p><p>安装 element-plus 库：  </p><pre><code class="hljs sql">npm <span class="hljs-keyword">install</span> <span class="hljs-keyword">element</span>-plus</code></pre><p>在项目中集成 element-plus，有两种方式：  </p><ul><li>全局引用：所有的组件全部集成，优点是集成比较简单，缺点是全部组件会打包到项目代码中       </li><li>按需引用：优点是打包生成的代码会小一些，缺点是引用起来麻烦一些    </li></ul><h3 id="全局引用"><a href="#全局引用" class="headerlink" title="全局引用"></a>全局引用</h3><p>在入口文件 <code>main.ts</code> 中导入安装的 element-plus 和 CSS 样式；     </p><p>在下方通过 <code>app.use</code> 安装插件。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/19/16658023949845.jpg"></p><p>接着就能直接在 <code>App.vue</code> 中使用 element-plus 中封装好的各种组件，例如下图的 el-button 按钮组件。    </p><p>由于这是<strong>全局引用 element-plus</strong>，相应地里面包含的<strong>组件也是全局注册</strong>的，因此我们不需要在 <code>App.vue</code> 的 script 中引用和注册组件。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/19/16658032948529.jpg"></p><h3 id="按需引用"><a href="#按需引用" class="headerlink" title="按需引用"></a>按需引用</h3><p>按需引用，配置起来稍微有一点麻烦，我们需要在用到 element-plus 组件的 vue 文件中同时<strong>引入组件和用到的 CSS 样式</strong>。   </p><p>这里引入 <code>base.css</code> 文件是必须的，否则 button 组件的 CSS 文件 <code>el-button.css</code> 不会生效。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/19/16658089071674.jpg"></p><p>但是这样我们在开发时每次使用都要手动引入对应的 CSS 样式，使用起来会比较麻烦，我们还可以使用另外一种方法：<strong>按需自动引入</strong>。   </p><h3 id="按需自动引入"><a href="#按需自动引入" class="headerlink" title="按需自动引入"></a>按需自动引入</h3><p>首先要安装两款插件 <code>unplugin-vue-components</code> 和 <code>unplugin-auto-import</code>：     </p><pre><code class="hljs sql">npm <span class="hljs-keyword">install</span> -D unplugin-vue-components unplugin-<span class="hljs-keyword">auto</span>-<span class="hljs-keyword">import</span></code></pre><p>接着还要修改 Webpack 的配置，对于我们这个项目，要修改的就是 <code>vue.config.js</code> 文件，导入相应的模块，并在 configureWebpack 的 plugin 字段配置安装的 2 个插件。    </p><pre><code class="hljs js"><span class="hljs-keyword">const</span> AutoImport = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;unplugin-auto-import/webpack&#x27;</span>)<span class="hljs-keyword">const</span> Components = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;unplugin-vue-components/webpack&#x27;</span>)<span class="hljs-keyword">const</span> &#123; ElementPlusResolver &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;unplugin-vue-components/resolvers&#x27;</span>)<span class="hljs-built_in">module</span>.exports = &#123;    configureWebpack: &#123;        plugin: [            AutoImport(&#123;        resolvers: [ElementPlusResolver()]      &#125;),      Components(&#123;        resolvers: [ElementPlusResolver()]      &#125;)        ]    &#125;&#125;</code></pre><p>完成上面的配置后，再回到 <code>App.vue</code> 文件，<strong>不需要引入和注册组件</strong>，我们就能直接在 vue 文件的 template 模板使用 el-button 组件。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/19/16658190884582.jpg"></p><p>老师在视频课程中安装的插件(Babel 相关的插件)和这里安装的插件不一致，babel 插件配置起来更麻烦，还要在入口文件 <code>main.ts</code> 中引入和<strong>注册全局组件</strong>，才能实现在任意的 vue 文件中使用 el-button 组件。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/19/16658192180100.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">       </p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>Vue</tag>
      
      <tag>ElementPlus</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac电脑动态壁纸软件推荐【效率工具指南】</title>
    <link href="/2022/10/17/2022-10-17-macdynamicwallpaper/"/>
    <url>/2022/10/17/2022-10-17-macdynamicwallpaper/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/ldfKFPrUIj8uYTHpzqH_qQ">效率工具指南</a>」<br>文/彭宏豪    </p><p>Hello 各位好，我是小豪。  </p><p>今天来推荐 2 个 Mac 电脑上的动态壁纸软件：  </p><ul><li>Plash   </li><li>Dynamic Wallpaper  </li></ul><blockquote><p>使用 Windows 系统的朋友，可以使用很出名的 Wallpaper Engine，或是查看我之前发布过的一篇文章：<br><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649894479&idx=1&sn=54d67edb1e4117c11089d34d0bcaf53f&chksm=83a82a62b4dfa37414214aa0b576ae746bb435d70b2e38cb8bf5e10c444c3a7f7a3d3d7dcaa9&token=487665104&lang=zh_CN#rd">史上第二全的壁纸下载攻略，以后别再找人要壁纸了</a>    </p></blockquote><h2 id="Plash"><a href="#Plash" class="headerlink" title="Plash"></a>Plash</h2><p>Plash，一款可以把任意网页设置为桌面壁纸的软件，软件开源免费，可从 Mac App Store 下载。   </p><p>如果你添加的网页带有交互效果，那么把网页设置为桌面壁纸后，就能直接在桌面上与网页发生交互。   </p><p>就像是下图我添加的液态星球网站，在桌面上移动鼠标指针，桌面的液态星球也会跟着移动。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/16/16659319082190.jpg"></p><p>具体效果可以查看我录制的一个视频，扫码即可查看：<br><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/16/qrcodea--a1-1.jpg" alt="QRcode_A — a1 -1-"></p><p>Plash 这款软件，与我之前介绍过的一款 Windows 上的免费动态壁纸软件 Lively Wallpaper 很像。  </p><p>话说回来，我之所以能发现 Plash 这款软件，还得归功于有人在 Lively Wallpaper GitHub 项目的 Issues 的分享，正巧有人在下方询问：有没有 Mac 版的 Lively Wallpaper，就有网友分享了 Plash。   </p><p>Plash GitHub 项目地址：<br><a href="https://github.com/sindresorhus/Plash">https://github.com/sindresorhus/Plash</a>   </p><p>Plash 官网地址：<br><a href="https://sindresorhus.com/plash">https://sindresorhus.com/plash</a>   </p><p>顺便一提，开发 Plash 这款应用的作者，是一个<strong>全职的开源应用程序开发者</strong>，我数了一下，他的官网列出了 29 个 App，我没有一一去确认是否所有应用都是免费的，但看每一款 App 的图标，就觉得这是一个非常用心的开发者。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/16/16659336913775.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/16/16659335386442.jpg"></p><h2 id="Dynamic-Wallpaper"><a href="#Dynamic-Wallpaper" class="headerlink" title="Dynamic Wallpaper"></a>Dynamic Wallpaper</h2><p>Dynamic Wallpaper，一款付费的动态壁纸软件，价格为 18 元，可从应用商店下载。  </p><p>这款应用与 Windows 上非常出名的 Wallpaper Engine 很像，软件内置了不同类别的视频，如下图左下角所示，也支持使用关键字进行搜索。     </p><p>在筛选视频时，可选择视频分辨率(内置的视频最高分辨率应该是 4K)、是否带有声音。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/16/16659338924434.jpg"></p><p>如果在内置的壁纸库中没有找到自己喜欢的壁纸，还可以点击顶部状态栏的图标，选择「<strong>导入本地视频</strong>」，将本地视频设置为桌面壁纸。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/16/16659344499462.jpg"></p><p>这款软件不仅可用于设置动态壁纸，还可以将视频应用到屏保。   </p><p>不过这个功能我暂时还没有体验，目前用的还是之前安装的动态屏保，感兴趣的朋友可以自行尝试。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/16/16659341787420.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">       </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>开源软件</tag>
      
      <tag>壁纸</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>免费制作Gif的软件或网站【效率工具指南】</title>
    <link href="/2022/10/16/2022-10-16-Gif/"/>
    <url>/2022/10/16/2022-10-16-Gif/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 各位好，我是小豪。</p><p>用过免费最强大的Gif制作软件或网站，当属<a href="https://ezgif.com/">EZGif</a>，老外开发的网站，免费无套路：  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/16/16658806728435.jpg"></p><p>EZGif 顶部的导航栏列出了这款工具的各项功能——  </p><blockquote><p>图片中的中文是用浏览器插件翻译的，不太准确。  </p></blockquote><ul><li>GIF Maker：GIF制作</li><li>Vide to GIF：视频转换为 GIF</li><li>Resize：重新调整大小</li><li>Rotato：旋转   </li><li>Crop：画面裁剪      </li><li>Cut：剪辑（剪去多余的片段）   </li><li>Optimize：压缩优化    </li><li>Effects：添加特效    </li><li>Split：切割   </li><li>Add text：添加文本    </li></ul><p>点击每一项，下面还细分出了多项小功能，以「视频转GIF」为例，包含了：   </p><ul><li>视频转GIF   </li><li>Rotato video：旋转视频   </li><li>Resize：调整大小   </li><li>Reverse：反转（视频倒放）     </li><li>Cut video：剪辑视频   </li><li>Crop video：裁剪视频画面大小    </li><li>Video speed：更改视频播放速度   </li><li>Mute：静音   </li><li>Merge：合并   </li><li>Video to JPG：视频到JPG图片   </li><li>Video to PNG：视频到PNG图片   </li></ul><p>这么多项功能，你说良心不？而且是完全免费，比国内许多宣称免费、但实际上很多套路的工具，良心多了，快去尝试一下吧！        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/16/16658806833865.jpg"></p><p>另外，如果你想找一款<strong>本地的Gif压缩/制作工具</strong>，推荐下面这些：  </p><ul><li>Mac：Gif Brewery 或者 Gifox  </li><li>Windows：HoneyCam   </li><li>iPhone/iPad：ImgPlay（未付费的情况下导出会包含有水印）         </li><li>Android：Gif录制助手   </li></ul><p>HoneyCam 的介绍，可以查看我录制过的一期视频：  </p><p><a href="https://www.bilibili.com/video/BV1xS4y1v7x1/">超好用的Gif动图录制工具HoneyCam，用过的都夸好【效率工具指南】</a></p><h2 id="Gif-Brewery"><a href="#Gif-Brewery" class="headerlink" title="Gif Brewery"></a>Gif Brewery</h2><p>Gif Brewery，苹果电脑上一款付费的 Gif 录制工具，可以用来录制 Gif，也可以缩小 Gif 图片尺寸。    </p><p>点击第一个按钮「<strong>Open Video</strong>」，这个按钮的表面意思是<strong>打开视频</strong>，但其实也可以打开 Gif。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/16/16463206527819.jpg"></p><p>打开需要调整尺寸的 Gif 图后，点击左上角的按钮「Resize」。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/16/16463209971327.jpg"></p><p>中间会弹出一个小窗口，向左👈拖拽顶部的 Scale 滑钮，就可以在保持 Gif <strong>长宽比</strong>不变的情况下，缩小 Gif 图片的尺寸。     </p><p>我一般是把 Gif 的宽度缩小到 1000-1200px 之间的任意数字，供参考，你可以按需自行调整。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/16/16463210378434.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">       </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>Windows</tag>
      
      <tag>Gif</tag>
      
      <tag>在线工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>思维导图软件幕布导出Markdown【效率工具指南】</title>
    <link href="/2022/10/11/2022-10-11-mubuexport/"/>
    <url>/2022/10/11/2022-10-11-mubuexport/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/ZWxbw10b_I-M_Q0stszXYw">效率工具指南</a>」<br>文/彭宏豪      </p><p>Hello 各位好，我是小豪。    </p><p>继之前写过<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649920142&idx=1&sn=88f4acce321bb7917a7313c85e6148d8&chksm=83a896a3b4df1fb53feead145913aba5803f69bf5a37504f1c3c901caf0c424dc7e293e4b4ec&token=237325951&lang=zh_CN#rd">石墨文档批量导出</a>之后，今天我想对许久没更新的思维导图软件「幕布」动手了——<strong>从幕布中批量导出 Markdown 文件</strong>，预防之后幕布可能关停带来的数据丢失。         </p><p>先来看一下从幕布导出前后的对比：   </p><p>下图左侧是导出前的幕布文件，右侧是导出后在 Markdown 编辑器 MWeb 打开的 Markdown 文件。   </p><p>对比了导出前后的文件，发现导出的部分 Markdown 文件存在<strong>文本丢失</strong>的问题，这个问题会出现在某一行文本带有<strong>粗体</strong>样式的时候，导出的 Markdown 只保留了粗体样式中的文本。          </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/11/16654635347301.jpg"></p><p>不过我发现，<strong>文本丢失的问题，目前只出现在创建时间比较早的文档上</strong>，我猜测是在幕布推出 Markdown 功能之前创建的文档，导出时所在的行如果带有粗体样式，就会发生内容丢失，而如果是之后创建的文档，就不会出现这个问题。          </p><p>上面在幕布中创建的读书笔记，是纯粹的文本内容，为了更全面地了解这个导出工具的能力，我还测试了<strong>导出带有图片</strong>的幕布文件。   </p><p>下图是带有图片的幕布文件导出前后的对比：  </p><p>导出的 Markdown 文件会生成一个压缩包，里面带有原文件中附带的图片，因此使用 MWeb 打开的 Markdown 文件(下图右侧)，图片也能正常显示，但有个小小的不足——幕布中插入的 gif 动画会变成一张静态的 jpg 图片。             </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/11/16654657992107.jpg"></p><p>总体而言，我对这个导出工具还是比较满意的，虽然多少存在一些问题，但能把我放在幕布中的大部分内容导出，我就很满意了。    </p><h2 id="幕布导出器-Mubu-Dumper"><a href="#幕布导出器-Mubu-Dumper" class="headerlink" title="幕布导出器 - Mubu Dumper"></a>幕布导出器 - Mubu Dumper</h2><p>前面用到的幕布批量导出 Markdown 工具，就是下图的浏览器插件：<strong>幕布导出器 - Mubu Dumper</strong>。</p><p>这个插件目前只上架到了 Chrome Web Store，还没上架 Edge 的插件商店。        </p><p>有意思的是，我还留意到了这个插件名称下方的域名 <code>xmind.app</code>，用过国内另外一款思维导图软件 XMind 的朋友，想必对这个域名并不陌生。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/11/16654667162953.jpg"></p><p>浏览器插件「幕布导出器 - Mubu Dumper」安装地址：<br><a href="https://chrome.google.com/webstore/detail/%E5%B9%95%E5%B8%83%E5%AF%BC%E5%87%BA%E5%99%A8-mubu-dumper/nhpebeoohnmbgeigmojaebjfliekikkb/related">https://chrome.google.com/webstore/detail/%E5%B9%95%E5%B8%83%E5%AF%BC%E5%87%BA%E5%99%A8-mubu-dumper/nhpebeoohnmbgeigmojaebjfliekikkb/related</a> </p><p>安装插件后，在浏览器打开网页版的幕布，点击浏览器右上角的插件图标，在弹出的面板，可以选择导出 所有文件、单个文件夹或是单个文件。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/11/16654678724168.jpg"></p><p>勾选☑️ 文件之后，点击下方的「导出」按钮，在弹出的二级菜单，可以选择导出的文件格式：  </p><p>默认导出 xmind 格式的文件，不过下方也提供了更通用的 Markdown 格式。      </p><p>这里之所以提供了 Markdown 格式，不确定是不是只提供 xmind 格式的话，会让人看起来是在「明目张胆」地撬幕布的墙角，所以出于体面一些的考虑，这里也提供了更通用的 Markdown 格式。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/11/16654683129332.jpg"></p><p>不过，撬别人墙角，在国内很多产品都可以看到，不独有 XMind 一家：   </p><ul><li>国内很多模仿 XMind 的思维导图软件：支持导入 xmind 文件    </li><li>国内很多模仿 Figma 的设计软件：支持导入 Figma 文件      </li><li>国内很多模仿 Visio 的绘图软件：支持导入 Visio 文件    </li></ul><p>不仅如此，有些产品的「帮助文档」中，还明目张胆地列出了如何将其他产品的文件导入自己产品的方法，你说会有多少人注意到呢？       </p><p>绝大多数用户都不会在意这些事情，因为这些下三滥的操作多了，原本不正确的事情也会变成是理所当然。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/11/16654689727150.jpg"></p><p>看到这里，你说：       </p><p>情怀有用吗？<br>体面有用吗？<br>体面能当饭吃吗？<br>产品理念有用吗？<br>团队气质有用吗？     </p><p>在没有赚到钱让产品或团队可持续地活下来，扯那么多虚的，有用吗？    </p><p>少谈情怀，多干正事。        </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">       </p>]]></content>
    
    
    
    <tags>
      
      <tag>幕布</tag>
      
      <tag>插件</tag>
      
      <tag>Markdown</tag>
      
      <tag>思维导图软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>油猴脚本获取公众号文章封面</title>
    <link href="/2022/10/06/2022-10-6-tampermonkey/"/>
    <url>/2022/10/06/2022-10-6-tampermonkey/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/p8pnKX8_4tLKKkG4GsmERQ">效率工具指南</a>」<br>文/彭宏豪        </p><p>Hello 各位好，我是小豪。  </p><p>假期过得很快，还没做啥事情，又快溜走了。        </p><p>今天回到深圳，趁着不用做其他事情，写了一个很简单的油猴脚本：<strong>获取微信公众号文章封面</strong>。   </p><p>这个油猴脚本已提交到寻找各类油猴脚本的网站 Greasy Fork，如果你平时也有获取公众号文章封面的需求，可以在浏览器打开下方的链接安装这个脚本：  </p><p><a href="https://greasyfork.org/zh-CN/scripts/452548-%E8%8E%B7%E5%8F%96%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E5%B0%81%E9%9D%A2">https://greasyfork.org/zh-CN/scripts/452548-%E8%8E%B7%E5%8F%96%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E5%B0%81%E9%9D%A2</a></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/06/16650455889598.jpg"></p><p>写这个油猴脚本的想法💡由来已久，只是一直没有付诸行动，会觉得按照之前手动获取封面的方式来写代码很难。   </p><p>但经过下午一点时间的琢磨，还在群里请教了一些朋友，把代码写出来，却发现异常地简单，用下面一行代码，就能搞定我获取公众号文章封面的需求：      </p><pre><code class="hljs crmsh">window.open(document.querySelector(&#x27;<span class="hljs-keyword">meta</span>[<span class="hljs-keyword">property</span><span class="hljs-title"></span>=<span class="hljs-string">&quot;og:image&quot;</span>]&#x27;).content);</code></pre><h2 id="脚本使用方法"><a href="#脚本使用方法" class="headerlink" title="脚本使用方法"></a>脚本使用方法</h2><p>「获取微信公众号文章封面」油猴脚本的使用方法：  </p><p>浏览器安装了脚本之后，当你在浏览器打开任意一篇公众号文章，脚本会自动运行——打开一个新的标签页，里面就会显示公众号文章的封面，如下图所示。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/06/16650473197987.jpg"></p><p>需要说明的是，由于这个油猴脚本包含了一个自动打开新标签页的操作，首次使用时可能会被浏览器误以为是「有害的弹窗」而被拦截。  </p><p>解除拦截的方法：点击浏览器地址栏右侧带有「红色小叉号」的图标，选择「总是允许」就可以啦。    </p><h2 id="脚本代码的简要介绍"><a href="#脚本代码的简要介绍" class="headerlink" title="脚本代码的简要介绍"></a>脚本代码的简要介绍</h2><p>下面简单说一下代码的由来和含义：   </p><p>既然我们的需求是要拿到公众号文章的封面，首要的步骤就是找到文章封面的位置，或者更确切地说是<strong>封面图片的链接</strong>。     </p><p>按下 F12 打开浏览器开发者工具，分析下面的 HTML 代码，就能在属性名为 <code>og:image</code> 的 meta 标签中找到封面图片的链接，即 content 属性的值，就是封面图片的链接（图床链接）。           </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/06/16650463185503.jpg"></p><p>要拿到 content 属性的值，我们可以使用 JavaScript(DOM 操作) 和 CSS 选择器，两者搭配一下，就能拿到 meta 对象中的 content 属性的值：    </p><pre><code class="hljs crmsh">document.querySelector(&#x27;<span class="hljs-keyword">meta</span>[<span class="hljs-keyword">property</span><span class="hljs-title"></span>=<span class="hljs-string">&quot;og:image&quot;</span>]&#x27;).content;</code></pre><p>上面这行代码在浏览器中运行后，只会得到一个 https 开头的图片链接，想要看到最终的文章封面，还需要额外一步操作，在浏览器地址栏打开这个链接，因此我在前面那行代码的基础上，再添加了一个在新标签页中打开链接的指令：  </p><pre><code class="hljs crmsh">window.open(document.querySelector(&#x27;<span class="hljs-keyword">meta</span>[<span class="hljs-keyword">property</span><span class="hljs-title"></span>=<span class="hljs-string">&quot;og:image&quot;</span>]&#x27;).content);</code></pre><p>这样就得到了最终的一行代码。   </p><h2 id="将代码发布为人人可用的油猴脚本"><a href="#将代码发布为人人可用的油猴脚本" class="headerlink" title="将代码发布为人人可用的油猴脚本"></a>将代码发布为人人可用的油猴脚本</h2><p>当然，写完前面的一行代码后，实际上我只能在自己的电脑上使用，而无法很方便地分享给其他人使用，因此，一种更好的方式是，把这行代码发布为人人可安装、可用的油猴脚本。   </p><p>因此，到这里问题就变成了，<strong>如何写一个油猴脚本？</strong>   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/06/16650476850497.jpg"></p><p>关于如何写一个简单的油猴脚本，可以参考一位 Up 主「不坑老师」发布的视频教程：   </p><p>我发布的油猴脚本，也是参考这位 Up 主的教程制作出来的，这里就不复读了。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/10/06/qrcodea--a1.jpg" alt="QRcode_A — a1"></p><p>写油猴脚本用到的参考资料汇总：   </p><ul><li><a href="https://www.bilibili.com/video/BV1UU4y1r72Y">不用安编辑器，教你编写属于自己的第一个油猴脚本</a>，<a href="https://www.bilibili.com/video/BV1UU4y1r72Y">https://www.bilibili.com/video/BV1UU4y1r72Y</a>             </li><li><a href="https://zhuanlan.zhihu.com/p/485574687">【油猴脚本-菜单(设置按钮) GM_getValue/GM_setValue/GM_registerMenuCommand报错原因】设置按钮的制作和报错的坑</a>，<a href="https://zhuanlan.zhihu.com/p/485574687">https://zhuanlan.zhihu.com/p/485574687</a>   </li><li><a href="https://blog.csdn.net/apple20154350217/article/details/78639739">javascript跳转到新页面的三种方法</a>，<a href="https://blog.csdn.net/apple20154350217/article/details/78639739">https://blog.csdn.net/apple20154350217/article/details/78639739</a>   </li></ul><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">       </p>]]></content>
    
    
    
    <tags>
      
      <tag>微信公众号</tag>
      
      <tag>前端</tag>
      
      <tag>油猴脚本</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端框架 Vue3 + TypeScript 学习笔记（五）</title>
    <link href="/2022/09/25/2022-9-25-vue3learnnote5/"/>
    <url>/2022/09/25/2022-9-25-vue3learnnote5/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>注：学习笔记来自 coderwhy 老师的 Vue3 课程，由彭宏豪整理。    </p><h2 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16623019692055.jpg"></p><p>当然，即便像 JS 这么优秀的语言，也是存在一些痛点的：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16623021378882.jpg"></p><p>类型带来的问题   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16627356766046.jpg"></p><p>JS 中定义的函数，很多时候都会存在 2 个问题：  </p><ul><li>没有对传入的参数的类型进行校验    </li><li>没有对是否传入参数进行校验    </li></ul><p>JS 没有对我们传入的参数进行任何的限制，只有等到运行代码期间才发现这个错误；<br>并且当这个错误产生时，会影响后续代码的继续执行，也就是整个项目会因为一个小小的错误而陷入崩溃。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16627381978399.jpg"></p><p>类型思维的缺失  </p><p>其他大部分语言都存在类型检测的机制，唯独 JS 没有。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16627384185875.jpg"></p><h3 id="JS-添加类型约束"><a href="#JS-添加类型约束" class="headerlink" title="JS 添加类型约束"></a>JS 添加类型约束</h3><p>JS 类型检测的 2 个方案：   </p><ul><li>flow   </li><li>TypeScript   </li></ul><p>Vue2 中其实也有类型检测，不过它是用的 flow，而从 Vue3 开始，类型检测换成了 TypeScript。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16627386006089.jpg"></p><p>学习 TypeScript 不仅可以为我们的代码增加类型约束，而且可以让前端程序员逐渐培养类型思维。  </p><h3 id="认识-TypeScript"><a href="#认识-TypeScript" class="headerlink" title="认识 TypeScript"></a>认识 TypeScript</h3><p>TypeScript 是拥有类型的 JS 超集，它可以被编译成普通、干净、完整的 JS 代码。    </p><p>TS 可以简单理解成加强版的 JS。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16627390257424.jpg"></p><h3 id="TypeScript-的特点"><a href="#TypeScript-的特点" class="headerlink" title="TypeScript 的特点"></a>TypeScript 的特点</h3><ul><li>始于 JS，归于 JS    </li><li>TS 是一个强大的工具，用于构建大型项目   </li><li>拥有先进的 JS     </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16627890272629.jpg"></p><h3 id="众多项目采用-TS"><a href="#众多项目采用-TS" class="headerlink" title="众多项目采用 TS"></a>众多项目采用 TS</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16627892133027.jpg"></p><p>大前端的发展趋势     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16627896274396.jpg"></p><h3 id="TypeScript-的编译环境"><a href="#TypeScript-的编译环境" class="headerlink" title="TypeScript 的编译环境"></a>TypeScript 的编译环境</h3><p>TS 代码无法直接在浏览器或 node 环境中运行，它需要先经过编译，转换为 JS 代码，才能在浏览器或 node 环境运行。   </p><p>将 TS 编译为 JS 代码的 2 个工具：   </p><ul><li>TSC：TypeScript Compiler  </li><li>Babel：Babel 中内置了一个 <code>plugin/preset</code> 插件   </li></ul><p>全局安装 TS  </p><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> typescript -g</code></pre><p>安装 TS 后，里面就包含了 TSC，我们可以通过 <code>tsc --version</code> 来查询 TSC 的版本号。   </p><h3 id="TS-初体验"><a href="#TS-初体验" class="headerlink" title="TS 初体验"></a>TS 初体验</h3><p>创建一个 ts 后缀的文件，在其中编写简单的 TS 代码。  </p><p>完成后，在终端进入到 ts 文件所在的路径，输入 tsc + 文件名，它就会在同一路径下生成同名的 js 文件，这个文件就是 ts 编译后生成的 js 文件。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16627908831174.jpg"></p><h3 id="搭建运行-TS-的环境"><a href="#搭建运行-TS-的环境" class="headerlink" title="搭建运行 TS 的环境"></a>搭建运行 TS 的环境</h3><p>搭建 TypeScript 的运行环境，有 2 种方案：  </p><ul><li>通过 Webpack 搭建一个 ts 的环境  </li><li>通过 node 中的一个库 ts-node</li></ul><h3 id="ts-node-库"><a href="#ts-node-库" class="headerlink" title="ts-node 库"></a>ts-node 库</h3><p>全局安装 ts-node 库：  </p><pre><code class="hljs crmsh">npm install ts-<span class="hljs-keyword">node</span> <span class="hljs-title">-g</span></code></pre><p>安装好 ts-node 库之后，为了运行 ts 文件，我们还需要安装另外两个依赖：   </p><ul><li>tslib    </li><li>@types/node   </li></ul><pre><code class="hljs crmsh">npm install tslib @types/<span class="hljs-keyword">node</span> <span class="hljs-title">-g</span></code></pre><p>使用 ts-node 库，只需要在终端输入下面的命令   </p><pre><code class="hljs crmsh">ts-<span class="hljs-keyword">node</span> <span class="hljs-title">TypeScript</span>.ts</code></pre><p>ts-node 库会帮我们做两件事，首先把 ts 编译成 js 文件，再在 node 环境中运行 js 文件。   </p><h3 id="Webpack-搭建-TS-运行环境"><a href="#Webpack-搭建-TS-运行环境" class="headerlink" title="Webpack 搭建 TS 运行环境"></a>Webpack 搭建 TS 运行环境</h3><p>在终端用 cd 命令进入到文件夹 <code>02_Webpack_ts</code>，输入 <code>npm init</code> 进行初始化，一路按回车键，最后输入 yes，在当前路径下生成一个 <code>package.json</code> 文件。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16628012262662.jpg"></p><p>接着在本地安装 Webpack（开发时依赖）：    </p><pre><code class="hljs avrasm">npm install webpack webpack-<span class="hljs-keyword">cli</span> -D</code></pre><p>需要说明的是，从 Webpack 4 开始，在安装 Webpack 的同时，也要安装 Webpack-cli。   </p><p>安装 Webpack 后，文件夹中会多出 node_modules 的字文件夹，且 <code>package.json</code> 中显示 Webpack 和 Webpack-cli 的版本号。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16628016507547.jpg"></p><p>在 <code>package.json</code> 文件中增加一个 build 脚本： </p><pre><code class="hljs 1c"><span class="hljs-string">&quot;build&quot;</span>: <span class="hljs-string">&quot;webpack&quot;</span></code></pre><p>增加 build 脚本，是为了等会使用 Webpack 来对项目进行打包。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16628019232983.jpg"></p><p>我们还要在根目录下创建一个 Webpack 的配置文件 <code>webpack.config.js</code>，用来声明入口和出口文件。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16628028818613.jpg"></p><p>为了让 Webpack 能将 ts 文件编译为 js 文件，我们还需要安装一个 ts-loader：   </p><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> ts-loader typescript -D</code></pre><p>安装了 ts-loader 后，还需要在 <code>webpack.config.js</code> 中添加相应的配置：  </p><p>即指定用 ts-loader 来处理以 <code>.ts</code> 结尾的文件。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16628254127962.jpg"></p><p>配置好之后，重新运行 <code>npm run build</code>，终端还会抛出报错的信息，说我们缺少了一个名为 <code>tsconfig.json</code> 的文件。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16628255969767.jpg"></p><p>对于这个问题，我们可以在终端中输入 <code>tsc --init</code>，在根目录下生成 <code>tsconfig.json</code> 文件。  </p><p>这里还有另外一个问题，ts 文件导入模块时不让加 <code>.ts</code> 后缀名，不加后缀的话，Webpack 在进行打包的时候，找不到 <code>main.ts</code> 文件，因此我们还需要在 Webpack 配置文件中再添加 resolve 字段。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16628259965651.jpg"></p><p>完成以上配置后，在终端中运行 <code>npm run build</code>，就能看到 ts 文件被顺利编译为 js 文件了。   </p><p>当然，如果每次修改代码之后，都要手动输入 <code>npm run build</code> 进行编译，还是有点麻烦。   </p><p>针对这个问题，我们可以安装 webpack-dev-server 来构建一个本地服务，这样当我们保存代码，就会自动进行编译。   </p><pre><code class="hljs sql">npm <span class="hljs-keyword">install</span> webpack-dev-<span class="hljs-keyword">server</span> -D</code></pre><p>安装 webpack-dev-server 后，还需要去到 Webpack 配置文件添加一个 serve 脚本，添加之后，当我们运行 <code>npm run serve</code>，就能开启本地服务了。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16628269798768.jpg"></p><p>如果我们想把根目录下的 <code>index.html</code> 文件指定为模板文件，我们可以安装一个 html-webpack-plugin 的插件。  </p><pre><code class="hljs sql">npm <span class="hljs-keyword">install</span> html-webpack-<span class="hljs-keyword">plugin</span> -D</code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16628280531886.jpg"></p><p>安装插件之后，还需要在 webpack 配置文件添加相应的配置：   </p><p>导入插件，在模块导出中添加 plugins 字段，template 将根目录下的 <code>index.html</code> 指定为模板文件。    </p><p>这样即便我们没有在 <code>index.html</code> 文件通过 script 标签引入编译后的 <code>bundle.js</code> 文件，插件也会自动帮我们添加。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16628282385545.jpg"></p><p>还需要注意的是，使用 webpack-dev-server 开启本地服务后，由于 dev-server 对编译生成的 <code>bundle.js</code> 文件存在依赖，因此我们还要在 webpack 配置文件的 extensions 数组，添加 <code>.js</code> 文件后缀。   </p><p>不添加 js 文件后缀的话，在终端运行 <code>npm run serve</code> 会报错。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16628284040449.jpg"></p><h3 id="TS-变量的声明"><a href="#TS-变量的声明" class="headerlink" title="TS 变量的声明"></a>TS 变量的声明</h3><p>TS 声明变量的关键字：var、let、const    </p><p>在 tslint 中并不推荐使用 var 来声明变量。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16628643845804.jpg"></p><pre><code class="hljs ts"><span class="hljs-keyword">const</span> message: <span class="hljs-built_in">string</span> = <span class="hljs-string">&quot;phh&quot;</span><span class="hljs-keyword">const</span> name: <span class="hljs-built_in">String</span> = <span class="hljs-string">&quot;Hello TypeScript&quot;</span></code></pre><p>变量名后面加上的类型注册，首字母为小写和大写是不一样的—— </p><ul><li>string：表示 TypeScript 中的字符串类型</li><li>String：表示 JS 的字符串包装类的类型（类）  </li></ul><p>两个工具 eslint 和 tslint   </p><p>eslint：可以让 js 代码更加规范<br>tslint：可以让 ts 代码更加规范   </p><p>使用 tslint 之前，需要全局安装：  </p><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> tslint -g</code></pre><p>安装好之后，用 cd 命令进入到项目的根目录下，输入 <code>tslint --init</code>，就会在根目录下生成一个 <code>tslint.json</code> 文件。   </p><p>有了这个文件，当我们书写的 TS 代码不规范，它会给我们报对应的警告或者错误的。    </p><p>TypeScript 官方文档地址：<br><a href="https://www.typescriptlang.org/">https://www.typescriptlang.org/</a>      </p><p>TS 是 JS 的一个超级，TS 有 JS 的所有特性，而且还额外增加了一些新东西：   </p><ul><li>强类型  </li><li>Generics 泛型  </li><li>Interfaces 接口  </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16628674719115.jpg"></p><h3 id="TS-数字类型"><a href="#TS-数字类型" class="headerlink" title="TS 数字类型"></a>TS 数字类型</h3><p>ES6 开始，新增了二进制和八进制的表示方法，因此 TS 也支持二进制、八进制和十六进制的表示。  </p><p>二进制：0b 开头<br>八进制：0o 开头<br>十六进制：0x 开头        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16628684712109.jpg"></p><h3 id="TS-数组类型的使用"><a href="#TS-数组类型的使用" class="headerlink" title="TS 数组类型的使用"></a>TS 数组类型的使用</h3><p>TS 中声明数组类型时，有两种书写方式：     </p><p>Array 的首字母必须是大写。  </p><p><code>Array&lt;string&gt;</code>、<code>string[]</code> 的含义都是，数组中的元素都为字符串类型。         </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16629161594128.jpg"></p><h3 id="TS-Symbol-类型"><a href="#TS-Symbol-类型" class="headerlink" title="TS Symbol 类型"></a>TS Symbol 类型</h3><p>Symbol 翻译为符号，是 ES6 新增的一种数据类型。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16629169972892.jpg"></p><h3 id="TS-any-类型"><a href="#TS-any-类型" class="headerlink" title="TS - any 类型"></a>TS - any 类型</h3><p>TS 中使用 any 类型的场景：  </p><ul><li>当进行一些类型断言 as、any   </li><li>在不想给某些 TS 添加具体的数据类型时（这时 TS 就和原生的 JS 代码是一样的）     </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16629527175239.jpg"></p><h3 id="TS-unknown-类型"><a href="#TS-unknown-类型" class="headerlink" title="TS - unknown 类型"></a>TS - unknown 类型</h3><p>unknown 是 TS 中比较特殊的一种类型，用于描述类型不确定的变量。  </p><p>下图的例子，result 返回的值的类型是不确定的，我们可以用 any 也可以用 unknown，这时最好使用 unknown，因为 any 太灵活了。</p><ul><li>unknown 类型只能赋值给 any 和 unknown 类型   </li><li>any 类型可以赋值给任意类型     </li></ul><p>当我们把 unknow 类型的 result 赋值给 string/number 类型的 message1/message2，代码会提示错误；而如果把 result 换成 any 类型，同样的情况就不会报错。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16629544796739.jpg"></p><h3 id="TS-void-类型"><a href="#TS-void-类型" class="headerlink" title="TS - void 类型"></a>TS - void 类型</h3><p>void 通常用来指定一个函数是没有返回值的，那么它的返回值就是 void 类型。   </p><p>如果没有在函数体最后一行使用 return 语句，那么这个函数就是没有返回值的，它的返回值就是 void 类型。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16629553107092.jpg"></p><p>但如果我们添加了 return 语句，函数返回值的类型就是确定的，例如下图，它的返回值就是 number 类型。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16629567559397.jpg"></p><h3 id="TS-never-类型"><a href="#TS-never-类型" class="headerlink" title="TS - never 类型"></a>TS - never 类型</h3><p>never 表示永远不会发生值的类型。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16630250066528.jpg"></p><h3 id="TS-tuple-类型"><a href="#TS-tuple-类型" class="headerlink" title="TS - tuple 类型"></a>TS - tuple 类型</h3><p>tuple 是<strong>元组</strong>类型，很多语言中也有这种数据类型，比如 Python、Swift 等。  </p><p>元组类型的写法：一个中括号，里面指定不同的数据类型。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16629587338632.jpg"></p><p>元组与数组的区别：  </p><ul><li>数组中通常建议存放相同类型的元素，不同类型的元素是不推荐放在数组中。   </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16629661698905.jpg"></p><h3 id="函数的参数类型"><a href="#函数的参数类型" class="headerlink" title="函数的参数类型"></a>函数的参数类型</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16629664511913.jpg"></p><h3 id="函数的返回值类型"><a href="#函数的返回值类型" class="headerlink" title="函数的返回值类型"></a>函数的返回值类型</h3><p>多数情况下不需要注明返回值的类型，因为 TS 会根据 return 返回值推断函数的返回类型。  </p><p>而某些第三方库出于方便理解，会明确指定返回值类型。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16629665932528.jpg"></p><h3 id="匿名函数的参数类型"><a href="#匿名函数的参数类型" class="headerlink" title="匿名函数的参数类型"></a>匿名函数的参数类型</h3><p>传入 forEach() 的函数，即为匿名函数。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16629686383482.jpg"></p><h3 id="对象类型"><a href="#对象类型" class="headerlink" title="对象类型"></a>对象类型</h3><p>函数传入的形参是一个对象类型。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16629795059110.jpg"></p><h3 id="可选类型"><a href="#可选类型" class="headerlink" title="可选类型"></a>可选类型</h3><p>对象类型可以指定哪些属性是可选的，将属性设置为可选类型，只需要在属性后面加多一个问号 ? 。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16629795795122.jpg"></p><h3 id="联合类型"><a href="#联合类型" class="headerlink" title="联合类型"></a>联合类型</h3><h3 id="类型别名"><a href="#类型别名" class="headerlink" title="类型别名"></a>类型别名</h3><p>使用 type 定义类型别名(type alias)，简化代码的书写。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16630255278729.jpg"></p><h3 id="类型断言-as"><a href="#类型断言-as" class="headerlink" title="类型断言 as"></a>类型断言 as</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16632031962410.jpg"></p><p><code>document.getElementById</code> 得到的变量类型是 HTMLElement，类型比较宽泛。   </p><p>假设我们获取到的是一个 img 元素，想给图片的 src 属性重新赋值，会发现在 TS 中是报错的。  </p><p>这时我们可以使用类型断言，将变量的类型从 HTMLElement 缩小到更准确的 HTMLImageElement，这样就不会报错了。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16631159827212.jpg"></p><h3 id="非空类型断言"><a href="#非空类型断言" class="headerlink" title="非空类型断言"></a>非空类型断言</h3><p>在可能为空(undefined)的值后面加上一个感叹号，就是非空类型断言。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16632591067620.jpg"></p><p>下图的例子，我们在类型为字符串的 message 后面加了一个问号，将它设置为<strong>可选类型</strong>，由于只有一个参数且是可选类型，那有可能会出现没有传入参数，即传入的参数为 undefined 的情况。   </p><p>undefined 没有 length 属性，就会导致代码在编译阶段报错。   </p><p>如果我们能 100% 保证传入的参数为非空，那么可以在变量 message 的末尾加上一个感叹号，转换为非空类型断言，这样就能<strong>跳过 TS 在编译阶段对它的检测</strong>。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16632591456700.jpg"></p><h3 id="可选链的使用"><a href="#可选链的使用" class="headerlink" title="可选链的使用"></a>可选链的使用</h3><p>下图的例子，我们定义了一个类型 Person，其中的 friend 对象为可选类型，可能有值，也可能为 undefined。   </p><p>对于这种情况，一种解决方法是，在调用 friend 对象的属性之前，先用 if 判断。  </p><p>但使用 if 判断也存在一个问题，如果 friend 对象中嵌套了另外一个可选类型，想继续调用嵌套元素的属性时，就需要再次进行判断，非常麻烦。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16636077712120.jpg"></p><p>一个更好的方法是，使用 ES11（ES2020）新增的<strong>可选链</strong>。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16636084279825.jpg"></p><p>可选链使用可选链操作符 <code>?.</code>   </p><p>如下图，info 对象嵌套的 friend 对象是可选类型，那我们在调用 friend 对象的属性时，可以在 friend 对象后面加一个可选链操作符 <code>?.</code>。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16636085286444.jpg"></p><h3 id="和-的作用"><a href="#和-的作用" class="headerlink" title="?? 和 !! 的作用"></a>?? 和 !! 的作用</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16636086855856.jpg"></p><p>?? 操作符，是 ES11 增加的新特性，被称作<strong>空值合并操作符</strong>。  </p><p>空值合并操作符，其实等价于 JS 中的<strong>三目运算符</strong>，只是空值合并操作符看起来更简洁。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16636102459037.jpg"></p><h3 id="字面量类型"><a href="#字面量类型" class="headerlink" title="字面量类型"></a>字面量类型</h3><p>普通的文本或数字类型，也是可以作为类型的，叫做字面量类型。     </p><p>字面量类型，需要与联合类型结合使用。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16636943991878.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16636945844767.jpg"></p><h3 id="字面量推理"><a href="#字面量推理" class="headerlink" title="字面量推理"></a>字面量推理</h3><p>定义的 request 函数，第二个参数为<strong>字面量</strong>类型，但传入的 <code>options.method</code> 参数是<strong>字符串</strong>类型，与定义函数时声明的类型不同，且字符串存在被修改的可能，因此在编译阶段会报错。  </p><p>解决方法：  </p><ul><li>使用类型断言：在 <code>options.method</code> 后面添加 <code>as Method</code>，指明它是一个字面量类型       </li><li>使用字面量推理：在 options 对象的末尾添加 <code>as const</code>      </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16637201983986.jpg"></p><p>在对象 options 末尾添加 <code>as const</code>，此时再将鼠标移动到 options 对象上方，会显示 method 为只读，且为字面量类型中的 “POST”。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16637206672306.jpg"></p><h3 id="类型缩小"><a href="#类型缩小" class="headerlink" title="类型缩小"></a>类型缩小</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16637217562252.jpg"></p><p>instanceof 的例子   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16638057159407.jpg"></p><h3 id="TypeScript-函数类型"><a href="#TypeScript-函数类型" class="headerlink" title="TypeScript 函数类型"></a>TypeScript 函数类型</h3><p>在 JS 开发中，函数是重要的组成部分，并且函数可以作为<strong>一等公民</strong>（可以作为参数，也可以作为返回值进行传递）。     </p><p>函数类型的表达式： <code>() =&gt; void</code></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16638624614641.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16638628388529.jpg"></p><p>如果函数的返回值有明确的类型，可以将 void 更改为对应的类型，例如下图的 number。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16638626534725.jpg"></p><h3 id="函数参数的可选类型"><a href="#函数参数的可选类型" class="headerlink" title="函数参数的可选类型"></a>函数参数的可选类型</h3><p>当传入函数的两个或多个参数中，包含有可选类型时，<strong>可选类型必须写在必选类型的后面</strong>。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16638631442758.jpg"></p><h3 id="函数参数的默认值"><a href="#函数参数的默认值" class="headerlink" title="函数参数的默认值"></a>函数参数的默认值</h3><p>如果函数传入两个参数，第二个参数有默认值，那么在调用的时候，第二个参数可以不写；但如果第一个参数有默认值，那么在调用函数时，第一个参数得写默认值，或者写 undefined。   </p><p>函数传入多个参数时的书写顺序：  </p><p>先写<strong>必传参数</strong>，再写<strong>有默认值的参数</strong>，最后写<strong>可选参数</strong>。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16638663396891.jpg"></p><h3 id="函数的剩余参数"><a href="#函数的剩余参数" class="headerlink" title="函数的剩余参数"></a>函数的剩余参数</h3><h3 id="函数的重载"><a href="#函数的重载" class="headerlink" title="函数的重载"></a>函数的重载</h3><p>函数的重载：函数的名称相同，但是参数不同的几个函数，就是函数的重载。   </p><p>先在前面定义多个重载函数，不需要写函数体，<br>后面再写具体的实现。     </p><p>下面的例子中，两个重载函数传入的参数类型是不同的，一个是 number 类型，一个是 string 类型。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16638934889503.jpg"></p><p>函数的重载使用场景：用联合类型实现起来比较麻烦的时候，才考虑使用函数的重载。(优先级：联合类型 &gt; 函数的重载)     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/25/16640672138523.jpg"></p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>Vue</tag>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>录屏软件OBS使用技巧：圆形人像和应用LUT</title>
    <link href="/2022/09/24/2022-9-24-obs/"/>
    <url>/2022/09/24/2022-9-24-obs/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「效率工具指南」<br>文/彭宏豪        </p><p>Hello 各位好，我是小豪。  </p><p>之前写过不少关于 OBS 使用技巧的文章，很长一段时间我都没有去更新这个软件，直到最近要用到 OBS 的一个新功能，我才把 Mac 电脑安装的软件更新到了最新版。   </p><p>最新版 OBS 最大的变化在于，它对软件的 UI 界面进行了重新设计，给每个按钮加上圆角矩形作为背景，让不同的按钮之间的区分更明显，看起来也更加现代。  </p><p>下面我放了 OBS 更新后和更新前的对比图，供参考：     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/24/16639467458226.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/24/snipaste20220716172458.png" alt="Snipaste_2022-07-16_17-24-58"></p><p>简单说完 OBS 的更新，再来给各位分享 2 个好用的 OBS 使用技巧：  </p><ul><li>为摄像头添加圆形遮罩   </li><li>给摄像头捕获的人脸添加 LUT 滤镜  </li></ul><h2 id="为摄像头添加圆形遮罩"><a href="#为摄像头添加圆形遮罩" class="headerlink" title="为摄像头添加圆形遮罩"></a>为摄像头添加圆形遮罩</h2><p>在 OBS 「来源」中添加的「视频采集设备」，即电脑自带或外接的摄像头，捕获的图像尺寸一般为矩形，如下图所示。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/24/16639488953200.jpg"></p><p>但如果你觉得矩形画面显示的无关信息太多，想让摄像头捕获的画面更聚焦，譬如显示为下面的<strong>圆形头像</strong>，那该怎么办呢？    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/24/16639818083942.jpg"></p><p>不像之前介绍过的录屏软件「芦笋」，OBS 本身没有提供一键切换 矩形/圆形 画面的选项，但我们还是可以通过 OBS 内置的功能实现。   </p><p>首先我们要先准备一张图片，这图片也非常简单，可以在 PS 中制作。 </p><p>创建一个 1920*1080 的画布，隐藏画布默认的白色背景，然后使用 PS 的形状工具绘制一个大大的圆形，无描边、填充色为黑色，并且将圆形水平、垂直居中对齐，最后将图片保存为 <strong>PNG</strong> 格式的图片。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/24/16639822948731.jpg"></p><p>制作好需要的图片后，回到 OBS 中，点击「来源」左下角的加号 + ，选择「视频采集设备」，在弹出的窗口选择电脑的摄像头。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/24/16639825652898.jpg"></p><p>右击「来源」中刚添加的视频采集设备图层，选择「滤镜」。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/24/16639827155241.jpg"></p><p>来到滤镜面板，点击左下角的加号 + ，选择「图像掩码/混合」。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/24/16639828298768.jpg"></p><p>添加图像掩码/混合滤镜后，来看滤镜右侧的选项，这里要配置 2 个选项：   </p><ul><li>类型：更改为 Alpha 蒙版（Alpha 通道）   </li><li>路径：打开我们刚在 PS 中导出的 PNG 圆形图片  </li></ul><p>这样配置之后，就能在上方的窗口实时看到，原本矩形的画面变成了圆形。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/24/16639830955803.jpg"></p><p>关闭滤镜设置面板，回到最外面，在选中视频采集设备图层的情况下，拖拽移动图层任意一个顶点(锚点)，可以自由缩放圆形头像的大小。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/24/16639834284424.jpg"></p><h2 id="给摄像头捕获的人脸添加-LUT-滤镜"><a href="#给摄像头捕获的人脸添加-LUT-滤镜" class="headerlink" title="给摄像头捕获的人脸添加 LUT 滤镜"></a>给摄像头捕获的人脸添加 LUT 滤镜</h2><p>说完添加圆形头像的小技巧，再来分享另外一个让自己出镜直播或录屏时<strong>显得更好看</strong>的小技巧：   </p><p>先上对比图，上面的圆形人像是用了滤镜后的效果，下面的是电脑摄像头默认捕获的画面，看起来差别还是非常大吧。  </p><p>即便是大白天，在光线不足的情况下，电脑摄像头捕获的画面还是不忍直视。。。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/24/16639837826827.jpg"></p><p>要想改善摄像头的画面效果，还是要打开视频采集设备图层的滤镜面板，点击左下角的加号 + ，添加「<strong>应用 LUT</strong>」。      </p><p>这里的 LUT 是 Look Up Table 的缩写，直译就是「检查表」的意思，我们可以简单粗暴地把它理解为<strong>滤镜</strong>，既可以用在静态图片，也可以用在动态的视频上，尤其在<strong>视频剪辑</strong>中会经常用到。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/24/16639840558552.jpg"></p><p>在 OBS 中应用 LUT 也非常简单，只需要先从网上下载一些 LUT 文件，格式为 <code>.cube</code>，接着点击下方路径选项右侧的「浏览」，在 OBS 载入 LUT 文件即可。   </p><p>下方的「数值」选项，可以调整 LUT 的强度，默认为 1，如果觉得 LUT 的效果太「过」、以至于显得不真实，可以适当降低数值的大小，且当数值为 0，就相当于没有添加 LUT。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/24/16639843534329.jpg"></p><p>这里就不分享上面截图中用到的 LUT 文件了，有需要的朋友可以自行上网搜索。   </p><p>我发布过的 OBS 相关的内容汇总：   </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649920330&idx=1&sn=93cc2f2d4c5245865660964b1f23d942&chksm=83a89767b4df1e7175c51e59373bd3437bc8acc4b4184b81d722d50653be651a40daee01fd82&token=1104299376&lang=zh_CN#rd">吃灰已久的相机，怎么用于视频号直播？</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649918046&idx=1&sn=5fc889d26f542905b91ddd1c782c576f&chksm=83a88e73b4df076511a197ce56f366cbac987883e28b08861619e14e8b5a65b40bf098848b87&token=1104299376&lang=zh_CN#rd">边录屏边看音乐歌词，录屏软件 OBS 的这个用法真的绝了</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649915554&idx=1&sn=864b3751281293c2b5d4cd1fa59ef755&chksm=83a8848fb4df0d99372d123ca33cdaca5ee95504acea3f2eff1d627e4135c16d1b75d3f946d5&token=1104299376&lang=zh_CN#rd">比收费软件还良心的免费软件，长啥样？| 录屏软件 OBS</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649913716&idx=1&sn=2074dd198a54a9bcbd4c2a844ea449a3&chksm=83a87d59b4dff44f6ba61b13087a66ff63833e78a03178d3c85acb0144368f35c5aeb2e99a47&token=1104299376&lang=zh_CN#rd">如何在 B 站搞一场直播？选这款开源免费软件就对了。</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649919681&idx=1&sn=7dda7f6817c4c77cc7471272e95f694a&chksm=83a894ecb4df1dfa7887352136043e3ff3e134ca249166ef64e05c574e96df57abdcd5d630c7&token=1104299376&lang=zh_CN#rd">视频：微信视频号竖屏直播保姆级教程【OBS推流】</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649888469&idx=1&sn=db7f20766ca05092900269e81b658d2b&chksm=83a812f8b4df9beed0326b1f1dccb570f55979fce6f51107c62fa6a89a6976ffcd8138afaa64&token=1104299376&lang=zh_CN#rd">视频：电脑录屏还能真人出镜，这个开源免费的软件值得推荐 | OBS</a>    </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">             </p>]]></content>
    
    
    
    <tags>
      
      <tag>Notion</tag>
      
      <tag>音乐</tag>
      
      <tag>Spotify</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在笔记软件Notion中嵌入Spotify音乐歌单</title>
    <link href="/2022/09/10/2022-9-10-notion_music/"/>
    <url>/2022/09/10/2022-9-10-notion_music/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/l7FGDl_cBnGvg4hd47iIfw">效率工具指南</a>」<br>文/彭宏豪      </p><p>Hello 各位好，我是小豪。     </p><p>今天双节狂喜（中秋节 + 教师节），先祝各位节日快乐。   </p><p>今天这篇文章，分享一点比较轻松的东西：如何在笔记软件 Notion 中嵌入音乐歌单？  </p><p>下图右侧是我在 Notion 中嵌入的一个 Spotify 歌单，里面包含 100 首音乐，随机点击一首音乐，就可以直接在 Notion 中播放。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/10/16627816341703.jpg"></p><p>不过可能是 Spotify 接口的限制，在 Notion 中播放 Spotify 歌单的音乐，每首歌只有 30 秒，当然不是从头开始播放，而应该是播放副歌的部分。  </p><p>每首歌只有 30 秒，好像是用抖音的方式来听音乐啊。。。  </p><p>说回正事哈，如果你也想在 Notion 中嵌入自己喜欢的歌单，那就接着往下看吧：   </p><p>首先需要说明的是，<strong>Notion 目前只能嵌入来自 Spotify 或者 Apple Music 的歌单</strong>，而国内的音乐应用太封闭了。。。例如网易云音乐，嵌入后只会显示为普通的链接，想要查看歌单内的音乐，还要跳回网易云自家的网页。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/10/16627827991084.jpg"></p><p>更离谱的是，网易云音乐网页版虽然提供了「生成外链播放器」的按钮，但点击之后会提示：  </p><blockquote><p>由于版权保护，无法生成外链。  </p></blockquote><p>这个按钮搁这里当装饰呢？你还不如直接去掉，至少不会被我吐槽。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/10/16627829995168.jpg"></p><p>在 Notion 中嵌入音乐歌单，其实用到了 Notion 的 embed 功能，在 Embed link 粘贴音乐 App 提供的前端代码即可。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/10/16627833190202.jpg"></p><p>以 Spotify 为例，打开任意一个歌单，点击歌单内的「…」，在展开的菜单，选择「分享 &gt;&gt; 嵌入播放清单」。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/10/16627834939335.jpg"></p><p>在弹出的面板，勾选右下角的「显示代码」，下方就会显示歌单的前端代码，点击「复制」，切换回 Notion，将代码粘贴到 Embed link 的输入框中，就能在 Notion 中嵌入音乐歌单啦，整个操作过程就是这么简单。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/10/16627835910245.jpg"></p><p>不过，在 Notion 中嵌入的 Spotify 歌单还有一个小毛病，当你开始播放音乐，它时不时就会弹出下图的提示，让你去到 Spotify 官网收听完整的音乐。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/10/16627837341240.jpg"></p><p>这里只介绍了在 Notion 中添加 Spotify 歌单的方法，对于 Apple Music，也是类似的操作，由于我没开通 Apple Music 的会员，这里就不演示了。   </p><p>前面说到无法在 Notion 中嵌入国内音乐 App 的歌单，但如果你想折腾，还是有办法的：  </p><p>可以将 QQ 音乐/网易云音乐的歌单迁移到 Spotify 或者 Apple Music。  </p><p>具体的迁移方法，可以查看我发布过的一篇旧文章：  </p><p><a href="https://mp.weixin.qq.com/s/NPV_XnulogNTUpNkopnWqw">放弃使用网易云音乐，如何导出歌单数据？</a>     </p><p>这里再对文章做一下修改，或者说是补充一个新方法：  </p><p>旧文章中提到的「歌单助手」，在使用前需要先进行安装，如果你嫌麻烦，或是不想在电脑上多安装一个软件，可以使用在线的导出工具 n2s。   </p><p>n2s 网址：<br><a href="https://yyrcd.com/n2s/">https://yyrcd.com/n2s/</a>      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/10/16627846803254.jpg"></p><p>将 QQ 音乐/网易云音乐歌单的 id 粘贴到 n2s，也能返回歌单中的歌词名和歌手名。   </p><p>之后使用另外一个在线工具 TunemyMusic，就能将导出的歌单导入 Spotify 或者 Apple Music 了。  </p><p>当然，由于不同音乐 App 的曲库存在着差异，从 QQ 音乐/网易云音乐歌单导入 Spotify/Apple Music，也会遇到歌曲丢失或者匹配错误的情况，这也是程序自动化操作无法避免的。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/10/16627848628403.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">           </p>]]></content>
    
    
    
    <tags>
      
      <tag>Notion</tag>
      
      <tag>音乐</tag>
      
      <tag>Spotify</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Spotify美化！我的Spotify竟然和Apple Music长得那么像？</title>
    <link href="/2022/09/09/2022-9-9-spotify/"/>
    <url>/2022/09/09/2022-9-9-spotify/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=386844&auto=1&height=66"></iframe></div>            <p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/eh9HRbz7mh8iaPB4n3_tdw">效率工具指南</a>」<br>文/彭宏豪        </p><p>Hello 各位晚上好，我是小豪。   </p><p>今天来写点比较轻松的东西，接着上回发布的一篇文章《<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649920587&idx=1&sn=586266c1aad64d898dc11b0095ace697&chksm=83a89066b4df19701a16aa282991a1bad6022c409f12c6f472ec8f6d905cf61870e442b1a556&token=707859341&lang=zh_CN#rd">音乐播放器Spotify太丑？给它换个皮肤，立马大变样</a>》，继续来说一下音乐应用 Spotify 美化的事情。   </p><p>上一篇文章，已经把 Spotify 绿色的主色调更改为下图的样式，且歌词增加了滚动效果——会随着音乐的播放，自动高亮显示对应的歌词。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/09/16612972465257.jpg"></p><p>而前两天，多亏一位网友的分享，对 Spotify 的美化又进了一步，目前的效果如下：     </p><p>在小窗的情况下全屏显示当前正在播放的歌，左侧显示专辑封面，右侧显示歌词，这种左右布局的方式，相信用过 Apple Music 的朋友并不陌生。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/09/16626540054980.jpg"></p><p>鼠标右击界面，会弹出下图的面板，可启用/关闭多个选项：   </p><ul><li>歌词增强插件   </li><li>进度条   </li><li>控制按钮    </li><li>专辑名称  </li><li>艺术家名称  </li><li>图标   </li><li>垂直模式   </li><li>全屏显示（充满整个屏幕）    </li><li>歌词切换动画      </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/09/16626550861876.jpg"></p><p>下图是切换到「垂直模式」的效果，主要是左侧的布局变了，专辑的封面和歌词名称、进度条从水平布局变成垂直布局，看起来效果也非常棒。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/09/16626554180711.jpg"></p><p>此外，点击界面右下角的按钮，还可以调整歌词的字号大小、歌词滚动的延迟时间，切换显示部分歌词/全部歌词(Compact)。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/09/16626549378725.jpg"></p><p>看完了 Spotify 二次美化后的效果，如果你也想让自己的 Spotify 变成这样，可以先跟着<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649920587&idx=1&sn=586266c1aad64d898dc11b0095ace697&chksm=83a89066b4df19701a16aa282991a1bad6022c409f12c6f472ec8f6d905cf61870e442b1a556&token=707859341&lang=zh_CN#rd">前一篇文章的方法</a>，在电脑上安装好 Spicetify 这个美化工具。   </p><p>安装好之后，打开终端，依次粘贴下面的 4 条命令，安装全屏播放和歌词增强的插件。   </p><pre><code class="hljs routeros">spicetify<span class="hljs-built_in"> config </span>extensions fullAppDisplay.js     spicetify apply        spicetify<span class="hljs-built_in"> config </span>custom_apps lyrics-plus   spicetify apply</code></pre><p>搞定之后，重启 Spotify，点击 Spotify 中类似下面的小图标，就能进入全屏播放的界面啦。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/09/16626559017317.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">           </p>]]></content>
    
    
    
    <tags>
      
      <tag>音乐</tag>
      
      <tag>Spotify</tag>
      
      <tag>主题美化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端框架 Vue3 学习笔记（四）</title>
    <link href="/2022/09/04/2022-9-4-vue3learnnote4/"/>
    <url>/2022/09/04/2022-9-4-vue3learnnote4/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>注：学习笔记来自 coderwhy 老师的 Vue3 课程。    </p><h2 id="VueRouter-路由使用"><a href="#VueRouter-路由使用" class="headerlink" title="VueRouter 路由使用"></a>VueRouter 路由使用</h2><h3 id="认识前端路由"><a href="#认识前端路由" class="headerlink" title="认识前端路由"></a>认识前端路由</h3><p>路由器主要维护的是一个<strong>映射表</strong>：ip 地址和真实电脑的 mac 地址间的映射。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16601512331215.jpg"></p><p>后端路由阶段（后端渲染）   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16601515472630.jpg"></p><p>前后端分离阶段（前端渲染）</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16601523401862.jpg"></p><p>SPA开发阶段</p><p>SPA：是 Single Page Application 的缩写，单页面应用。  </p><p>当我们改变 URL 路径的时候，不要向静态服务器发起请求（页面不要发生刷新），该怎么实现呢？ </p><p>有两种方法：  </p><ul><li>改变 URL 的哈希值  </li><li>HTML5 的 History 模式  </li></ul><p>这两种方法本质上是一样的：<strong>根据不同的路径，前端渲染不同的内容</strong>（映射）。            </p><h3 id="URL-的哈希值"><a href="#URL-的哈希值" class="headerlink" title="URL 的哈希值"></a>URL 的哈希值</h3><p>路由的原理，其实就是监听 URL 的哈希值，当哈希值变化的时候，改变页面中的组件，实现页面内容的变化。</p><p>哈希的优势就是兼容性更好，在老版 IE 中也可以运行，但是缺陷是 URL 有一个井号 #，显得不像一个真实的路径。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16603558153951.jpg"></p><p>下图是 URL 哈希值变化的一个 demo，通过监听哈希值的变化，修改 div 容器中的内容。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16603548692169.jpg"></p><h3 id="HTML5-的-History"><a href="#HTML5-的-History" class="headerlink" title="HTML5 的 History"></a>HTML5 的 History</h3><p>History 是 HTML5 新增的对象（接口）。这个接口有 6 种模式改变 URL 而不刷新页面：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16603650369565.jpg"></p><p>当路径改变的时候，不会向服务器发起请求，而是由前端决定我们要渲染什么样的内容。  </p><p>history 的 pushState 是压栈操作，当我们点击超链接时，打开的内容会堆叠在前一个内容上方，当点击浏览器左上角的「后退」按钮，回退到前一个页面，当前的内容就会弹出栈。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16603651142023.jpg"></p><h3 id="认识-Vue-路由"><a href="#认识-Vue-路由" class="headerlink" title="认识 Vue 路由"></a>认识 Vue 路由</h3><p>Vue Router 是路径和组件之间的映射关系。  </p><p>在 Vue Router 的单页面应用中，页面的路径的改变就是组件的切换。  </p><p>使用 Vue Router 之前，需要先安装路由：   </p><pre><code class="hljs angelscript">npm install vue-<span class="hljs-symbol">router@</span><span class="hljs-number">4</span></code></pre><h3 id="路由的基本使用流程"><a href="#路由的基本使用流程" class="headerlink" title="路由的基本使用流程"></a>路由的基本使用流程</h3><p>创建一个 router 文件夹，存放路由的配置文件 <code>index.js</code>：   </p><p>声明一个数组 routes，每一个元素是一个对象，用于<strong>配置路径和组件之间的映射关系</strong>。     </p><p>接着使用 createRouter() 创建一个路由对象 router，将数组传入函数，同时 history 字段指定我们要用哪种模式的路由——hash 还是 history。  </p><p>最后导出路由对象。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16604397790321.jpg"></p><p>在项目的入口文件 <code>main.js</code> 中，导入路由对象，调用 app 的 use() 方法安装 router 对象，类似于之前使用插件一样。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16604400548426.jpg"></p><p>在 <code>App.vue</code> 使用时，使用 <code>router-view</code> 进行占位。  </p><p><code>router-view</code> 和 <code>router-link</code> 是 Vue 内置的组件，无需注册就能直接使用。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16604402847974.jpg"></p><h3 id="路由的默认路径"><a href="#路由的默认路径" class="headerlink" title="路由的默认路径"></a>路由的默认路径</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16604686696052.jpg"></p><p>当我们直接打开 <code>localhost:8081</code> 时，控制台会有一个警告，提示路径 <code>/</code> 无法匹配。     </p><p>对于这个问题，我们需要在路由配置中，给路径 <code>/</code> 配置一个重定向，重定向到路径 <code>/home</code> 所在的主页。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16604407290804.jpg"></p><p>在数组 routes 给路径 <code>/</code> 添加重定向之后，当我们在浏览器打开 <code>localhost:8081</code>，它就会自动重定向到 Home 组件所在的页面 <code>localhost:8081/#/home</code>。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16604418469923.jpg"></p><h3 id="router-link"><a href="#router-link" class="headerlink" title="router-link"></a>router-link</h3><p>router-link 是 Vue 内置的组件，经过浏览器渲染最终会变成 a 标签。   </p><p>这个组件可以配置多个属性：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16604907719588.jpg"></p><p>active-class 属性的默认值为 router-link-active，如果你觉得这个类名太长，可以给 router-link 添加 active-class 属性，用来自定义激活 a 元素后的类名。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16604910070625.jpg"></p><h3 id="路由懒加载"><a href="#路由懒加载" class="headerlink" title="路由懒加载"></a>路由懒加载</h3><p>如果一个页面添加了很多个路由（组件），在构建（打包）的时候，默认会将所有组件都打包到 <code>app.js</code> 中，打包的文件太大，不利于网页的首次加载。   </p><p>我们可以参考以前在处理大组件的「异步组件」的操作，对路由进行<strong>分包</strong>的操作，将暂时不需要用到的组件单独打包，在需要用到、或者浏览器闲置的时候，再从网上下载下来。  </p><p>那想要实现路由懒加载，该如何修改之前写好的代码呢？   </p><p>来到路由文件夹 router 下的 <code>index.js</code> 文件中，注释通过 import…from 导入组件的方式，修改映射关系中的配置：  </p><p>将组件更改为通过 import() 函数导入，下面是箭头函数的写法。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16605203942418.jpg"></p><p>更改代码之后，重新运行 <code>npm run build</code> 进行打包，dist &gt; js 文件夹就会多出 4 个 js 文件，这 4 个文件就分别对应分包的 Home 和 About 组件。  </p><p>如果我们想知道，分包的 js 文件具体对应哪一个组件，我们可以使用 Webpack 的<strong>魔法注释</strong>（magic comments）：    </p><p>在 import() 函数传入的参数，最前面加多一个 webpackChunkName 的注释。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16605209249996.jpg"></p><h3 id="路由的其他属性"><a href="#路由的其他属性" class="headerlink" title="路由的其他属性"></a>路由的其他属性</h3><p>在路由的 <code>index.js</code> 文件配置映射关系时，我们可以给 routes 数组中的 route 对象添加 2 个其他的属性：   </p><ul><li>name：给 route 对象起一个名字  </li><li>meta：元数据，给 route 对象添加额外的信息    </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16605756221257.jpg"></p><h3 id="动态路由基本匹配"><a href="#动态路由基本匹配" class="headerlink" title="动态路由基本匹配"></a>动态路由基本匹配</h3><p>路由的路径不是写死的，给路径一个<strong>占位的默认值</strong>，就像下图的 <code>/:username</code> 就是占位的默认值，在使用时通过 router-link 的 to 属性传入一个具体的值。  </p><p>之后在对应的组件里面，通过 $route 获取到。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16605789454841.jpg"></p><p>给占位的默认值传入一个具体的值 phh。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16605791970654.jpg"></p><h3 id="获取动态路由的值"><a href="#获取动态路由的值" class="headerlink" title="获取动态路由的值"></a>获取动态路由的值</h3><p>如果我们想拿到路径中包含的具体值，可以通过 $route 对象。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16605802341899.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16605793853940.jpg"></p><p>如果想在 setup() 中拿到具体的值，需要用到 Vue-router 提供的一个 hook——useRoute。   </p><p> <img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16605800588180.jpg"></p><h3 id="动态路由匹配多个参数"><a href="#动态路由匹配多个参数" class="headerlink" title="动态路由匹配多个参数"></a>动态路由匹配多个参数</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16605803017751.jpg"></p><h3 id="Not-Found"><a href="#Not-Found" class="headerlink" title="Not Found"></a>Not Found</h3><p>当用户输入的路径与我们在 router 文件夹下的 <code>index.js</code> 文件中的配置不一致时，为了给用户提供更好的体验，我们最好再添加一个 Not Found 的组件，当输入的路径与配置的路径不一致时，就显示 Not Found 组件。   </p><p>在配置 path 字段时，用到路径匹配 <code>pathMatch(.*)</code>，写法是固定的。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16606620193775.jpg"></p><p>匹配规则末尾加星号 * ，会将路径解析为元素为字符串的数组。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16606658842976.jpg"></p><h3 id="路由的嵌套"><a href="#路由的嵌套" class="headerlink" title="路由的嵌套"></a>路由的嵌套</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16606963778526.jpg"></p><p>Home 组件中嵌套另外两个子组件 HomeMessage 和 HomeGood 组件。  </p><p>在配置 routes 映射关系时，需要在 home 路由下增加一个 <strong>children 字段</strong>，children 字段是一个数组，数组中的每一个元素是一个对象。   </p><p>需要注意的是，在 children 中配置路径时，前面不需要加多一个斜杠 / ，只需要写路径的名称就好，像下图右侧的 message 和 good。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16606665391551.jpg"></p><h2 id="编程式导航"><a href="#编程式导航" class="headerlink" title="编程式导航"></a>编程式导航</h2><p>如果我们不使用 Vue 路由封装好的 router-link 组件，还可以实现在不同页面间的跳转吗？  </p><p>——可以的，这时就需要用到<strong>编程式导航</strong>。  </p><p>下面的例子，给 button 绑定一个点击事件 jumpToAbout，即点击按钮之后，会跳转到「关于」页面。   </p><p>在 script 标签中添加 methods 字段，书写一个函数 jumpToAbout() ，实现点击跳转。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16607493842567.jpg"></p><p>如果我们在 Composition API 中书写绑定的点击事件，因为 setup() 没有绑定 this，因此我们要先从 Vue 路由中导入 useRouter。  </p><p>声明得到一个 router 对象后，再在点击事件中调用 router 对象的 push 方法。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16607584275659.jpg"></p><p>在不同的 router-link 进行页面的跳转，其实执行的是 pushState 的操作，即压栈，新页面会「压」在旧页面上方。   </p><h3 id="router-link-的-v-slot"><a href="#router-link-的-v-slot" class="headerlink" title="router-link 的 v-slot"></a>router-link 的 v-slot</h3><p>之前我们使用 Vue 路由内置的 router-link 组件时，默认都是在组件中添加文本，但其实 router-link 组件支持使用插槽。   </p><p>作用域插槽 v-slot，可以将 router-link 组件的数据传入组件内部的插槽中。   </p><p>v-slot 传入的 props 对象，包含了多个属性：  </p><ul><li>href：跳转的链接       </li><li>route 对象   </li><li>navigate：导航函数，可作为 click 绑定的点击事件      </li><li>isActive：是否当前处于活跃的状态       </li><li>isExactActive：是否当前处于精确的活跃状态      </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16609247264264.jpg"></p><p>router-link 可以按照插槽的方式，来自定义组件内部显示的是一个元素，还是一个组件，或者是显示来自 v-slot 传入的 props 对象的诸多元素。   </p><p>从 Vue-router 4 开始，它对 router-link 做了这么一个扩展，有了 v-slot 这个扩展，也让它变得更加灵活。       </p><h3 id="router-view-的-v-slot"><a href="#router-view-的-v-slot" class="headerlink" title="router-view 的 v-slot"></a>router-view 的 v-slot</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16609680497636.jpg"></p><p>router-view 组件是一个占位符，会显示我们传入的各种组件。  </p><p>如果想实现，当我们点击按钮切换到不同的组件时，router-view 显示的组件会带有过渡动画，该怎么做呢？    </p><p>——这里还是要用到作用域插槽。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16609648260908.jpg"></p><p>router-view 默认情况下时拿不到占位符中显示的组件，为了给其中显示的组件添加动画，就需要用到作用域插槽。   </p><p>在 router-view 中添加 v-slot 属性，传入 props 对象，使用 <code>props.Component</code> 就能拿到占位符中显示的组件。       </p><p>在其中使用动态组件 component，组件的 is 属性绑定 <code>props.Component</code>，最后再将动态组件放入 transition 组件，添加 CSS 样式，这样当我们点击按钮切换组件时，就会带有过渡动画。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16609654425721.jpg"></p><p>代码的另外一种写法，在传入 v-slot 直接对 props 进行解构，解构拿到 Component 属性。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16609719246789.jpg"></p><h3 id="动态添加路由"><a href="#动态添加路由" class="headerlink" title="动态添加路由"></a>动态添加路由</h3><p>在之前的练习代码中，我们都是在 <code>index.js</code> 中提前配置好了所有的路由，即最开始注册的路由都是写死的。  </p><pre><code class="hljs stata"><span class="hljs-keyword">const</span> routes = [&#123;&#125;,&#123;&#125;,&#123;path:<span class="hljs-string">&quot;/order&quot;</span>&#125;]<span class="hljs-keyword">const</span> router = createRouter(&#123;routes&#125;)<span class="hljs-keyword">app</span>.<span class="hljs-keyword">use</span>(router);</code></pre><p>但在一些后台管理系统的开发中，因为<strong>人员权限</strong>的不同，不同人可访问的路由应该是不同的，而不是每个人都可以访问相同的路由，为了实现这一点，就需要用到动态添加路由：  </p><p>根据人员权限的不同，服务器返回不同的路由，每个人在后台管理系统左侧导航栏看到的选项也就是不同的。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16609725986052.jpg"></p><p>动态添加路由：一开始注册路由时，routes 数组为空数组，之后在<strong>路由导航守卫</strong>中进行判断，根据菜单或人员的角色，注册对应的路由。   </p><pre><code class="hljs reasonml">const routes = <span class="hljs-literal">[]</span>const router = create<span class="hljs-constructor">Router(&#123;<span class="hljs-params">routes</span>&#125;)</span><span class="hljs-keyword">if</span>(角色为管理员) &#123;    router.add<span class="hljs-constructor">Route(&#123;<span class="hljs-params">path</span>: <span class="hljs-string">&quot;/order&quot;</span>, <span class="hljs-params">component</span>: ()</span> =&gt; import<span class="hljs-literal">()</span>&#125;)    &#125;<span class="hljs-keyword">if</span>(角色为运营) &#123;    router.add<span class="hljs-constructor">Route(&#123;&#125;)</span>&#125;app.use(router);</code></pre><p>动态添加路由</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16609796122148.jpg"></p><p>将原本放在 routes 数组中的对象单独拿出来，调用 router 对象的 addRoute 方法传入。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16609796833987.jpg"></p><h3 id="动态删除路由"><a href="#动态删除路由" class="headerlink" title="动态删除路由"></a>动态删除路由</h3><p>动态删除路由有 3 种方式：  </p><ul><li>添加一个 name 相同的路由（更确切地说是替换，而不是删除）    </li><li>通过 removeRoute 方法，传入路由的名称 name  </li><li>通过调用 addRoute 返回的函数   </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16609799046523.jpg"></p><h3 id="路由导航守卫"><a href="#路由导航守卫" class="headerlink" title="路由导航守卫"></a>路由导航守卫</h3><p>路由导航守卫：在页面跳转时，增加一些判断条件，例如检查当前用户是否登录，如果是未登录的状态，可以让用户先跳转到登录页，登录完再跳到目标页面。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16610113922402.jpg"></p><p>在 router 文件夹下的 <code>index.js</code>，使用 router 对象的 beforeEach 方法（前置守卫），传入一个函数，这个函数需要传入两个参数 to 和 from，还有一个可选参数 next。    </p><p>这里的 to 和 from 都是 route 对象。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16610128455045.jpg"></p><h3 id="完整的路由导航守卫解析流程"><a href="#完整的路由导航守卫解析流程" class="headerlink" title="完整的路由导航守卫解析流程"></a>完整的路由导航守卫解析流程</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16610138516063.jpg"></p><h2 id="Vuex-的状态管理"><a href="#Vuex-的状态管理" class="headerlink" title="Vuex 的状态管理"></a>Vuex 的状态管理</h2><h3 id="什么是状态管理"><a href="#什么是状态管理" class="headerlink" title="什么是状态管理"></a>什么是状态管理</h3><p>单向数据流</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16612129200632.jpg"></p><p>复杂的状态管理：  </p><ul><li>父组件从子组件拿数据，会破坏原本的单向数据流  </li><li>通过组件数据的传递，当其中一个组件的层级太深时，传递数据也不方便。      </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16612148596369.jpg"></p><p>Vuex 的状态管理：   </p><p>借鉴了 React 的 Redux。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16612153415029.jpg"></p><p>Vuex 状态管理的流程：   </p><p>Mutations 不能异步操作，为了解决这个问题，Vuex 多增加了一个层——Actions。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16612158023013.jpg"></p><h3 id="Vuex-的安装"><a href="#Vuex-的安装" class="headerlink" title="Vuex 的安装"></a>Vuex 的安装</h3><p>在终端输入下面的命令，即可安装 Vuex：   </p><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> install vuex@next</code></pre><p>这个命令安装的 Vuex 版本为 <code>4.0.2</code>。   </p><h2 id="Vuex-的使用"><a href="#Vuex-的使用" class="headerlink" title="Vuex 的使用"></a>Vuex 的使用</h2><p>课前唠嗑：   </p><p>老师推荐的前端学习路线   </p><p>js ➡️ Vue ➡️ 小程序(原生开发/uniapp/Taro) ➡️ node ➡️ React ➡️ Webpack ➡️ 数据结构和算法 ➡️ leetcode     </p><h3 id="创建-Store"><a href="#创建-Store" class="headerlink" title="创建 Store"></a>创建 Store</h3><p>在项目 src 路径下创建一个名为 store 的文件夹，在 store 中创建一个 <code>index.js</code> 文件。  </p><p>从 vuex 导入 creatStore，创建 store 对象。</p><p>state 即状态，用来存放共享的数据，它的写法类似于 Options API 的 data 的写法。   </p><p>mutations 则是写以前写在 methods 中的方法。 </p><p>最后还要导出 store 对象。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16615287834352.jpg"></p><p>在入口文件 <code>main.js</code> 导入 store 对象，接着要和<strong>使用插件</strong>类似的方法，将 store 对象传入 use() 中。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16615615032381.jpg"></p><p>前面两步就完成了 vuex 的配置，来到 <code>App.vue</code> 文件。    </p><p>template 模板使用 store（仓库）中的数据（即 state 数据），需要用 <code>$store.state.counter</code> 的写法。    </p><p>而按钮绑定的事件，想触发 mutations 中定义的方法，需要使用 commit() 进行提交。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16615618870315.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16614735708550.jpg"></p><h3 id="单一状态树"><a href="#单一状态树" class="headerlink" title="单一状态树"></a>单一状态树</h3><p>Vuex 使用单一状态树，用一个 store 对象就包含了全部的应用层级的状态。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16615264660726.jpg"></p><h3 id="Vue-Devtool"><a href="#Vue-Devtool" class="headerlink" title="Vue Devtool"></a>Vue Devtool</h3><p>Vue 官方提供的一个调试工具，本质上是一个 Chrome 插件。   </p><p>插件安装链接：<br><a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd/related?utm_source=chrome-ntp-icon">https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd/related?utm_source=chrome-ntp-icon</a></p><h3 id="state-展示的辅助函数"><a href="#state-展示的辅助函数" class="headerlink" title="state 展示的辅助函数"></a>state 展示的辅助函数</h3><p>template 模板使用 mustache 语法 <code>$store.state.counter</code>来调用 state 中的数据，看起来比较冗长，我们可以使用 computed 作为替代。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16615665004044.jpg"></p><p>但 computed 也存在一个问题，每个数据都要单独进行定义，如上图定义的 sCounter、sName、sAge，也是有些冗余。   </p><p>为了让代码变得更简洁，可以使用 vuex 提供的<strong>辅助函数 mapState</strong>，它是对 state 数据的映射。   </p><p>先从 vuex 导入辅助函数 mapState。   </p><p>mapState() 返回的是一个对象，因此当 computed 中有其他计算属性的情况，要在 mapState() 前面加多一个<strong>展开运算符</strong> <code>...</code>。      </p><p>mapState() 可传入两种类型的数据：       </p><ul><li>数组  </li><li>对象   </li></ul><p>如果传入的是对象，我们可以对从 state 传入的数据进行重命名，例如下图的 counter 命名为 sCounter。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16615694915244.jpg"></p><h3 id="在-Composition-API-中使用-mapState"><a href="#在-Composition-API-中使用-mapState" class="headerlink" title="在 Composition API 中使用 mapState"></a>在 Composition API 中使用 mapState</h3><p>前面是在 Options API 中的计算属性使用 mapState，如果换到 Compostion API，该如何使用 mapState 呢？     </p><p>老师在课上封装了一个名为 useState 的 hooks，将数组或对象传入 useState 中，也能实现同样的效果。   </p><p>hooks 本质上是一个函数，只是因为它在 setup 中使用，因此我们把它称之为 hook。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16615848295472.jpg"></p><h2 id="Vuex-的-5-大核心"><a href="#Vuex-的-5-大核心" class="headerlink" title="Vuex 的 5 大核心"></a>Vuex 的 5 大核心</h2><p>Vuex 有 5 大核心：   </p><ul><li>state(状态)     </li><li>getters  </li><li>mutations(同步)  </li><li>actions(异步操作)    </li><li>modules(对 store 里面的状态划分模块)  </li></ul><h3 id="getters-的基本使用"><a href="#getters-的基本使用" class="headerlink" title="getters 的基本使用"></a>getters 的基本使用</h3><p>和 state 一样，getters 也有辅助函数 mapGetters。   </p><p>和 mapState 一样，mapGetters 既可以传入数组，也可以传入对象。    </p><p>不过传入对象时，它的写法与 mapState 存在着区别：   </p><p>mapState 需要回调 state，而 mapGetters 只需要使用 getters 中定义的函数名即可。   </p><pre><code class="hljs pf">...mapState(&#123;    sCounter: <span class="hljs-keyword">state</span> =&gt; <span class="hljs-keyword">state</span>.counter,    sName: <span class="hljs-keyword">state</span> =&gt; <span class="hljs-keyword">state</span>.name&#125;)</code></pre><pre><code class="hljs css">..<span class="hljs-selector-class">.mapGetters</span>(&#123;    <span class="hljs-attribute">sNameInfo</span>: <span class="hljs-string">&quot;nameInfo&quot;</span>,    sAgeInfo: <span class="hljs-string">&quot;ageInfo&quot;</span>&#125;)</code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16616622282974.jpg"></p><h3 id="在-Composition-API-中使用-mapGetters"><a href="#在-Composition-API-中使用-mapGetters" class="headerlink" title="在 Composition API 中使用 mapGetters"></a>在 Composition API 中使用 mapGetters</h3><p>和 mapState 一样，封装一个 hooks <code>useGetters</code>。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16616654755554.jpg"></p><h3 id="Mutation-基本使用"><a href="#Mutation-基本使用" class="headerlink" title="Mutation 基本使用"></a>Mutation 基本使用</h3><p>更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16616656752442.jpg"></p><p>commit() 提交可以传入两个参数，第一个是类型，即 mutation 中定义的函数名，第二个参数可以是一个数字，也可以是一个对象 payload。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16616683896212.jpg"></p><p>commit() 还提供了另外一种书写代码的方式，可在 commit 中直接传入一个对象，在对象的 type 字段写明调用的是 mutations 中的哪个函数。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16616688581061.jpg"></p><h3 id="Mutation-的辅助函数-mapMutation"><a href="#Mutation-的辅助函数-mapMutation" class="headerlink" title="Mutation 的辅助函数 mapMutation"></a>Mutation 的辅助函数 mapMutation</h3><p>使用辅助函数 mapMutations，可以将我们我们在 store 的 <code>index.js</code> 文件 mutations 定义的方法，映射到 <code>Home.vue</code> 的 methods 字段中。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16617871859210.jpg"></p><h3 id="在-Composition-API-中使用-mapMutations"><a href="#在-Composition-API-中使用-mapMutations" class="headerlink" title="在 Composition API 中使用 mapMutations"></a>在 Composition API 中使用 mapMutations</h3><p>在 setup() 中使用 mapMutations 比较简单，不需要对 mapMutations 返回的函数进行转化。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16617876584967.jpg"></p><h3 id="Actions-的基本使用"><a href="#Actions-的基本使用" class="headerlink" title="Actions 的基本使用"></a>Actions 的基本使用</h3><p>Actions 类似于 mutation，不同在于：   </p><ul><li>Actions 提交的是 mutation，而不是直接变更状态（state）   </li><li>Actions 可以包含任意异步操作   </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16618183378069.jpg"></p><p>在 store 文件夹的 <code>index.js</code> 的 store 对象中添加 actions 字段：  </p><p>actions 中定义的函数，可以传一个参数 context，也可以传两个参数 context 和 payload，第二个参数 payload，用来接收组件传递过来的数据，例如字符串或对象。     </p><p>actions 的工作方式是，提交一个 commit，触发 mutations 中定义的方法，最后引起 state 中数据的改变。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16619081623326.jpg"></p><p><code>Home.vue</code> 组件中，需要使用 <code>$store</code> 对象的 dispatch 方法<strong>派发事件</strong>。  </p><p>dispatch 可以传入一个参数，也可以传入 2 个参数，第二个参数可在派发事件的同时携带其他数据，会传入 actions 的 payload 对象中。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16619096588785.jpg"></p><p>这里的 dispatch() 传入的参数为对象类型时，还有另外一种代码书写方式：  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16619109318581.jpg"></p><h3 id="Actions-的辅助函数"><a href="#Actions-的辅助函数" class="headerlink" title="Actions 的辅助函数"></a>Actions 的辅助函数</h3><p>Actions 的辅助函数：mapActions</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16619919958645.jpg"></p><h3 id="Actions-的异步操作"><a href="#Actions-的异步操作" class="headerlink" title="Actions 的异步操作"></a>Actions 的异步操作</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16619918631337.jpg"></p><p>在组件里面，想要知道某一次派发出去的 actions 有没有完成的话，需要让当前的 actions 返回一个 Promise。</p><p>在返回 Promise 的情况下，完成的时候会调用 resolve，发生错误的时候会调用 reject。  </p><h3 id="Vuex-Module-模块的使用"><a href="#Vuex-Module-模块的使用" class="headerlink" title="Vuex Module 模块的使用"></a>Vuex Module 模块的使用</h3><p>为什么要使用模块 Module？   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16619932121650.jpg"></p><p>将原本放在 store 文件夹下 <code>index.js</code> 中的数据拆分为多个模块，在 store 文件夹下创建一个名为 modules 的文件夹，用来存放一个或多个模块。  </p><p>每个模块，本质上就是一个对象，包含 state、mutations、actions、modules 字段，定义好之后导出模块。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16621370772809.jpg"></p><p>在 <code>index.js</code> 导入拆分的模块，在 store 对象的 modules 字段使用刚导入的模块。   </p><p>因为两个模块是使用 export default 导出，因此在导入时可重新命名模块的名称：  </p><p>homeModule ➡️ home<br>userModule ➡️ user    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16621373048819.jpg"></p><p>最后，在 <code>Home.vue</code> 组件中使用模块，譬如获取模块中定义的数据：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16621378592556.jpg"></p><h3 id="module-的局部状态"><a href="#module-的局部状态" class="headerlink" title="module 的局部状态"></a>module 的局部状态</h3><p>对于模块内部的 mutations 和 getters，接收的第一个参数是模块的局部状态对象。   </p><p>命名空间</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16621700483330.jpg"></p><p>在模块对象的开头加上 <code>namespaced: true</code>，这样就给模块添加了命名空间。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16621701545516.jpg"></p><h3 id="细节补充"><a href="#细节补充" class="headerlink" title="细节补充"></a>细节补充</h3><p>前面学习 getters 时，最多只给其中定义的函数传入 2 个参数 state 和 getters，而模块中的 getters 函数最多可以传入 4 个参数，另外的 2 个参数 rootState 和 rootGetters 可分别获取根文件 <code>index.js</code> 中的数据和 getters。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16621682229707.jpg"></p><p>模块 actions 中定义的函数，可对传入的 context 对象进行解构，总共包含了 6 个参数——commit、dispatch、state、rootState、getters、rootGetters。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16621694653956.jpg"></p><p>module 修改或派发根组件  </p><p>如果我们希望在 module 的 actions 中修改 root 中的 state，可以在 commit() 或 dispatch() 传入 1 个对象参数 <code>&#123;root: true&#125;</code>。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16621705423962.jpg"></p><h3 id="modules-的辅助函数"><a href="#modules-的辅助函数" class="headerlink" title="modules 的辅助函数"></a>modules 的辅助函数</h3><p>和前面一样，template 模板中书写的 mustache 语法变得越来越长，为了简化代码，modules 模块同样可以使用辅助函数。   </p><p>modules 辅助函数的代码有 3 种书写方式：  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16622031364643.jpg"></p><ul><li>方式二：在辅助函数中指明使用的是哪个模块             </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16621757109468.jpg"></p><ul><li>方式三：从 vuex 中导入函数 createNamespacedHelpers，在函数中传入模块名。     </li></ul><p>createNamespacedHelpers() 传入模块名，得到的是一个对象，里面有多个方法，可以在使用 const 声明变量时直接进行解构。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16621781836976.jpg"></p><h3 id="在-Composition-API-中使用-modules"><a href="#在-Composition-API-中使用-modules" class="headerlink" title="在 Composition API 中使用 modules"></a>在 Composition API 中使用 modules</h3><p>和前面一样，从模块获取 state 和 getters 数据时，需要用到我们自己封装的 useState 和 useGetters 函数。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16622515346958.jpg"></p><p>前面在封装 useState 和 useGetters 函数时，我们没有考虑到「模块」的情况，因此需要对代码进行补充：   </p><p>useState() 多传入一个参数 moduleName，对传入的模块名进行判断——模块名是否为字符串，且不为空。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16622517348188.jpg"></p><h2 id="nextTick"><a href="#nextTick" class="headerlink" title="nextTick"></a>nextTick</h2><p>nextTick，是 Vue 提供的一个 API。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16622955227161.jpg"></p><p>nextTick 的原理       </p><p>Vue 内部会执行很多任务：   </p><ul><li>watch(,回调函数) ➡️ preQueue(队列)  </li><li>组件的更新 update ➡️ jobQueue  </li><li>生命周期回调 ➡️ postQueue   </li></ul><p>JS 的事件循环(event loop)会分成两个队列：  </p><ul><li>微任务队列：Promise.resolve().then(回调函数)       </li><li>宏任务队列：按钮点击事件   </li></ul><p>在同时有微任务队列和宏任务队列的情况下，JS 会优先执行微任务队列中的任务(task)。           </p><p>Vue 内部对队列进行了巧妙地处理，<strong>将队列中的任务都加入到了微任务队列中</strong>，而 nextTick() 中传入的函数，也会将函数对应的任务放入到微任务队列的末尾。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16622813900893.jpg"></p><h2 id="historyApiFallback"><a href="#historyApiFallback" class="headerlink" title="historyApiFallback"></a>historyApiFallback</h2><p>这是一个和 <strong>Vue 路由/Webpack</strong> 相关的知识点。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16623005342221.jpg"></p><p>historyApiFallback，是 Webpack 中的一个配置，它位于 <code>node_modules &gt; @vue &gt; cli-service &gt; lib &gt; commands &gt; serve.js</code> 文件<br>中。</p><p>这个配置默认为 true，当我们进入一个页面后，重新刷新页面，（配置后）能让页面正常显示，而不会返回 404。   </p><p>之所以能实现这个，是因为它将当前的路径重定向到了首页 <code>index.html</code>，保证路径与页面的对应关系是正确的。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16622990138120.jpg"></p><p>Vue 的脚手架 Vue-cli 是基于 Webpack 的，如果我们想修改 Webpack 中的配置，有 2 种方式：  </p><ul><li>修改 cli-service 源码   </li><li>在项目根目录下创建一个 <code>vue.config.js</code> 文件，在里面修改 Webpack 的配置   </li></ul><p>在 <code>vue.config.js</code> 文件中将 historyApiFallback 配置为 false，它会覆盖 node_modules 中配置的 true。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16623004248904.jpg"></p><p>historyApiFallback 配置为 false 时，当我们刷新打开的页面，会出现下面的错误。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16623003436230.jpg"></p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>Vue</tag>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的公众号 2 万关注了，感谢有你。</title>
    <link href="/2022/09/04/2022-9-4-wemedia/"/>
    <url>/2022/09/04/2022-9-4-wemedia/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649920660&idx=1&sn=40fa9403cdbb738dffa463dc97d5d2a2&chksm=83a890b9b4df19af0325e3ed445a5ea82dba728b6db308e7fa3072dc8366a7177d22ff831d3a&token=1552293497&lang=zh_CN#rd">效率工具指南</a>」<br>文/彭宏豪   </p><p>昨天，我的公众号到达 2 万关注了，首先要感谢还关注这个号的朋友，因为有你们的关注和支持，帮助我达成了这个目标。   </p><p>前天晚上看后台的关注数快到 2 万之前，我去翻了一下去年的数据，想看看我的号达到 1 万关注的确切时间——2021 年 6 月 17 日。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16620461317844.jpg"></p><p>之所以要关注这个时间点，是因为我想回顾一下，从 0 做到 1 万，和 1 万关注做到 2 万关注，达成相同的关注数绝对值所花费的时间——      </p><ul><li>0-1 万：2018/12/31 累计 715 人关注，到 2021/6/17 有 1 万人关注，花费 899 天，约等于 2.5 年。     </li><li>1-2 万：2021/6/17-2022/9/2，花费 422 天，约等于 1.2 年。   </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/04/16622159960674.jpg"></p><p>将这个数据列出来，是想把我的公众号关注数增长作为一个样本，供你参考，尤其是供那些还在写公众号的朋友参考。       </p><p>我心里非常清楚，这个增长速度，对比一篇爆文增长几万关注、或是其他对新人很友好的新媒体平台来说，这个关注数连零头都算不上。    </p><p>虽然我还在写着公众号，但还是不得不承认公众号的日渐式微，开始要走下坡路了，表现在：   </p><ul><li>越来越多的人更喜欢看视频形式的内容        </li><li>获取信息的渠道有了更多选择，新闻热点看微博，猎奇闲逛看抖音，有趣精致看 B 站、小红书、即刻等等，而不是非公众号不可         </li></ul><p>还是之前的一句老话，如果你写公众号的目的纯粹是奔着赚钱，而且像我一样没有写出爆文的能力，那么公众号已经不是一个好的选择了：  </p><p>无论是公众号关注数的增长，还是文章的数据表现，例如打开率、阅读量等，都比不上其他动辄上万点赞、几十万播放的内容平台。     </p><p>试想投入那么多精力或时间，既没有可观的经济收入，也没有账号关注蹭蹭上涨、<strong>关注者积极互动</strong>等精神方面的激励，你说能有多少个人、多少个小号能坚持写下去呢？    </p><p>这样一想，写公众号写到半路放弃才是常态，对于断更的人来说，是不是也有了一个好的借口了？             </p><p>写到这里，我也在想，让我断断续续坚持写下来的，都有哪些原因呢？</p><p>写到现在，好像没有一个特别明确的原因了，大概有过这些原因：    </p><ul><li>我曾寄希望于，写东西能让我变得更加自由，自由或许可以具像化为：我可以依靠写东西为生，成为一名自由职业者，而不是受雇于某一家公司；写东西可以给我带来不少的收入，可以比较随心地买自己想买的东西，当然不是房车那些东西，而是一台 Mac 电脑            </li><li>我平时很少主动找人聊天，其实很多时候也不知道找谁聊天好，不知道找谁聊，那就把想到的东西记在备忘录里，或是发到网上           </li><li>好不容易搞定了自己遇到的一个软件问题，想到有些人可能也会遇到同样的问题，心想：把解决问题的过程写出来，没准遇到同样问题的人能搜到我写的文章    </li><li>没事干的时候不知道干什么好，刚打完游戏有一点罪恶感或者空虚感，那就写一篇文章来平衡一下？   </li><li>写东西或许可以让我在网上认识更多的人，别人愿意和你交往，可能是因为你有趣，或者是你有价值   </li><li>最后一点，我希望当我离开这个世界的时候，能在这个世界上留下一点点东西    </li><li>……   </li></ul><p>看到这里，如果你也想开始做内容，但纠结于不知道写文章，做视频还是录播客好，不妨可以看看公众号「槽边往事」的和菜头老师写的一篇文章，或许会给你提供一个不同的角度：    </p><p><a href="https://mp.weixin.qq.com/s/_-S9XniDCA4hsVnl0leo1w">当人们冷静下来以后</a>             </p><p>那我们下次 5 万关注的时候再见👋    </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">           </p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
      <tag>写作</tag>
      
      <tag>公众号</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>分享视频文件，除了网盘，还能用在线录屏软件芦笋。</title>
    <link href="/2022/09/02/2022-9-2-lusun/"/>
    <url>/2022/09/02/2022-9-2-lusun/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于公众号「<a href="https://mp.weixin.qq.com/s/G6c3N1ZrB4uxG5QgUt4yzA">效率工具指南</a>」<br>文/彭宏豪    </p><p>Hello 各位好，我是小豪。   </p><p>说到在朋友或亲人间分享视频，很多人第一时间想到的是微信，然后就是各种网盘工具，例如百度网盘、阿里云盘等。   </p><p>虽然用微信来分享视频很方便，但我不太喜欢使用，一方面微信在手机上占用的空间本来就很大了，如果再加上吃内存的视频，那以后会越来越卡，而且通过微信接收的视频，如果不及时保存下来，过几天就会被微信自动清理掉。  </p><p>微信的这个「自动清理」功能虽然被很多人吐槽，但从另一方面来看，它好像也是避免微信变得越来越卡的积极因素啊。。。                 </p><p>当然，如果是方便公开的视频，其实现在先发布到视频号，再把内容转发给别人，也是一个值得考虑的选择。  </p><p>而如果是不方便公开的视频，或是只想小范围分享的话，那么使用网盘进行分享，就是很常见的事情了。  </p><p>除了这两个方式，今天再给大家介绍另外一种分享视频文件的方法，会用到我之前介绍过挺多次的在线录屏软件——<strong>芦笋</strong>。    </p><p>在电脑浏览器打开芦笋官网 <code>lusun.com</code>，进入个人空间，点击右上角的「上传」，会弹出如下的窗口。</p><p>你可以将本地不超过 1G 的 mp4 视频上传到芦笋的云空间中，如果视频的体积超过 1G，要么将一个视频分割为多个视频，要么对视频进行压缩，要么换个工具。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/02/16620753895206.jpg"></p><p>上传之后，开启视频分享，将视频链接或二维码分享给朋友或亲人，对方点开链接或扫码就能直接观看。  </p><p>需要说明的是，不要往这上面上传一些不干净或违规的视频，自己的个人空间并不是法外之地。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/02/16620762955154.jpg"></p><p>对个人用户而言，芦笋分为基础版和高级版 2 个版本，基础版最多可上传 10 个视频，而高级版不限制上传的视频数量，只限制总的云存储空间——1 TB。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/02/16620765062429.jpg"></p><p>如果你之前没有使用过「芦笋」这款工具，可以扫描下方的二维码进行注册，新用户将获得 30 天的高级版会员：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/09/02/qrcodea--a1-3.jpg" alt="QRcode_A — a1 -3-"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">               </p>]]></content>
    
    
    
    <tags>
      
      <tag>录屏软件</tag>
      
      <tag>效率工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>音乐播放器Spotify太丑？给它换个皮肤，马上安排。</title>
    <link href="/2022/08/25/2022-8-25-spotify/"/>
    <url>/2022/08/25/2022-8-25-spotify/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/op6RKywZyFeWeGaQusilWA">效率工具指南</a>」<br>文/彭宏豪      </p><p>Hello 各位好，我是小豪。  </p><p>不知道这里用 Spotify 听音乐的朋友多不多，我猜应该很少吧，毕竟第一次用 Spotify 挺费劲，而且要好用（去广告 + 自由播放歌曲），还得充值会员。  </p><p>不过 Spotify 会员有个好处，你不需要为了听某张专辑再花钱。。。对比国内的音乐 App，高下立判。 </p><p>就像周董前阵子上新的专辑，Spotify 会员可以直接听，不像国内的 QQ 音乐还要买啥 VVVVVip，我可去你的吧。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16612994880369.jpg"></p><p>说回正事，今天这篇文章，想分享一下，如何更换电脑版 Spotify 的主题。  </p><p>有用过 Spotify 的朋友应该都知道，Spotify 默认是下图的青黑配色，最初看起来还是挺高端的。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16612997051318.jpg"></p><p>但这个绿色看久了，会觉得有些平淡，想给它换个颜色，譬如换成下面的蓝色：        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16613002393121.jpg"></p><p>Spotify 默认没有提供更换主题或配色方案的选项，因此要想自由更换客户端的主题，需要用到一个第三方工具——<strong>Spicetify</strong>。   </p><h2 id="安装-Spicetify"><a href="#安装-Spicetify" class="headerlink" title="安装 Spicetify"></a>安装 Spicetify</h2><p>使用 Spicetify 时，可参考 Spicetify 的说明文档，因为这是老外写的项目，所以文档的语言是英文。    </p><p>Spicetify 说明文档：<br><a href="https://spicetify.app/docs/getting-started">https://spicetify.app/docs/getting-started</a>     </p><p>看不懂说明文档也没关系，可以看我下面写的操作步骤。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16613007880913.jpg"></p><p>这个工具支持 3 大系统——Windows、macOS 和 Linux，安装时需要打开电脑上的「终端」或「命令行窗口」—— </p><ul><li>Windows：Powershell   </li><li>macOS：终端或者第三方终端「iTerm2」     </li></ul><p>使用 Windows 电脑的朋友，在 Powershell 中依次粘贴下面的 2 行命令，并按下回车：   </p><pre><code class="hljs awk">iwr -useb https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/spicetify/</span>spicetify-cli<span class="hljs-regexp">/master/i</span>nstall.ps1 | iexiwr -useb https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/spicetify/</span>spicetify-marketplace<span class="hljs-regexp">/main/</span>resources/install.ps1 | iex</code></pre><p>使用 macOS 或者 Linux 系统的朋友，则依次粘贴下面的 2 行命令：  </p><pre><code class="hljs awk">curl -fsSL https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/spicetify/</span>spicetify-cli<span class="hljs-regexp">/master/i</span>nstall.sh | sh   curl -fsSL https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/spicetify/</span>spicetify-marketplace<span class="hljs-regexp">/main/</span>resources/install.sh | sh</code></pre><p>在不同系统中粘贴的这 2 行命令，其实是从 GitHub 下载 Spicetify 和相关的文件，但由于某些因素，使用这 2 个命令下载时经常会遇到下载失败的问题。   </p><p>解决方法是：使用木弟子🪜，而且在终端中开启全局代理。    </p><p>在终端中开启全局代理，可在一开始打开终端的时候，输入<strong>类似下面</strong>的命令：  </p><p>之所以说是类似下面的命令，是因为命令中包含的端口「7890」或「789」参数，需要随着你在用的不同代理工具而变化。    </p><pre><code class="hljs routeros"><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">https_proxy</span>=http://127.0.0.1:7890 <span class="hljs-attribute">http_proxy</span>=http://127.0.0.1:7890 <span class="hljs-attribute">all_proxy</span>=socks5://127.0.0.1:789</code></pre><p>我在用的工具是 ClashX，默认的端口就是 7890。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16613020483554.jpg"></p><p>在终端中开启全局代理后，再粘贴运行前面的 2 条安装命令，当终端提示「Everything is ready, you can start applying now!」，说明我们顺利安装了 Spicetify 以及相关的文件。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16613024899510.jpg"></p><h2 id="下载-Spicetify-主题"><a href="#下载-Spicetify-主题" class="headerlink" title="下载 Spicetify 主题"></a>下载 Spicetify 主题</h2><p>准备更换 Spotify 的工具后，我们还需要下载一些主题，才能自由地更换 Spotify 的外观。   </p><p>Spicetify 文档提供了 4 个社区中的开发者创建的主题，这些主题放在了 GitHub 仓库中。</p><p>如果你不知道如何从 GitHub 仓库下载这些主题，可以点击下方的公众号卡片「效率工具指南」，在后台回复【<strong>Spotify</strong>】或者【<strong>声田</strong>】，获取所有主题文件。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16613543015875.jpg"></p><p>将主题文件下载到本地后进行解压，将解压得到的多个主题文件放到 <code>.spicetify</code> 下的 Themes 文件夹中，使用 Linux 或 macOS 系统的朋友，可以参考下图的路径。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16613547804726.jpg"></p><p>对于使用 Windows 系统的朋友来说，则要把所有的主题文件放到 Appdata 路径下。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16613551995230.jpg"></p><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>准备好主题文件，来到更换 Spotify 主题的最后一步：修改 Spicetify 的配置文件 <code>config-xpui.ini</code>。   </p><p>对于 macOS 系统，这个配置文件位于 <code>用户/用户名/.config/spicetify</code> 路径下。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16613559763035.jpg"></p><p>编辑配置文件 <code>config-xpui.ini</code> 时，可以使用 VS Code 或任意一款文本编辑器（例如 Windows 上的记事本）打开这个文件。   </p><p>修改配置文件，其实主要修改两个地方：  </p><ul><li>current_theme：主题的名称   </li><li>color_scheme：配色方案   </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16613568456100.jpg"></p><p>主题的名称，来自前面下载解压得到的主题文件，下图中的每个文件夹就对应一个主题，文件夹的名称就是主题的名称。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16613547804726.jpg"></p><p>打开任意一个主题的文件夹，其中的 <strong>screenshots</strong> 文件夹中提供了主题的效果图，在更换 Spotify 主题之前，可以先进到这个文件中查看主题的效果图，再从中选择自己喜欢的 Spotify 主题。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16613574066757.jpg"></p><p>选定一个主题后，我们还需要配置一下主题的「配色方案」，这个参数来自主题文件夹中的 <code>color.ini</code> 文件。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16613576317029.jpg"></p><p>同样地，使用代码编辑器或文本编辑器打开 <code>color.ini</code> 文件，打开后的文件如下图所示。  </p><p>每个中括号 [] 中的文本，就对应一种配色方案，以下图为例，<code>red-light</code> 是一种配色方案，<code>rose-pine-moon</code> 是另外一种配色方案。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16613577203616.jpg"></p><p>选好想使用的主题和主题中提供的配色方案后，依次将这两个参数填入配置文件 <code>config-xpui.ini</code> 对应的两个字段中。   </p><p>填好之后，按下快捷键 Ctrl/Command + S 保存更改。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16613579264545.jpg"></p><h2 id="在终端中应用更改"><a href="#在终端中应用更改" class="headerlink" title="在终端中应用更改"></a>在终端中应用更改</h2><p>完成以上操作后，我们还要来到终端，输入命令 <code>spicetify apply</code>，按下回车键确认更改 Spotify 主题，当下方返回「Spotify is spiced up!」，则说明已经完成主题的更改。  </p><p>此时重启 Spotify 客户端，就能看到更改主题之后的效果啦～     </p><p>需要注意的是，每次更改了主题或配色方案之后，都要来到终端再执行一次 <code>spicetify apply</code>。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16613581921716.jpg"></p><h2 id="使用-Spicetify-的体验"><a href="#使用-Spicetify-的体验" class="headerlink" title="使用 Spicetify 的体验"></a>使用 Spicetify 的体验</h2><p>下图是主题为 <code>Ziro</code>，配色方案为 <code>rose-pine-moon</code> 的效果，这个主题不仅可以更改 Spotify 的配色方案，还会给歌词添加滚动效果。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16612972465257.jpg"></p><p>下图是主题为 <code>spicetify-fluent-master</code>，配色方案为 <code>dracula</code> 的效果，这个主题有个问题，菜单或者按钮的图标丢失了…   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/25/16612990502673.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">         </p>]]></content>
    
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>Spotify</tag>
      
      <tag>主题美化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac任意应用窗口置顶显示，这个好用软件相见恨晚【效率工具指南】</title>
    <link href="/2022/08/20/2022-8-20-mac_pin_top/"/>
    <url>/2022/08/20/2022-8-20-mac_pin_top/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/u31ajN_EP8LibFSIsNw3mQ">效率工具指南</a>」<br>文/彭宏豪      </p><p>Hello 各位周末好，我是小豪。  </p><p>相信用过截图软件 Snipaste 的朋友，应该对软件内置的「贴图」功能并不陌生：   </p><p>它可以将截图固定在屏幕最上层，不会被其他应用窗口所遮挡，这个功能有点像 Windows 上一些软件自带的「置顶」功能一样，例如 Windows 微信或幕布，点击右上角的「图钉📌」，就可以将应用「钉」在桌面最顶层。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/04/16610004551391.jpg"></p><p>当然并不是所有的 Windows 应用都自带「置顶」功能，为了让所有的 Windows 应用窗口都能置顶，我还写过 2 篇实现应用窗口置顶的文章：   </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649912229&idx=1&sn=42ed51bfed7cbf30728fc6e632ddd994&chksm=83a87788b4dffe9e11e48e63f82d997427b7102f11105f9636b752902653db44d86a28cfa58e&token=827967041&lang=zh_CN#rd">截图软件Snipaste超好用的贴图功能，在别的软件也能拥有 | 窗口置顶工具</a>    </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649919355&idx=1&sn=9a52c988fef1e8f69a436a26cf7af0b0&chksm=83a88b56b4df02406f5e844ebe347839491ce32e2e6937bcb4cf0f59ea3ac02ca0d145c8f62c&token=827967041&lang=zh_CN#rd">微软家的多功能工具箱，让我又卸掉了5个软件 | PowerToys</a>    </p><p>之所以会有窗口置顶的需求，主要还是觉得自己在用的电脑的屏幕太小，想要一边看视频（IINA 视频播放器），一边记笔记（MWeb），有时还要敲下代码（VS Code），需要在 3 个软件之间来回切换的体验很差。  </p><p>这时我就想到，如果可以把其中最重要的视频播放窗口固定在桌面顶部，不受另外两个软件遮挡，同时只需要在这两个软件间切换，就可以大大提高观看视频教程的体验。   </p><p>因为我用的是 Mac 电脑，因为 macOS 系统的限制，想要实现 Windows 那样的窗口置顶，并没有那么方便。  </p><p>之前就有这个想法了，但一直没找到合适且简单的软件，不过今天在网上搜了一下，终于找到 macOS 系统上将应用窗口置顶的方法啦！    </p><h2 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h2><p>在 Mac 上将任意应用窗口置顶显示，需要用到一个软件和插件。   </p><ul><li>软件：MacForge，一个开源的插件管理工具，可通过安装插件，为 macOS 系统增加本不具备的功能。    </li><li>插件：AfloatX，让应用窗口置顶显示的插件。   </li></ul><h2 id="下载-MacForge"><a href="#下载-MacForge" class="headerlink" title="下载 MacForge"></a>下载 MacForge</h2><p>下面是 macEnhance 对 MacForge 这款软件的简要介绍：  </p><blockquote><p>MacForge，适用于 macOS 的简单插件管理器。可让您发现和管理出色的插件以增强您的 macOS 体验。   </p></blockquote><p>使用 MacForge 有两个注意事项：  </p><ul><li>必须禁用 macOS 系统的系统完整性保护，系统完整性保护的英文全称为 System Integrity Protection，简写为 SIP         </li><li>MacForge 不能用于 M1 或 M2 芯片的电脑，目前只支持 Intel 芯片的 Mac 电脑，且 macOS 系统版本不得低于 10.14   </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/04/16610030947358.jpg"></p><p>MacForge 下载地址：<br><a href="https://www.macenhance.com/macforge">https://www.macenhance.com/macforge</a>   </p><h2 id="关闭-macOS-系统-SIP"><a href="#关闭-macOS-系统-SIP" class="headerlink" title="关闭 macOS 系统 SIP"></a>关闭 macOS 系统 SIP</h2><p>Mac 电脑出厂时，为了提升系统的安全性，默认开启了系统完整性保护。   </p><p>更多关于系统完整性保护的介绍，可以查看来自 macEnhance 网站的介绍：  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/04/16610036328958.jpg"></p><p>如果你不确定自己之前是否关闭了系统完整性保护，可以先打开 Mac 自带的终端，在终端中输入 <code>csrutil status</code>，根据返回的信息，就能知道当前是否关闭了 SIP。  </p><p>如下图，我的电脑当前关闭了 SIP，因此返回的信息为 disabled。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/04/16610037897147.jpg"></p><p>如果返回的是 enabled，那就说明系统当前的 SIP 是开启的。为了让 MacForge 能起作用，需要先关闭 SIP。   </p><p>关闭 SIP 的方法：  </p><p>先将电脑关机再开机，刚开机时长按 Command + R，直至电脑屏幕出现开机时的苹果图标，此时松手，等待进入 macOS 恢复功能界面。   </p><p>接下来的操作，因为我没有截图，这里可参考「少数派」上的一篇文章《<a href="https://sspai.com/post/55066">macOS 开启或关闭 SIP</a>》：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/04/qrcodea--a1-2.jpg" alt="QRcode_A — a1 -2-"></p><p>简单来说，就是打开 macOS 恢复功能界面顶部菜单栏「实用工具 &gt;&gt; 终端」，在打开的终端中输入 <code>csrutil disable</code>后按下回车，这样就关闭了 SIP，之后重启电脑，正常进入系统。    </p><h2 id="Mac-终端"><a href="#Mac-终端" class="headerlink" title="Mac 终端"></a>Mac 终端</h2><p>重启电脑后，再次打开 Mac 电脑的终端，在终端粘贴下面的命令，按下回车，输入电脑开机密码。    </p><pre><code class="hljs gradle">sudo defaults <span class="hljs-keyword">write</span> <span class="hljs-regexp">/Library/</span>Preferences/com.apple.security.libraryvalidation.plist DisableLibraryValidation -bool <span class="hljs-keyword">true</span></code></pre><h2 id="运行-MacForge-软件"><a href="#运行-MacForge-软件" class="headerlink" title="运行 MacForge 软件"></a>运行 MacForge 软件</h2><p>打开我们安装的 MacForge，点击左侧栏的 Discover，这里显示的就是 MacForge 提供的各种系统增强插件。   </p><p>其中的 AfloatX 就是实现应用窗口置顶所需要用到的插件，点击右侧的「GET」按钮安装插件，当按钮上的文字由 GET 变为 OPEN，就说明插件已经安装完毕。     </p><p>安装好插件后，再重启一下电脑，让刚安装的插件生效。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/04/16610045700357.jpg"></p><h2 id="将应用窗口置顶显示"><a href="#将应用窗口置顶显示" class="headerlink" title="将应用窗口置顶显示"></a>将应用窗口置顶显示</h2><p>重启电脑后，打开想置顶显示的应用，右击 Dock 栏的应用图标，可以看到打开的面板中多出了一个 <strong>AfloatX</strong> 的选项，选择 Float Window，即「浮动窗口」，就可以将当前应用的窗口置顶显示啦！  </p><p>开心～从自己的需求出发，找到了刚好可以满足需求的工具，这种感觉太开心了。           </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/04/16610048056235.jpg"></p><h2 id="另外的窗口置顶方案"><a href="#另外的窗口置顶方案" class="headerlink" title="另外的窗口置顶方案"></a>另外的窗口置顶方案</h2><p>如果你觉得前面介绍的方法比较麻烦，想找一个可以简单实现窗口置顶的方法，那么可以考虑使用下面的这款工具——Fentre。  </p><p>Fentre 可以置顶显示图片、视频、网页等，只需要安装软件就能直接使用，不像前面需要很多个步骤。  </p><p>将你想要置顶显示的东西拖拽到顶部菜单栏的 Fentre 图标，软件就会打开一个悬浮在桌面顶部的窗口。  </p><p>但实际使用下来，Fentre 的自由度不如前面介绍的方法，表现在：使用 Fentre 置顶显示的视频只能用 Fentre 内置的播放器播放，无法使用 IINA 来播放，也就意味着无法倍速播放视频。。。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/04/16610053721374.jpg"></p><p>如果你想要使用 Fentre，可从 Mac App Store 下载，应用商店提供了两个软件版本，一个是免费的 Lite 版，一个是付费的 Pro 版，价格为 50 元。 </p><p>还需要说明的是，Fentre 目前似乎只有适配 Intel 芯片的版本，如果你想在 M1 或者 M2 芯片的电脑上使用，需要额外安装 Rosetta，对 Intel 版本的软件进行转译。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2023/02/04/16610058770652.jpg"></p><h2 id="订阅我在竹白上创建的-Newsletter"><a href="#订阅我在竹白上创建的-Newsletter" class="headerlink" title="订阅我在竹白上创建的 Newsletter"></a>订阅我在竹白上创建的 Newsletter</h2><p>如果对你有帮助的话，别忘了点击下方的链接，订阅我的 Newsletter，之后发布了新的内容，就能第一时间收到通知啦～  </p><p><a href="https://penghh.zhubai.love/">👉在竹白上订阅效率工具指南</a>         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>插件</tag>
      
      <tag>窗口置顶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浏览器插件Open With+Mac下载工具Downie，一键下载网页视频</title>
    <link href="/2022/08/12/2022-8-12-openwith_plugin/"/>
    <url>/2022/08/12/2022-8-12-openwith_plugin/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/LGbFGQvs3yYBG8GSMjQyaA">效率工具指南</a>」<br>文/彭宏豪     </p><p>Hello 各位好，我是小豪。   </p><p>相信用过 Windows 电脑的朋友，对下图的电脑询问「你要以何方式打开 XX 文件」的弹窗并不陌生，这个窗口通常出现在：  </p><p>我们没有设置打开这种文件的默认应用，或是安装了一个新的应用后，原先打开这种文件的默认应用被篡改，系统需要重新进行确认。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/12/16602309319698.jpg"></p><p>而如果把这里的本地文件换成我们天天在用的<strong>网页</strong>，是否可以实现在浏览器之外，使用其他的软件打开当前的网页呢？   </p><p>——答案是可以的。   </p><p>但实现了这个操作，你可能会问：这个操作有什么用吗？或是有什么使用场景呢？   </p><p>目前我找到了 2 个比较有用的使用场景：  </p><ul><li>在下载工具 Downie 中打开当前的网页，实现快速下载      </li><li>在登录了另外一个知乎账号的浏览器打开当前的知乎页面，查看另一个账号是否回答了这个问题（工作上的需要）    </li></ul><p>这两个使用场景，其实有一个共同的地方，就是将原本的「复制当前网页链接，在另外一个应用粘贴复制的链接」的操作简化了，只需要借助一个<strong>浏览器插件 Open With</strong>，就能自动帮我们完成这一个过程。 </p><p>这么说还是有点抽象，来说一下前面说到的第 1 个使用场景——      </p><p>假设我要使用下载工具 Downie 下载一个 B 站的视频，按照传统的操作应该是这样子的：先复制浏览器地址栏的视频链接，再打开 Downie，在软件中执行粘贴链接的操作，就能开始下载视频。  </p><p>而当我在浏览器安装了 Open With 插件，同样是要下载这个视频，只需要：右击页面的空白处，选择「Open With &gt;&gt; Downie」，也就是使用 Downie 打开当前的网页，就会自动唤醒本地安装的 Downie，自动在软件中开启视频下载。   </p><p>说这么多，其实是想表达：<strong>这个插件可以让人变得更懒</strong>，想下载视频，连复制链接的操作都可以省掉，让程序自动帮我们完成。          </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/12/20220811-234059.gif" alt="2022-08-11 23.40.59"></p><p>用着 Windows 电脑的同学，把这里的 Downie 替换为 IDM，也能实现相同的效果。   </p><p>需要说明的是，最早知道这个操作，还是从我喜欢的一个公众号「奔跑中的奶酪」，人称「奶大」的博主那里看到的。  </p><p>之前他写了一篇很详细的文章，不过后来他把文章删掉了，没看过的人可能也见不到了，而且这里我还想补充那篇文章中没提及的一个问题的解决方法。   </p><p>铺垫了这么多，来看一下如何实现这个快捷操作吧：  </p><h2 id="安装浏览器插件-Open-With"><a href="#安装浏览器插件-Open-With" class="headerlink" title="安装浏览器插件 Open With"></a>安装浏览器插件 Open With</h2><p>首先要安装实现这个快捷操作的浏览器插件 Open With，这个插件支持火狐、Firefox 和 Opera 浏览器，最初有上架到 Chrome 应用商店，不过后来下架了。   </p><p>因此，用着 Chrome 浏览器的朋友，如果想使用这个插件，可以扫描下方的二维码，在公众号「效率工具指南」后台回复【<strong>ow</strong>】，获取插件安装包。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">       </p><p>使用 Firefox 浏览器的朋友，可以从插件的 GitHub 项目页面找到安装链接：  </p><p><a href="https://github.com/darktrojan/openwith">https://github.com/darktrojan/openwith</a>    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/12/16602343911689.jpg"></p><h2 id="配置浏览器插件"><a href="#配置浏览器插件" class="headerlink" title="配置浏览器插件"></a>配置浏览器插件</h2><p>对于使用 Mac 电脑的用户，在浏览器安装了 Open With 插件后，还需要额外对插件进行配置。   </p><p>右击 Chrome 浏览器右上角的插件图标，选择「选项」，打开插件的设置页面。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/12/16602350192081.jpg"></p><p>点击左侧的蓝色文字「Click here to download」，下载一个 Python 脚本文件。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/12/16602352833394.jpg"></p><p>将下载的 Python 文件放到<strong>资源库</strong>的应用支持路径下，具体路径如下图所示：     </p><p><code>/Library/Application\ Support/Google/Chrome/</code>     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/12/16602357245967.jpg"></p><p>接着打开 Mac 上的终端，在终端中依次输入如下两行命令：   </p><p><code>chmod u+x /Library/Application\ Support/Google/Chrome/open_with_mac.py</code>    </p><p>输入上面的命令后，按下回车键，再输入下面的命令：  </p><p><code>/Library/Application\ Support/Google/Chrome/open_with_mac.py install</code>     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/12/16602359059758.jpg"></p><p>经过前面的操作后，就算是在 Mac 电脑上完整安装了这个插件。   </p><p>接着回到插件的设置页面，点击下方的「Look for browsers」，插件就会扫描你在电脑上安装的所有浏览器，并将其添加到右侧的面板。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/12/16602362278293.jpg"></p><p>经过这个操作后，去到 Chrome 浏览器中的任意一个页面，当你在页面空白处右击，选择 Open With，弹出的面板应该就会显示你电脑上安装的所有浏览器。  </p><p>这时选择一个 Chrome 之外的浏览器，就会在另外一个浏览器中打开当前的页面。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/12/16602363955782.jpg"></p><p>而如果你想在这个面板中添加额外的应用，例如前面提到的下载工具 Downie 或者 IDM，就需要再次回到插件的设置页面。   </p><p>点击下方的「Add browser」，添加新的浏览器。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/12/16602365874491.jpg"></p><p>在弹出的配置面板，有两个需要填入文本的字段：  </p><ul><li>Name：输入应用的名称，例如我想添加 Downie，就把它命名为 Downie   </li><li>Command：这里要输入应用所在的路径，Mac 电脑应用安装的路径是一致的，因此输入 <code>/Application/应用名称.app</code>    </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/08/12/16602366622826.jpg"></p><p>这样配置之后，Open With 插件就会多出一个 Downie 的备选项，这样我们就可以在 Downie 中打开当前的网页。  </p><p>如果当前的网页恰好是视频页面，Downie 就会自动下载页面中的视频，真正实现许多人梦寐以求的「一键下载」。   </p><p>科技，让人变得更懒了！<br>还不错。   </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">         </p>]]></content>
    
    
    
    <tags>
      
      <tag>下载</tag>
      
      <tag>Downie</tag>
      
      <tag>浏览器插件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我拿回属于自己的笔记数据，怎么了？｜将印象笔记导入笔记软件Notion</title>
    <link href="/2022/07/30/2022-7-30-yinxiang/"/>
    <url>/2022/07/30/2022-7-30-yinxiang/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/c0efVv8C3-kzpsdNsWmqvQ">效率工具指南</a>」<br>文/彭宏豪     </p><p>Hello 各位好，我是小豪。  </p><p>今天的这篇文章，可以看成是前一篇文章《<a href="https://mp.weixin.qq.com/s/OO6PYsCkz3X7YBBTCc-h9w">印象笔记又开始作了？保住自己的笔记要紧</a>》的后续，先说一下发出前一篇文章后发生的一些事情：  </p><ul><li>公众号后台提供的旧版印象笔记下载链接🔗没多久就失效了，我猜测是被人举报了    </li><li>下载链接失效了还不是最糟糕的，失效了我可以重新分享出来，更恶心的是，有朋友反馈说，安装了旧版的应用后，首次启动会弹出下面的提示，不更新到最新版本，就无法查看存储在软件中的笔记</li></ul><p>这不是明摆着不让用户用回旧版的应用吗？<strong>为了阻止用户转移本应属于自己的笔记数据，真是什么下三滥的招都用出来</strong>。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/30/ishot20220730111137.png" alt="iShot_2022-07-30_11.11.37"></p><p>不过，即便这样，我还是找到了另外一个从印象笔记导出 enex 格式的方法，这个方法稍微有一点麻烦，需要用到 Python 和命令行。       </p><p>这个方法用了国外一位开发者 vzhd1701 写的一个项目「evernote-backup」，有用 GitHub 的朋友也可以去到 GitHub 给这个项目点个 Star，共同感谢这位开发者的付出。   </p><p>GitHub 项目「evernote-backup」地址：   </p><p><a href="https://github.com/vzhd1701/evernote-backup">https://github.com/vzhd1701/evernote-backup</a></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/30/16591866903796.jpg"></p><h2 id="安装-Python"><a href="#安装-Python" class="headerlink" title="安装 Python"></a>安装 Python</h2><p>使用 evernote-backup 导出笔记之前，请先在自己的电脑上安装 Python。   </p><p>Python 官网：<br><a href="https://www.python.org/">https://www.python.org/</a>   </p><p>使用 Mac 电脑的朋友，除了从 Python 官网下载安装包，也可以通过终端的 Homebrew 进行安装，具体方法，可以参考我之前发布的一篇文章：  </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649912923&idx=1&sn=26e8b3b8a7a12983c03781551b67b96f&chksm=83a87276b4dffb60265b4cc75eab2fe6e7992e924ad2577e2ae45af9a0f2ba1202c27f2f4670&token=1775818589&lang=zh_CN#rd">学 Python 前的准备工作｜人生苦短，我选 Python</a>   </p><p>而使用 Windows 电脑的朋友，安装完 Python 之后可能还需要配置一下「环境变量」，如果不清楚如何配置，可以自行上网搜索。   </p><h2 id="安装-evernote-backup"><a href="#安装-evernote-backup" class="headerlink" title="安装 evernote-backup"></a>安装 evernote-backup</h2><p>安装好 Python 后，我们还要安装一下前面提到的项目，这里需要打开电脑上的终端（Mac）、Powershell（Windows）或者 CMD（Windows）。   </p><p>下面以 Mac 上的终端为例： </p><p>打开终端，在终端粘贴下面的命令，按下回车键，就能完成导出工具的安装。    </p><pre><code class="hljs sql">pip <span class="hljs-keyword">install</span> evernote-<span class="hljs-keyword">backup</span></code></pre><p>除了使用 Python 的 pip 命令安装，开发者还提供了另外的安装方式——    </p><p>使用 Mac 的 Homebrew 安装： </p><pre><code class="hljs mipsasm"><span class="hljs-keyword">brew </span><span class="hljs-keyword">install </span>evernote-<span class="hljs-keyword">backup</span></code></pre><p>使用 pipx 安装：  </p><pre><code class="hljs sql">pipx <span class="hljs-keyword">install</span> evernote-<span class="hljs-keyword">backup</span></code></pre><p>不过由于 pipx 不是 Python 自带的命令，在使用之前，我们需要先安装这个命令：   </p><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> pipx</code></pre><h2 id="使用导出工具"><a href="#使用导出工具" class="headerlink" title="使用导出工具"></a>使用导出工具</h2><p>这个导出工具的使用，分为 3 个步骤：   </p><ul><li>初始化数据库</li><li>下载笔记数据</li><li>输出 enex 格式的文件   </li></ul><p>我们一一来看：   </p><h2 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h2><p>在终端粘贴下面的命令，并按下回车键。      </p><pre><code class="hljs mipsasm">evernote-<span class="hljs-keyword">backup </span>init-db --<span class="hljs-keyword">backend </span>china</code></pre><p>这里需要注意的是，这个项目既可以导出 Evernote 的笔记，也能导出中国版 Evernote 印象笔记的数据，如果是导出印象笔记，这个初始化数据库命令的末尾就要加上 <code>--backend china</code>，如果是导出 Evernote 的数据，就要把上面命令中的 <code>--backend china</code> 去掉。   </p><p>终端会提示让你<strong>输入印象笔记的账户</strong>和<strong>密码</strong>，按照提示输入即可，如果程序能顺利运行，终端最终会返回一句 Successfully initialized database for user。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/30/16591880882942.jpg"></p><p>但我在运行这个命令的时候，遇到了一个错误，报错信息如下：  </p><pre><code class="hljs groovy"><span class="hljs-attr">SSLCertVerificationError:</span> [<span class="hljs-attr">SSL:</span> CERTIFICATE_VERIFY_FAILED] certificate verify <span class="hljs-attr">failed:</span> unable to get local issuer certificate (_ssl.<span class="hljs-attr">c:</span><span class="hljs-number">1123</span>)</code></pre><p>这个我不确定是不是我开了代理的原因，不过在网友「无声」的帮助下，我找到了解决方法，在终端粘贴下面的命令：  </p><pre><code class="hljs awk">ln -s <span class="hljs-regexp">/etc/</span>ssl<span class="hljs-regexp">/* /</span>Library<span class="hljs-regexp">/Frameworks/</span>Python.framework<span class="hljs-regexp">/Versions/</span><span class="hljs-number">3.9</span><span class="hljs-regexp">/etc/</span>openssl</code></pre><p>网友「无声」还给出了找到这个解决方法的出处，来自 stackoverflow：  </p><p><a href="https://stackoverflow.com/questions/52805115/certificate-verify-failed-unable-to-get-local-issuer-certificate">https://stackoverflow.com/questions/52805115/certificate-verify-failed-unable-to-get-local-issuer-certificate</a></p><p>如果你也遇到类似的问题，可以试着用上面的方法，如果还是不行，也可以尝试项目作者提供的另外一种方法，在终端粘贴下面的命令：  </p><pre><code class="hljs awk"><span class="hljs-regexp">/Applications/</span>Python\ <span class="hljs-number">3.9</span>/Install\ Certificates.command</code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/30/16591885073911.jpg"></p><p>运行前面的命令解决遇到的这个问题后，再运行最初的初始化数据库的命令，顺利的话，电脑本地就会多出一个名为 <code>en_backup.db</code> 的文件。   </p><h2 id="下载笔记数据"><a href="#下载笔记数据" class="headerlink" title="下载笔记数据"></a>下载笔记数据</h2><p>接着在终端粘贴下面的命令，并按下回车，就能同步拿到账号中的数据。   </p><pre><code class="hljs sql">evernote-<span class="hljs-keyword">backup</span> <span class="hljs-keyword">sync</span></code></pre><p>如果你的账号里有比较多的数据，这一步运行起来会花费较多的时间，如果刚好遇上你要关机或者出门，那么没关系，你可以随时终止这个命令的运行。  </p><p>因为这个工具支持<strong>断点下载</strong>，你可以在中途随时停止，之后重新运行这个命令，它会从上一次停止的地方继续下载，不需要重头再来。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/30/16591891303912.jpg"></p><h2 id="输出-enex-格式的文件"><a href="#输出-enex-格式的文件" class="headerlink" title="输出 enex 格式的文件"></a>输出 enex 格式的文件</h2><p>等到第二步完成之后，就可以将笔记数据下载为本地的 enex 文件了。   </p><p>在终端粘贴下面的命令，并按下回车： </p><pre><code class="hljs elm"><span class="hljs-title">evernote</span>-backup ex<span class="hljs-keyword">port</span> output_dir/</code></pre><p>等待程序走完，就会在本地生成一个名为 <code>output_dir</code> 的文件夹，里面就存放了我们导出的所有 enex 文件，如下图所示。   </p><p>需要说明的是，下图中每一个 enex 文件，实际上对应的是印象笔记中的每一个「笔记本」，如果你在笔记本里创建了多条笔记，那每个 enex 文件里就会包含多条笔记的。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/30/16591894673026.jpg"></p><p>得到所有的 enex 文件后，我试着将其中一个名为「得到 App 笔记」的 enex 文件导入 OneNote，导入后的效果如下：  </p><p>这个 enex 文件包含了我在使用「得到」App 阅读不同电子书划线、评论或转发的内容，导入的效果还能接受。  </p><p>我也终于拿回了本该属于我的数据。           </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/30/16591896552414.jpg"></p><h2 id="将-enex-文件导入-Notion"><a href="#将-enex-文件导入-Notion" class="headerlink" title="将 enex 文件导入 Notion"></a>将 enex 文件导入 Notion</h2><p>除了导入微软的 OneNote，我们还可以将 enex 文件导入笔记软件 Notion。   </p><p>Notion 默认不支持直接导入 enex 文件，但我们可以使用这位开发者写的另外一个工具「enex2notion」，这里的数字 2 是 to，即把 enex 导入 Notion。  </p><p>关于这个工具的使用，可以查看一位博主「Jerry Zhu」写的文章《<a href="https://imho.plus/form-evernote-to-notion/">印象笔记近乎完美的迁移至Notion</a>》，这里就不复读了，他也写得很详细了：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/30/qrcodea--a1-2.jpg" alt="QRcode_A — a1 -2-"></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>最后再来说说印象笔记这款产品：</p><p>它从最初是一款比较小众的产品，到后来被很多人自发安利（曾经还有一群人叫印象笔记布道师？），或是在微博评论区随处可见的 <code>@我的印象笔记</code>，变成好多人都熟知的笔记产品，可以说开头或者中间的发展阶段都很好。  </p><p>但不知道为什么后来就变成这样了呢：   </p><ul><li>产品内无处不在的广告，付费的会员也会经常看到「提示你续费」的广告     </li><li>在国内抢注 Notion 的商标</li><li>产品功能越加越多，整成一个四不像     </li><li>新出的产品抄袭 flomo、Notion  </li><li>到最新的更改导出格式，阻止用户流失或转移数据  </li></ul><p>我也不知道它咋变成了现在这个样子？       </p><p>看到这里，如果你知道身边的朋友有在用印象笔记的，不妨把这篇文章转发给 TA 们，有些用了多年印象笔记的用户，却对 TA 在用的产品变成这样浑然不知，想想也是非常可怕的一件事，对吧？    </p><p><strong>印象笔记，终于活成了自己最讨厌的样子。</strong>    </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">         </p>]]></content>
    
    
    
    <tags>
      
      <tag>Notion</tag>
      
      <tag>笔记软件</tag>
      
      <tag>GitHub</tag>
      
      <tag>数字难民</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>印象笔记导出格式更新，enex变为notes，恶心行为+1｜印象笔记旧版安装包下载</title>
    <link href="/2022/07/28/2022-7-28-yinxiang/"/>
    <url>/2022/07/28/2022-7-28-yinxiang/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/OO6PYsCkz3X7YBBTCc-h9w">效率工具指南</a>」<br>文/彭宏豪</p><p>Hello 各位好，我是小豪。  </p><p>本来今天不想更新的，但后来在网上看到一条和印象笔记有关的消息，就来简单说一下。  </p><p>印象笔记在最近的一次更新，将笔记的导出格式从延续了好多年的 <code>enex</code> 更改为了新的 <code>notes</code> 格式。  </p><p>从网上看到的评论，有人说这是印象推出的一种新的加密格式，类似于网易云音乐耍流氓推出的 ncm 音乐格式，<strong>增加了用户从印象笔记迁移到其他笔记软件（例如微软的 OneNote）的成本</strong>，导致你的印象笔记只能被迫继续留在印象笔记中。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/28/16589382346303.jpg"></p><p>这种耍流氓的行为，简直和之前一篇文章《<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649920287&idx=1&sn=d6ebda6f99519204cb9e01411884fe8b&chksm=83a89732b4df1e24e834a73ef328d8cf7f15741f1e413cd3e54a6fb4629974e849ab9c5384c9&token=1775818589&lang=zh_CN#rd">不吐不快，国内互联网产品畸形的设计</a>》里提到的「产品设计乱象」一模一样，感觉国内很多公司好的东西不学，尽学那些下三滥的招数，都烂到一处。    </p><p>不过，对付「大象」这种耍流氓的方式，还是有法子的：</p><ul><li>最简单的就是<strong>不要升级到最新版的印象笔记</strong>   </li><li>如果不慎已经升级到了最新版，那就<strong>下回旧版的软件</strong>  </li></ul><p>就这么简单。     </p><p>我在自己的公众号「效率工具指南」后台准备好了 macOS 和 Windows 两个系统旧版的软件包，有需要的朋友，可以点击下方的卡片，在后台回复「<strong>印象</strong>」两个字，就能获取下载链接啦。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">       </p><h2 id="将印象笔记迁移到-OneNote"><a href="#将印象笔记迁移到-OneNote" class="headerlink" title="将印象笔记迁移到 OneNote"></a>将印象笔记迁移到 OneNote</h2><p>从印象笔记导出的 enex 文件，要去往哪个新的笔记软件呢？这是一个新的问题。   </p><p>目前了解到的，Notion 和 OneNote 这两个笔记软件都支持导入来自印象笔记的笔记。  </p><p>不过 Notion 有点麻烦，它支持导入<strong>印象笔记国际版 Evernote</strong> 的笔记，不支持直接导入印象笔记的 enex 文件，但网上还是有人研究出来了，但我没这个需求，所以就没去折腾，有需要的可以自行上网搜索。  </p><p>而如果你想把印象笔记迁移到微软的笔记软件 OneNote，倒是有一个比较方法的方法：使用微软官方提供的迁移工具 <strong>OneNote Importer</strong>。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/28/16589407039961.jpg"></p><p>这个迁移工具同时支持 Windows 和 macOS 系统，从网站下载之后安装，应用程序列表会多出一个软件 OneNote Importer，打开之后按照提示，将 enex 导入 OneNote，稍等一小会，就能在 OneNote 中看到导入的笔记。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/28/ishot20220728005342.png" alt="iShot_2022-07-28_00.53.42"></p><p>下面是 enex 格式的印象笔记文件导入 OneNote 的效果，供参考：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/28/16589409493081.jpg"></p><p>需要说明的是，微软 OneNote 提供的这个导入工具，按照官网上展示的信息，应该是今年 9 月 1 日起就无法下载了。  </p><p>所以想要从印象笔记迁移到 OneNote 的朋友，抓紧时间去下载这个迁移工具吧！   </p><p>印象笔记导入 OneNote 工具 OneNote Importer 下载地址：<br><a href="https://www.onenote.com/import-evernote-to-onenote">https://www.onenote.com/import-evernote-to-onenote</a>     </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">       </p>]]></content>
    
    
    
    <tags>
      
      <tag>笔记软件</tag>
      
      <tag>效率工具</tag>
      
      <tag>数字难民</tag>
      
      <tag>OneNote</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac电脑上好用的2款截图工具</title>
    <link href="/2022/07/27/2022-7-27-mac_screenshot/"/>
    <url>/2022/07/27/2022-7-27-mac_screenshot/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/3MvaOFrIdSz7-K7-6gRrpw">效率工具指南</a>」<br>文/彭宏豪     </p><p>Hello 各位好，我是小豪。  </p><p>今天来简单聊聊 Mac 电脑上好用的两款截图软件——Xnip 和 iShot。   </p><h2 id="Xnip"><a href="#Xnip" class="headerlink" title="Xnip"></a>Xnip</h2><p>Xnip，是我目前在用的截图软件，我日常会有的截图需求——截图、长截图、简单的标注（添加红色文字、矩形或者马赛克）、贴图、拾取颜色，Xnip 都能做到。 </p><p>Xnip 还有一个我不常用的功能——<strong>高亮</strong>（快捷键为数字 9），效果如下图所示，高亮的区域会保持原本的亮度，非高亮的部分亮度则会变暗，就像是「红花配绿叶」，非高亮的部分作为衬托，来凸显出高亮的区域。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/27/16588503052776.jpg"></p><p>Xnip 可从 Mac 应用商店免费下载，应用包含内购，在不付费的情况下，其实也不影响使用。  </p><p>免费版主要有两个限制，一个是长截图的时候会在图片顶部带有软件的水印，水印这一点其实也不影响最终的长截图的外观；另一个是无法在下面的「评估窗口」给截取的图片添加标注。  </p><p>其实评估窗口我也极少使用，我一般都是在截完图片的状态下随手给图片添加标注，而不是再单独打开下面的窗口进行标注。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/27/16588510621149.jpg"></p><p>说明：打开 Xnip 评估窗口的快捷键为 W。  </p><p>虽然极少使用 Xnip 的评估窗口，但这个窗口还有一个很<strong>隐蔽的用法</strong>——可以用来设置标注工具的默认样式。     </p><p>说实话，我最开始并不知道这个用法，以至于我很长一段时间，都因为 Xnip 标注工具中的矩形描边太细，而不得不每次用到矩形的时候，都得手动去提高描边的数值。  </p><p>直到有一次在 Xnip 作者的动态下方留言，才找到了这个隐蔽的设置项。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/27/16588514948516.jpg"></p><p>调整标注工具默认样式的方法如下：   </p><p>打开 Xnip 的评估窗口，点击顶部对应的标注工具，调整右侧的参数，例如下图的「描边粗细」，调整好之后点击「设为默认样式」，这样就可以将自己觉得舒服的样式设置为软件的默认值，而不需要每次都去手动调整，我真的太蠢了。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/27/16588514542052.jpg"></p><h2 id="iShot"><a href="#iShot" class="headerlink" title="iShot"></a>iShot</h2><p>其实用 Xnip 之前，我用的截图软件是 iShot，但用 iShot 的过程中，遇到了一个可能是 bug 的问题：  </p><p>有些想叠加多层马赛克遮掉的区域，iShot 反而会把添加的多层马赛克变成半透明的，导致本来想遮掉的东西反而录出来了。     </p><p>今天重新试了一下 iShot 的马赛克功能，这个问题已经解决了。   </p><p>相比 Xnip，iShot 的功能更多，感觉已经超出了一款截图软件的能力范围了，功能如下图所示：  </p><blockquote><p>截图、标注、贴图、取色、录屏、录音、OCR（文字识别）、截图翻译。  </p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/27/16588524917641.jpg"></p><p>在使用 iShot 拖拽截取局部区域时，截取的图片<strong>默认会带有圆角</strong>，效果如下图所示。   </p><p>有公众号运营经验的朋友，想必对「圆角」并不陌生，有些公众号为了给文章中的图片都加上圆角的效果，还得额外安装一个浏览器插件，而现在使用 iShot，也能实现同样的效果了。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/27/16588528371492.jpg"></p><p>此外，iShot 在今年还加入了一个在我看来非常不错的功能——<strong>带壳截图</strong>，效果如下图所示，iShot 会进行全屏截图，并自动给截图最外层加上一个苹果电脑的样机（Mockup）。    </p><p>不确定这个灵感，是不是从手机上的截图应用 Picsew 上获得的？真棒👍          </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/27/ishot20220727002016.png" alt="iShot_2022-07-27_00.20.16"></p><p>当然，iShot 内置的功能并不是可以完全免费使用的，这里说免费版的两个限制：</p><p>一个是带壳截图会带有水印，一个是 OCR 文字识别功能需要付费后才能使用。  </p><p>iShot 提供了两种付费模式，一种是订阅，一种是买断，买断价格为 78 元。如果选择买断，则需要下载另外一个新的应用 iShot Pro，如果选择订阅，应该是使用老的 iShot 就可以了。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/27/16588525617540.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">       </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>效率工具</tag>
      
      <tag>截图软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>笔记软件 Notion 更新了什么？</title>
    <link href="/2022/07/23/2022-7-23-Notion/"/>
    <url>/2022/07/23/2022-7-23-Notion/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/ogUwVNFb2d5MXm5ELkMtyg">效率工具指南</a>」<br>文/彭宏豪     </p><p>Hello 各位好，我是小豪。  </p><p>好久没写 Notion 相关的文章了，主要也是我有好长一段时间没有用 Notion 了，现在用的最多还是 flomo，在网上随处看见点什么、或是摘抄一下读书笔记，都会把它们扔进 flomo 中。   </p><p>说回 Notion，昨晚用 Notion 发现更新了一个新功能，打开数据库中的页面时，增加了一个侧边查看页面内容的视图：   </p><p>官网把这个视图称之为 Side peek，这个设计确实不错，在不改变页面层级的情况下，可以在右侧直接查看页面中的内容，减少了切换页面的操作，当然也支持在这个视图下编辑页面的内容。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/23/16585661518440.jpg"></p><p>点击上方的视图切换按钮，可以将当前的侧视图切换到之前的视图模式：居中视图和整页。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/23/16585665266290.jpg"></p><p>点击上/下切换按钮，可以在保持当前视图的情况下，切换到数据库中的下一个页面。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/23/16585667331992.jpg"></p><p>如果你不喜欢这种新的视图模式，可以点击 database 右上角的「…」，在展开的菜单选择 Layout，点击其中的「Open pages in」，将其更换为原来的 Center peek 或者 Full page。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/23/16585668971421.jpg"></p><h2 id="行内链接预览"><a href="#行内链接预览" class="headerlink" title="行内链接预览"></a>行内链接预览</h2><p>如下图，当我们把鼠标移动到链接上方时，下方会弹出一个预览窗口，让我们在打开链接之前，可以提前预览一下链接的内容。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/23/16585648491882.jpg"></p><p>不过，行内链接预览并不支持所有的链接或应用，从 Notion 更新说明看到的，目前只支持 Jira、GitHub、Figma 等应用。  </p><p>想查看 Notion 支持链接预览的所有应用，可在 Notion 页面中输入 <code>/link</code>，弹出的菜单所展示的应用，插入的链接应该就可以在 Notion 中预览。  </p><p>应用列表名称：Figma、Hex、GRID、Jira、GitHub、Trello、Slack、Asana、Pitch、OneDrive、Zoom、Dropbox、Amplitude。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/23/16585652892061.jpg"></p><p>如果你粘贴到 Notion 的链接来自上面的其中一款应用，弹出的菜单与普通链接也存在着区别，这里提供了 3 个选项：   </p><ul><li>预览（即前面说到的行内链接预览）</li><li>提及（在链接末尾附上链接的域名）  </li><li>普通的链接     </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/23/16585641579604.jpg"></p><p>作为对比，我们来看下，在 Notion 中粘贴普通的链接，例如 Vue3 中文文档链接，它弹出的选项：  </p><ul><li>普通链接    </li><li>创建书签</li><li>嵌入</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/23/16585641917243.jpg"></p><p>此外，当我们点击行内链接预览窗口右上角的「…」，选择「Turn into preview」，可以将当前的浮窗预览更改为固定的预览视图。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/23/16585681116295.jpg"></p><p>相应地，当切换到固定的预览视图时，预览窗口就会在页面内占据较大的面积。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/23/16585683817374.jpg"></p><h2 id="在页面中创建列的新方法"><a href="#在页面中创建列的新方法" class="headerlink" title="在页面中创建列的新方法"></a>在页面中创建列的新方法</h2><p>之前在页面中创建并列的 block 时，我都是用最传统的方法，将想要并排显示的 block 拖拽到前一个 block 的最右侧，当出现并排的提示时松手，就可以创建两个并排的 block，这两个并排的区块也可以称作两列。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/23/20220723-171119.gif" alt="2022-07-23 17.11.19"></p><p>Notion 在这次更新中，增加了另外一些创建多列的方法：</p><p>如下图，用鼠标框选多个连续的 block，接着点击区块最前面的菜单，选择将多个 block 转换为 Columns，就可以快速创建出并排的多列。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/23/xing-nei-lian-jie-yu-lan.gif" alt="行内链接预览"></p><p>另外的创建多列的方法：  </p><p>在页面中输入 <code>/col</code>，呼出创建多列的命令，可选择创建 2/3/4/5 列。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/23/16585684615641.jpg"></p><p>假设选择了创建 4 列，由于最开始每一列中都没有内容，会看不到我们已创建的列，这时可以用鼠标框选一下空白区域，就能看到已有的 4 个横向排列的 block 占位符。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/23/16585686166258.jpg"></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>最后简要总结一下 Notion 本次更新的内容：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/23/16585679908411.jpg"></p><p>关于 Notion，如果你还有想了解的，可以在下方的评论区留言，没准我能帮你解答。   </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">       </p>]]></content>
    
    
    
    <tags>
      
      <tag>Notion</tag>
      
      <tag>笔记软件</tag>
      
      <tag>效率工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>佳能相机M50如何用作直播摄像头？</title>
    <link href="/2022/07/16/2022-7-16-canonandobs/"/>
    <url>/2022/07/16/2022-7-16-canonandobs/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于公众号「<a href="https://mp.weixin.qq.com/s/-G0BOfVRHXKXuyIqRFPimw">效率工具指南</a>」<br>文/彭宏豪，笔名/安哥拉    </p><p>Hello 各位周末好，我是小豪。    </p><p>今天翻出吃灰已久的相机，想起前不久在 Mac 派公众号上看到的一篇文章《<a href="https://mp.weixin.qq.com/s?__biz=MzI2MTAzMzcyNQ==&mid=2648558158&idx=1&sn=b079c1661b51fdd33ba1253bccbb28e4&chksm=f249f1dcc53e78ca9d16747416c0bd7d5fbe382356dfdc1b43ae6d2aca989298a9ba71e471dc&mpshare=1&scene=1&srcid=07094gvVTUl6R8cKVwX6CiGU&sharer_sharetime=1657335757218&sharer_shareid=00d5750dc68bf55f6cd8b19d034950bf#rd">怎么把你的相机变成 Mac 网络摄像头</a>》，想自己尝试一下，怎么把手中的佳能 M50 用作直播的镜头呢？   </p><p>整体弄下来其实很快，比较花时间的环节是：找相机和电脑相连的数据线（HDMI 或者安卓手机旧款充电线都可以）、以及佳能软件与电脑系统的适配。  </p><p>先看一下最终的效果：  </p><p>下图是直播软件 OBS 从相机镜头捕获的画面，我把相机放在了笔记本电脑的后面，图片右侧的黑色物体就是笔记本电脑。          </p><p>只要 OBS 能拿到相机拍摄的东西，我们就能把相机用于直播了，不管是视频号直播，还是其他的平台。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/snipaste20220716172458.png" alt="Snipaste_2022-07-16_17-24-58"></p><p>整个流程需要用到两款软件：  </p><ul><li>佳能推出的 EOS Webcam Utility 直播软件    </li><li>开源免费的直播软件 OBS    </li></ul><h2 id="常规的相机直播流程"><a href="#常规的相机直播流程" class="headerlink" title="常规的相机直播流程"></a>常规的相机直播流程</h2><p>在说具体操作之前，我们先来简单了解一下，使用相机进行直播的流程：   </p><p>你需要先有一台支持 HDMI 输出的相机，还需要有一个硬件「<strong>视频采集卡</strong>」，有了视频采集卡，才能将相机拍摄到的画面，传输给我们的电脑。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16579650382634.jpg"></p><p>但是在我们这个直播流程中，视频采集卡并不是必须的，我们可以使用佳能或其他相机厂商推出的「直播软件」，起到取代视频采集卡的作用，这样就省去了买硬件的钱💰了。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16579649735843.jpg"></p><p>说明：上面👆这两张截图，来自我喜欢的一位 Up 主「极地手记」的视频《<a href="https://www.bilibili.com/video/BV1ya4y1v7hY">【保姆教学】不用采集卡，佳能相机直播指南（支持G7X3，M50，M6II） by 极地手记</a>》。          </p><h2 id="EOS-Webcam-Utility"><a href="#EOS-Webcam-Utility" class="headerlink" title="EOS Webcam Utility"></a>EOS Webcam Utility</h2><p>EOS Webcam Utility，是佳能在 2020 年上线的一款直播软件，这个年份有些特殊，可能就像 Up 主极地手记在视频中说到的那样（大意）：   </p><blockquote><p>疫情催生了在线教学或直播的需求，相机厂商看到了这个需求，顺势推出可把相机用于直播的软件。         </p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16579648740959.jpg"></p><p>EOS Webcam Utility 既有 Windows 也有 macOS 版本，不过 <strong>macOS 版本的限制比较多</strong>，你只能在 macOS 10.13-10.15 的系统上使用，如果你的 Mac 系统已经更新到了 macOS 11 以上，那就和这个软件无缘了。    </p><p>Windows 系统的限制少一些，只要是 Win10 的系统都是可以使用的。  </p><p>也是因为系统的问题，我又搬出了好久没用的 Windows 笔记本。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16579655857407.jpg"></p><p>另外还需要说明的是，<strong>并不是所有的佳能相机都可以使用这个软件来直播</strong>，在下载软件时需要根据相机的型号来查找，才能知道佳能是否推出了对应的软件。  </p><p>如果你手里有佳能的相机，可以看看自己购买的相机型号，是否在下图的列表中：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16579659655294.jpg"></p><p>EOS Webcam Utility 下载地址：<br><a href="https://www.canon.com.cn/special/webcam/index.html">https://www.canon.com.cn/special/webcam/index.html</a>      </p><p>下面以 Win10 系统使用直播软件 EOS Webcam Utility 为例进行介绍：    </p><p>将佳能的直播软件下载到本地，解压下载的文件，双击打开文件夹中的 setup 文件，就能开始安装。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/shuang-jisetup.png" alt="双击setup"></p><p>安装好软件后，用数据线将相机与电脑进行连接，连接后电脑和相机分别会有反应：  </p><p>Win10 电脑右下角会有一个弹窗；相机屏幕会出现一个电脑的图标，就表示相机已经连接到电脑上了。    </p><h2 id="OBS"><a href="#OBS" class="headerlink" title="OBS"></a>OBS</h2><p>相机连接到电脑后，想要进行直播，还需要用到另外一个软件，那就是 OBS。  </p><p>打开 OBS，点击「来源」左下角的加号，在弹出的面板，选择添加「视频捕获设备」，会弹出如下图的窗口。  </p><p>点击设备，在下拉列表中选择刚安装的软件名称「EOS Webcam Utility」，顺利地说，你就能在 OBS 中看到相机捕获的画面了。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/tian-jia-she-bei-lai-yuan.png" alt="添加设备来源"></p><p>到这里，我们就完成了将相机画面导入直播软件 OBS 的步骤。  </p><p>接下来如果你想把相机捕获的画面推送到直播平台，例如视频号等，就需要再了解一点点「视频推流」的东西。   </p><p>关于 OBS 的使用，之前既有写过文章，也有录过视频，这里就不过多介绍。   </p><p>感兴趣的可以看我发布在 B 站的一个「视频号竖屏直播」的视频：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/img2856.PNG" alt="IMG_2856"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>直播</tag>
      
      <tag>OBS</tag>
      
      <tag>效率工具</tag>
      
      <tag>相机</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端框架 Vue3 学习笔记（二）</title>
    <link href="/2022/07/16/2022-7-16-vue3learnnote2/"/>
    <url>/2022/07/16/2022-7-16-vue3learnnote2/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>注：学习笔记来自 coderwhy 老师的 Vue3 课程。  </p><h2 id="Vue3-组件化开发"><a href="#Vue3-组件化开发" class="headerlink" title="Vue3 组件化开发"></a>Vue3 组件化开发</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16490467364421.jpg"></p><p>在 VS Code 中可以安装的两个提升 Vue 开发效率的插件：   </p><ul><li>Vue VSCode Snippets</li><li>Vetur    </li></ul><p>安装 Vue VSCode Snippets 插件后，在 <code>App.vue</code> 文件中输入 <code>vbase-css</code>，就可以快速插入下面的代码片段：     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16490463789945.jpg"></p><p>想在 <code>App.vue</code> 中使用其他的组件(拆分出去的组件)，例如 <code>Header.vue</code>、<code>Main.vue</code>、<code>Footer.vue</code>，有两种方法：   </p><ul><li>把 <code>Header.vue</code>、<code>Main.vue</code>、<code>Footer.vue</code> 注册成全局组件（不推荐）     </li><li>局部注册</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16490525310249.jpg"></p><h2 id="组件的通信"><a href="#组件的通信" class="headerlink" title="组件的通信"></a>组件的通信</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16490537753776.jpg"></p><p>父子组件间的通信：  </p><ul><li>父组件传递给子组件：通过 props 属性；    </li><li>子组件传递给父组件：通过 $emit 触发事件。   </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16490624835915.jpg"></p><h3 id="父组件传递给子组件"><a href="#父组件传递给子组件" class="headerlink" title="父组件传递给子组件"></a>父组件传递给子组件</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16490626628599.jpg"></p><p>父组件传递给子组件 - <strong>字符串数组</strong>     </p><p>这里的字符串数组，指的是：<strong>子组件的 props 字段传入的是一个数组</strong>。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16490642820092.jpg"></p><p>父组件传递给子组件 - <strong>对象类型</strong>     </p><p>子组件的 props 的值为对象类型时，可以对传入属性的值做更多的限制：  </p><ul><li>比如指定传入的 attribute 的类型    </li><li>指定传入的 attribute 是否必传     </li><li>指定的 attribute 没有传入值时，它的默认值 default         </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16490701610690.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16490781070827.jpg"></p><p>传入 attribute 的值可以是哪些类型？   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16490767000197.jpg"></p><p>在 vue 文件，template 元素中的属性采用驼峰命名法是没问题的，因为 template 的代码是由 vue-loader 解析的，而不是由浏览器解析。</p><p>但建议还是采用 短横线分隔命名 的命名方式。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16490825001812.jpg"></p><h3 id="非Prop的Attribute"><a href="#非Prop的Attribute" class="headerlink" title="非Prop的Attribute"></a>非Prop的Attribute</h3><p>当我们传递给一个组件某个属性，但是该属性并没有定义对应的 props 或者 emits，就称之为 非Prop的Attribute。  </p><p>常见的包括 class、style、id 属性等。   </p><p>这里需要注意：<br>div 元素都有 class 属性；而自定义的组件，例如 <code>&lt;show-message&gt;</code> 是没有 class 属性的。  </p><p>非Prop的Attribute 有 3 种情况：   </p><ul><li>当(子)组件有单个根节点时，非Prop的Attribute将自动添加到根节点的 Attribute 中。这个称为 Attribute 继承。   </li><li>如果不希望(子)组件的根元素继承 attribute，可以在(子)组件中设置 <code>inheritAttrs: false</code>。  </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16491198403110.jpg"></p><ul><li>多个根节点的 attribute：</li></ul><p>这里的多个根节点，是指子组件的 template 包含的多个标签，没有包裹到一个 div 标签里面。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16491206777172.jpg"></p><h3 id="子组件传递给父组件"><a href="#子组件传递给父组件" class="headerlink" title="子组件传递给父组件"></a>子组件传递给父组件</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16491443014769.jpg"></p><p>案例：子组件中创建两个按钮，当按钮发生点击后，父组件中的 counter 计数器的数字相应发生变化。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16491389406671.jpg"></p><p><code>this.$emit()</code> 除了可以给父组件传递事件，还可以传递其他的参数，例如下图的 this.num。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16491436847595.jpg"></p><h2 id="非父子组件的通信"><a href="#非父子组件的通信" class="headerlink" title="非父子组件的通信"></a>非父子组件的通信</h2><p>非父子组件的通信，主要有两种方式：  </p><ul><li>Provide/Inject   </li><li>Mitt 全局事件总线    </li></ul><h3 id="Provide-和-Inject"><a href="#Provide-和-Inject" class="headerlink" title="Provide 和 Inject"></a>Provide 和 Inject</h3><p>Provide/Inject 用于非父子组件之间共享数据：   </p><ul><li>比如有一些深度嵌套的组件（层级比较深），子组件想要获取父组件的部分内容；   </li><li>在这种情况下，如果我们仍然将 props 沿着组件链逐级传递下去，就会非常的麻烦；   </li></ul><p>对于这种情况，我们可以使用 Provide 和 Inject：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16491743528708.jpg"></p><p>从父组件向孙组件传递数据，最简单的用法，父组件的 provide 字段传入一个对象，孙组件的 inject 字段传入对象的 key。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16492032723206.jpg"></p><p>如果父组件的 provide 需要<strong>用到来自 data 字段的数据</strong>，那么原先传入 provide 的对象就需要改写成一个函数。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16492595713475.jpg"></p><p>如果我们希望父组件 provide 提供的数据变成<strong>响应式</strong>，一般会用到 computed 函数，当传入的参数发生变化时(依赖发生变化)，computed 就会重新计算一个新的值。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16492642016632.jpg"></p><p>computed 函数返回的是一个 ref 对象。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16492602515142.jpg"></p><h3 id="全局事件总线-mitt-库"><a href="#全局事件总线-mitt-库" class="headerlink" title="全局事件总线 mitt 库"></a>全局事件总线 mitt 库</h3><p>eventBus：事件总线   </p><p>总线这个概念来源于操作系统。  </p><p>需要安装第三方库 mitt：  </p><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> mitt</code></pre><p>安装 mitt 库之后，在根目录创建一个文件 <code>eventbus.js</code>，导入 mitt 函数。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16493478849077.jpg"></p><p>案例需求：当我们点击 About 组件中的按钮时，HomeConnect 组件可以监听到点击事件。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16493481477101.jpg"></p><p>About 和 HomeConnect 两个组件都要引入前面安装的 mitt 库。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16493770715963.jpg"></p><p>发射多个事件，可以使用通配符接收所有事件。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16493792161633.jpg"></p><h3 id="mitt-的事件取消"><a href="#mitt-的事件取消" class="headerlink" title="mitt 的事件取消"></a>mitt 的事件取消</h3><p>取消掉之前注册的函数监听    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16493793602777.jpg"></p><h2 id="插槽-Slot"><a href="#插槽-Slot" class="headerlink" title="插槽 Slot"></a>插槽 Slot</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16494385809566.jpg"></p><p>插槽的使用过程其实是<strong>抽取共性、预留不同</strong>；<br>会将<strong>共同的元素、内容</strong>封装在组件内；<br>同时会将不同的元素使用 Slot 作为占位，让外部决定到底显示什么样的元素。   </p><p>如何使用插槽呢？  </p><ul><li>Vue 中将 <code>&lt;slot&gt;</code> 元素作为<strong>承载分发内容</strong>的出口；   </li><li>在封装组件中，使用特殊的元素 <code>&lt;slot&gt;</code> 就可以为封装组件开启一个插槽；   </li><li>该插槽插入什么内容取决于<strong>父组件</strong>如何使用。   </li></ul><h2 id="插槽的基本使用"><a href="#插槽的基本使用" class="headerlink" title="插槽的基本使用"></a>插槽的基本使用</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16494403283741.jpg"></p><h3 id="插槽的默认内容"><a href="#插槽的默认内容" class="headerlink" title="插槽的默认内容"></a>插槽的默认内容</h3><p>使用多个插槽，每个插槽分别显示不同的内容。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16494728351719.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16494730576793.jpg"></p><p>动态插槽名：有时候在一些高级组件中，我们给 <code>&lt;slot&gt;</code> 的插槽名 name 属性赋的值不是写死的，会通过一个配置文件来传入一个值。   </p><p>使用动态插槽名的时候，template 元素的 v-slot 绑定的插槽名需要加一个 []，因为这绑定的是一个<strong>变量</strong>。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16494742327221.jpg"></p><p>具名插槽的缩写</p><p><code>v-slot:</code>可以简写为一个井号 #。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16494744045184.jpg"></p><h2 id="渲染作用域"><a href="#渲染作用域" class="headerlink" title="渲染作用域"></a>渲染作用域</h2><p>Vue 有一个渲染作用域的概念。  </p><p>看下面的一个小例子：  </p><p>button 虽然最终会替换掉插槽中的 slot 元素（button 的内容虽然最终会显示在 slot 的位置），但它是在 <code>App.vue</code> 中完成编译的，不能调用子组件 data 中的 title。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16494772045221.jpg"></p><p>如果父组件想使用来自子组件的数据，需要用到作用域插槽。   </p><h3 id="作用域插槽"><a href="#作用域插槽" class="headerlink" title="作用域插槽"></a>作用域插槽</h3><p>在用到一些第三方 UI 库，或者封装高级组件的时候会用到作用域插槽。   </p><p>父组件可以自由控制子组件插槽最终的显示效果。   </p><p>这里的 slotProps 可以更换为其他的名字，但通常情况下就是使用 slotProps。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16494880092964.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16494901817611.jpg"></p><p>独占默认插槽的缩写   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16494902855215.jpg"></p><p>默认插槽 default 和具名插槽混合     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16494903178859.jpg"></p><h2 id="动态组件"><a href="#动态组件" class="headerlink" title="动态组件"></a>动态组件</h2><p>需求：当我们点击父组件中的 3 个按钮时，下方的子组件（页面）会跟着切换。   </p><p>实现需求的 3 个方法：  </p><ul><li>使用条件判断   </li><li>使用动态组件    </li><li>使用 Vue 路由（对简单需求来说，路由的方法比较复杂，没必要）     </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16495962266742.jpg"></p><p>动态组件：  </p><p><strong>component 是 Vue 内置的组件</strong>，通过绑定 is 属性可以实现子组件间的切换。  </p><p>这种方法，相比条件判断更为简洁。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16495964525735.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16495966747791.jpg"></p><h2 id="认识-keep-alive"><a href="#认识-keep-alive" class="headerlink" title="认识 keep-alive"></a>认识 keep-alive</h2><p>keep-alive 是 Vue 内置的组件，不需要自行定义。</p><p>前面点击按钮切换子组件的案例中，每次切换不同的子组件时，原先创建的子组件都会被销毁。  </p><p>如果我们想在切换的时候，保留当前子组件的状态，例如保留我们在子组件中输入的内容、或是点击按钮累计得到的数字，这时就需要用到 keep-alive。  </p><p>它可以将子组件销毁之前的状态<strong>缓存</strong>起来，这样当我们再次切换回子组件的时候，就可以看到切换前的状态啦。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16495972046498.jpg"></p><p>keep-alive 的属性   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16495976097574.jpg"></p><p>keep-alive 配置 include 或 exclude 属性时，需要在组件中添加一个 name 字段，指明组件的名称。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16495979933786.jpg"></p><p>keep-alive 不设置 include 属性时，默认都是会缓存的。    </p><h2 id="Webpack-的代码分包"><a href="#Webpack-的代码分包" class="headerlink" title="Webpack 的代码分包"></a>Webpack 的代码分包</h2><p>运行 <code>npm run build</code> 对项目进行打包时，会得到两个 js 文件，一个是 <code>app.js</code>，一个是 <code>chunk.js</code>。   </p><p>随着我们自己编写的代码逻辑变多，打包得到的 <code>app.js</code> 文件会越来越大，在生产环境中会影响用户体验。   </p><p>对于一些不需要立即使用的组件，可以单独对它们进行拆分，拆分成一些小的代码块 <code>chunk.js</code>，会在需要用到的时候从服务器加载下来。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16497216154479.jpg"></p><p>打包生成的 <code>chunck-vendors.js</code> 文件，里面是项目用到的第三方的包，例如 vuejs、vue-router、axios。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16497205861230.jpg"></p><p>为了缩小 <code>app.js</code> 的体积，我们可以使用 Webpack 的<strong>分包</strong>操作，将我们自己编写的代码单独打包为一个文件，而不是都打包到 <code>app.js</code> 文件中。      </p><p>通过 <strong>import 函数</strong>导入的模块，后续 Webpack 对其进行打包时就会进行分包的操作。   </p><p>在打包后得到的 dist 文件夹中会多出一个 chunk-哈希值 的 js 文件。     </p><blockquote><p>import 函数的返回值是一个 Promise，就可以用 then 方法。   </p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16497210627347.jpg"></p><p>讲这个知识点有什么用呢？  </p><p><strong>Vue 的异步组件，就是基于 import 函数来实现</strong>。    </p><h2 id="Vue-异步组件"><a href="#Vue-异步组件" class="headerlink" title="Vue 异步组件"></a>Vue 异步组件</h2><p>对 Vue 组件（<code>.vue</code> 文件）利用 Webpack 进行分包，需要用到<strong>异步组件</strong>。   </p><p>从 Vue 框架中导入一个函数 defineAsyncComponent。   </p><p>调用函数 defineAsyncComponent 时，可以传入两种类型的参数：   </p><ul><li>工厂函数（更常用）    </li><li>传入一个对象类型  </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16501155712423.jpg"></p><p>defineAsyncComponent 函数传入工厂函数的写法：  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16501158350467.jpg"></p><p>defineAsyncComponent 函数传入对象的写法：  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16501165436309.jpg"></p><p>直接编写异步组件的情况比较少，一般是在配置路由的时候，把路由中的组件配置成异步组件。  </p><h2 id="异步组件和-Suspense-结合使用"><a href="#异步组件和-Suspense-结合使用" class="headerlink" title="异步组件和 Suspense 结合使用"></a>异步组件和 Suspense 结合使用</h2><p>Suspense 是悬念、悬而未决的意思。   </p><p>Suspense 是 Vue 内置的全局组件，有两个插槽：  </p><p>如果 default 插槽内的异步组件可以正常显示，那么就显示 default 插槽的内容；<br>如果 default 异步组件暂时无法显示，那么就会显示 fallback 的内容。   </p><p>下图的 <code>&lt;loading /&gt;</code> 是自定义的组件加载过程中会在页面显示的占位组件。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16501171202222.jpg"></p><h2 id="refs-的使用"><a href="#refs-的使用" class="headerlink" title="refs 的使用"></a>refs 的使用</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16501322219202.jpg"></p><p>获取组件内的元素 h2 或者子组件实例 nav-bar  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16501328215886.jpg"></p><p>子组件获取父组件或根组件，需要使用 $parent 和 $root。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16501613425848.jpg"></p><p>子组件 <code>NavBar.vue</code> 获取父组件 <code>App.vue</code> 的代码写法。   </p><p>这个比较少用，稍微了解一下就好。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16501616500921.jpg"></p><h2 id="认识生命周期"><a href="#认识生命周期" class="headerlink" title="认识生命周期"></a>认识生命周期</h2><p>什么是生命周期？   </p><p>每个组件都可能会经历从<strong>创建、挂载、更新、卸载</strong>等一系列的过程。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16501645437477.jpg"></p><h3 id="生命周期的流程"><a href="#生命周期的流程" class="headerlink" title="生命周期的流程"></a>生命周期的流程</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16501778891709.jpg"></p><h3 id="缓存组件的生命周期"><a href="#缓存组件的生命周期" class="headerlink" title="缓存组件的生命周期"></a>缓存组件的生命周期</h3><p>缓存组件指的是 keep-alive。  </p><p>前面说到，keep-alive 可以保存 A 组件在切换之前的状态，之后重新用到 A 组件的时候，可以直接看到组件切换前保存的数据。  </p><p>这个过程意味着，从 A 组件切换到 B 组件的时候，A 组件不会被销毁，因而<strong>不会调用 unmounted()**；从 B 组件切换回 A 组件的时候，A 组件不需要重新创建，因此</strong>也不会调用生命周期中的 created()**。  </p><p>对于这两种情况，我们会使用另外两个生命周期函数：  </p><ul><li>activated()   </li><li>deactivated()   </li></ul><p>还是上面的例子，当我们从 A 组件切换到 B 组件时，会调用 deactivated()；从 B 组件切换回 A 组件时，会调用 activated()。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16502085029627.jpg"></p><h2 id="组件的-v-model"><a href="#组件的-v-model" class="headerlink" title="组件的 v-model"></a>组件的 v-model</h2><p>这部分内容有点难。    </p><p>自定义组件的 v-model：  </p><p>等价于两个步骤，v-bind 绑定 modelValue，同时绑定一个事件 update。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16503280438972.jpg"></p><p>自定义组件 PhInput 中，使用 props 接收来自父组件传入的 modelValue。   </p><p>自定义组件中的 input 元素使用双向绑定 v-model，需要用到<strong>计算属性 computed</strong>。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16503285313164.jpg"></p><h2 id="Vue3-过渡-amp-动画实现"><a href="#Vue3-过渡-amp-动画实现" class="headerlink" title="Vue3 过渡&amp;动画实现"></a>Vue3 过渡&amp;动画实现</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16505582043721.jpg"></p><p>如果我们希望给<strong>单元素或者组件</strong>实现过渡动画，可以使用 <strong>transition 内置组件</strong>来完成动画。   </p><p>一个简单的例子：点击按钮，实现文字淡入淡出的效果   </p><p>将添加动画的元素包裹在内置组件 transition 中   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16505606064971.jpg"></p><h3 id="Vue-的-transition-动画"><a href="#Vue-的-transition-动画" class="headerlink" title="Vue 的 transition 动画"></a>Vue 的 transition 动画</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16505608501704.jpg"></p><h3 id="transition-组件的原理"><a href="#transition-组件的原理" class="headerlink" title="transition 组件的原理"></a>transition 组件的原理</h3><p>transition 组件的原理，需要了解，面试有可能会问到。  </p><p>下图的 DOM 插件、删除操作，就对应我们前面的显示和隐藏。如果 Vue 没有找到 JS 钩子或者 CSS 过渡/动画，显示和隐藏就会立即执行，不会有淡入或淡出的效果。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16505862207763.jpg"></p><h3 id="过渡动画-class"><a href="#过渡动画-class" class="headerlink" title="过渡动画 class"></a>过渡动画 class</h3><p>实现过渡动画，常用的 6 个 class：   </p><p>没有给 transition 组件添加 name 属性的时候，那么所有的 class 是以 v- 作为默认前缀。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16505869370996.jpg"></p><p>Vue 官方提供的示意图，帮助我们理解内置动画的原理：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16505872101269.jpg"></p><h3 id="过渡-CSS-动画"><a href="#过渡-CSS-动画" class="headerlink" title="过渡 CSS 动画"></a>过渡 CSS 动画</h3><p>前面是通过 transition(过渡) 来实现动画效果，另外我们也可以通过 animation 来实现。  </p><p>过渡动画 transition 本质上是定义了两帧，第一帧是透明度为 0，第二帧是透明度为 1，即从透明度为 0 到透明度为 1。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16568600121665.jpg"></p><p>使用 animation 动画，不需要像前面使用 transition 过渡动画那样定义 v-enter-from 和 v-leave-to，<strong>只需要定义 v-enter-active 和 v-leave-active</strong>。        </p><p>使用 <code>@keyframes</code> 定义帧动画，后面的 bounce 是帧动画的名称，可以自定义。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16507014426769.jpg"></p><p>过渡动画 transition 和 CSS 动画是可以同时存在的，即一个元素可以同时设置过渡动画和 CSS 动画。</p><p>同时设置了过渡动画和 CSS 动画，如果两个动画的时长是不一致的，就会出现某一个动画执行结束时，另外一个动画还没有结束，导致最终呈现的动画出现一些问题。  </p><p>这时我们可以在 transition 组件中添加一个额外的属性 type，指定时长更长的动画，保证添加的两个动画可以正常结束。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16568919118991.jpg"></p><p>transition 组件使用 duration 属性来指定过渡的时间，duration 可以传入两种类型的值，一个是 number 数字类型，一个是对象类型。  </p><p>使用数字类型时，duration 属性前面需要加多一个英文的冒号: ，表示值为 number 类型而非 string 类型。   </p><p>设置了 duration 属性后，在 <code>&lt;style&gt;</code> 标签中设置的过渡时间就会失效。    </p><p>duration 设置的时长单位为毫秒。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16507054945056.jpg"></p><h3 id="transition-过渡的-mode-属性"><a href="#transition-过渡的-mode-属性" class="headerlink" title="transition 过渡的 mode 属性"></a>transition 过渡的 mode 属性</h3><p>点击按钮实现两个元素来回切换，需要设置一个 mode 属性，否则一个元素消失的同时，另外一个元素会进来，两个动画的执行没有先后顺序，整体的动画会看起来很丑。        </p><p>mode 有两个值，一个是 out-in，一个是 in-out，前者是上一个元素消失后，下一个元素才出来；后者是下一个元素进来之后，上一个元素才消失。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16507064244859.jpg"></p><p>上面两个 h2 元素切换的例子，也可以把两个 h2 元素替换为两个组件：  </p><p><strong>组件间的切换需要用到动态组件</strong>，使用 Vue 内置的 component 组件，is 绑定一个三元表达式。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16507081389316.jpg"></p><h3 id="apear-初次渲染"><a href="#apear-初次渲染" class="headerlink" title="apear 初次渲染"></a>apear 初次渲染</h3><p>默认情况下，初次渲染（刷新页面的时候）是不会有动画的，如果希望初次渲染也有动画，可以在 transition 组件中添加一个 appear 属性。   </p><p>这里的 appear 是 <code>:appear=&quot;true&quot;</code> 的缩写。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16507191568653.jpg"></p><h3 id="第三方动画库-animate-css"><a href="#第三方动画库-animate-css" class="headerlink" title="第三方动画库 animate.css"></a>第三方动画库 <code>animate.css</code></h3><p>跨平台：做了很多 CSS 的兼容。   </p><p>如何使用 Animate 库呢？   </p><ul><li>安装 <code>animate.css</code> 库    </li><li>导入 <code>animate.css</code> 库的样式    </li><li>使用 animation 动画或者 animate 提供的类   </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16507197233393.jpg"></p><p>安装动画库：  </p><p>打开终端，在项目根目录下输入</p><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> animate.css</code></pre><p>安装好之后，在入口文件 <code>main.js</code> 中导入 <code>animate.css</code>。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16570402403705.jpg"></p><p><code>animate.css</code> 库有两种用法：   </p><ul><li>在 v-enter-active 和 v-leave-active 中配置 animation 名称、时长和动画模式（帧动画）     </li><li>直接使用库定义好的 class         </li></ul><p>如果是第一种用法，在 <code>App.vue</code> 中给 transition 组件添加 name 属性，在样式部分配置 v-enter-active 和 v-leave-active，设置 animation 帧动画。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16570424603009.jpg"></p><p>帧动画的名称或效果，可从网站 <code>https://animate.style/</code> 查看，点击对应的动画名称，可以预览动画的效果。  </p><p>确认想要使用的效果，可以<strong>复制动画的名称</strong>，并在 <code>App.vue</code> 的样式，给帧动画设置动画时长和动画模式。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16570423814544.jpg"></p><p>第二种使用 <code>animate.css</code> 库的方法：直接使用动画库帮我们定义好的 class。     </p><p>通过这种方式使用 <code>animate.css</code> 库，我们不需要给 transition 组件添加 name 属性。   </p><p>点击动画名称右侧的「复制」按钮，可以复制动画对应的 class 类名。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16509009718186.jpg"></p><p>将 class 分别粘贴到 <code>enter-active-class</code> 和 <code>leave-active-class</code>，就可以应用动画了。  </p><p>不过每一个动画的前面都要加多一个 <code>animate__animated</code>，才能真正让动画生效。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16509010733571.jpg"></p><p>之所以每个类名前面要加上 <code>animate__animated</code>，是因为在 <code>animate.css</code> 库中，这个类名<strong>定义了动画的持续时间</strong>，有了时间，动画才能真正生效。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16570436479959.jpg"></p><p>如果想对 <code>animate.css</code> 库中的动画进行反转，可以在 <code>App.vue</code> 的样式部分，给动画的类名添加 animation-direction 属性，设置反转。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16570438163522.jpg"></p><p>如果同时存在自定义的 class，以及 name 定义的 class，那么<strong>自定义 class 的优先级是更高的</strong>。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16509013060383.jpg"></p><h3 id="认识-gsap-库"><a href="#认识-gsap-库" class="headerlink" title="认识 gsap 库"></a>认识 gsap 库</h3><p>gsap 是一个使用 JS 编写的动画库。   </p><p>之所以要使用 JS 动画库，是因为前面介绍的 CSS 动画库<strong>不够灵活</strong>，在涉及样式的值需要发生变化，或是比较复杂的动画时，CSS 动画库用起来就不够方便。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16509016069178.jpg"></p><p>安装 gsap 库的命令：   </p><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> gsap</code></pre><p>在 <code>App.vue</code> 的 script 标签中导入 gsap 库：   </p><pre><code class="hljs clean"><span class="hljs-keyword">import</span> gsap <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;gsap&#x27;</span>;</code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16516524871642.jpg"></p><p>transition 组件在帮助我们执行动画的时候，它其实会回调很多动画生命周期的钩子。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16509899632408.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16509912640720.jpg"></p><p>before-enter 相当于动画进入之前：v-enter-from<br>enter 相当于动画进入之时：v-enter-active<br>after-enter 相当于动画进入之后：v-enter-to   </p><p>before-leave 相当于离开之前：v-leave-from<br>leave：v-leave-active<br>after-leave：v-leave-to     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16570680847413.jpg"></p><p>在这些钩子中使用 gsap 库，gsap 库常用的两个方法——from 和 to。    </p><p>使用 gsap 库对应的 api：  </p><p>传入钩子 <code>enter()&#123;&#125;</code> 的 el，是 element 的缩写。   </p><p><code>gsap.from()</code> 需要传入两个参数，一个是 target，指定我们要把动画设置在哪个元素上；一个是对象。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16516527417648.jpg"></p><p>gsap 官网提供的 JS 和 CSS 对照表：  </p><p>左侧是 gsap 库中 JS 的写法，右侧是对应的 CSS 样式含义。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16571299889315.jpg"></p><p>在使用 js 动画的时候，一般会给组件添加 <code>:css=&quot;false&quot;</code>，让 Vue 跳过 CSS 的检测，让我们原先给组件添加的 CSS 动画失效。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16571303073283.jpg"></p><h3 id="小案例：gsap-实现数字滚动递增动画"><a href="#小案例：gsap-实现数字滚动递增动画" class="headerlink" title="小案例：gsap 实现数字滚动递增动画"></a>小案例：gsap 实现数字滚动递增动画</h3><p>这个动画，在很多后台管理系统中会用到。   </p><p>监听器 watch，用来监听 counter 的变化，当 counter 发生变化，showNumber 也会随之发生变化，不过因为我们给 showNumber 设置了过渡时间 duration，它会随着时间流逝一点点地变成和 counter 一样的值，这样就实现了数字滚动递增动画的效果。   </p><p>这里还有一个小细节，数字滚动变化的时候，它不是整数而是小数，为了得到整数，可以在后面加多 toFixed(0)，保证取整。    </p><p>注意：这里用到的计算属性并不是必须的。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16516539070525.jpg"></p><h3 id="列表的过渡"><a href="#列表的过渡" class="headerlink" title="列表的过渡"></a>列表的过渡</h3><p>使用 Vue 内置的 <code>&lt;transition-group&gt;</code> 组件。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16572149100850.jpg"></p><p>动画案例中讲到了一个类似算法的东西：如何实现在数组中随机插入一个数字？   </p><p>需要生成一个随机数，同时用到数据的 splice() 方法。     </p><p><code>Math.random()</code> 可以随机生成 [0,1) 区间的小数。    </p><p><code>Math.random()</code> 乘以数组的长度 length=10，可以得到 [0,10) 之间的随机数。  </p><p>再在最后<strong>向下取整</strong> <code>Math.floor(Math.radom() * this.number.length)</code>，可以得到 0 到 10 之间的整数，不包括 10，这些数字其实就对应数组的<strong>索引值</strong>，后面结合数组的 splice() 方法，在数组中随机的位置插入数字。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16573392061241.jpg"></p><p>插入的数字会从下而上，删除的数字会从上而下，与此同时，如果我们想让数字在（左右）移动时，也能有动画，该怎么做呢？   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16573397728519.jpg"></p><p>可以在样式中多增加一个 v-mode，过渡 transition 设置的是位移动画。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16573405656930.jpg"></p><p>当然，即便在样式中加上 v-move，在移除数字的时候，向左移动的数字还是没有动画的，这是因为被移除的数字，它是块级元素，在移除的过程中依旧会<strong>占据位置</strong>，导致右侧的数字想移动的时候被「挡」住了，只能等到数字移除后，一瞬间跳过去，就看不到我们想要的<strong>慢慢向左的移动动画</strong>。    </p><p>为了解决这个问题，我们可以额外给 v-leave-active 增加一个绝对定位，由于绝对定位的元素会脱离标准流，不会占据位置，这样就让能右侧的数字可以正常向左👈移动了。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16573403560090.jpg"></p><h3 id="打乱数字"><a href="#打乱数字" class="headerlink" title="打乱数字"></a>打乱数字</h3><p>给现有的动画案例，再添加一个额外的效果：<strong>打乱数组中所有元素的位置</strong>，也叫洗牌，英文是 shuffle。  </p><p>这需要用到一个第三方库 <strong>lodash</strong>，使用 npm 安装 lodash 库。   </p><pre><code class="hljs autohotkey">npm install lodash    ```    安装之后，在 js 部分导入 lodash 库：   </code></pre><p>import _ from ‘lodash’;   </p><pre><code>使用 _ 中的 shuffle() 方法，传入数组，将得到的值重新赋值给数组，就能打乱数组中元素的位置。   ![](https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16573414229513.jpg)### 列表的交错过渡动画案例![](https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16573464340722.jpg)当我们在 input 输入框中输入英文字母（关键词 keyword）时，下面的无序列表只显示包含英文字母的文本。 为实现过滤的效果，我们要用到 filter 高阶函数。 ![](https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16574475189848.jpg)其中的 indexOf() 可以返回我们输入的英文字母在字符串中首次出现的位置。  ![](https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16574473537414.jpg)这个案例中，制作动画用到了生命周期钩子，`beforeEnter() &#123;&#125;` 只需要传入 el 参数，不像 enter 和 leave 钩子需要传入 done 参数。     ![](https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/16/16574481638520.jpg)</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>Vue</tag>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何将视频压缩到指定的大小？</title>
    <link href="/2022/07/09/2022-7-9-videocompress/"/>
    <url>/2022/07/09/2022-7-9-videocompress/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「<a href="https://mp.weixin.qq.com/s/WUsSfnHuVvT2SWcso31qlQ">效率工具指南</a>」<br>文/彭宏豪       </p><p>Hello 各位好，我是小豪。   </p><p>今天这篇文章，想来聊一下视频压缩这个话题。</p><p>如果只是单纯选择一款视频压缩工具，可以选择的压缩工具非常多：  </p><ul><li>Windows：小丸工具箱</li><li>Mac：Permute（付费软件，与 Mac 上非常出名的下载工具 Downie 来自一家公司）      </li><li>Window/Mac：Handbrake、<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649919194&idx=1&sn=d51a53be3d5bdcb2f1c520800d55810e&chksm=83a88af7b4df03e137de5e218348c7f0cf34408d502605574b7ef859b28e4530b4c0dc8d37c4&token=658973878&lang=zh_CN#rd">Quick Cut</a>      </li></ul><p>关于 Quick Cut 的详细介绍，可以查看我之前发布在 B 站上的一期视频 </p><p><a href="https://www.bilibili.com/video/BV1G3411a7RN">做视频必备！多功能工具箱，解决90%视频剪辑难题【Quick Cut】</a>     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/09/qrcodea--a1-1.jpg" alt="QRcode_A — a1 -1-"></p><p>除了视频压缩工具的选择，有时还会遇到一些比较小众的需求，例如将视频压缩到不超过 20 MB。  </p><p>当然，对于不同的人或不同的场景，这里的 20 MB 可能要换成 10 MB，或者换成 50 MB，将不同的需求进行一般化，就得到了今天这篇文章的主题：  </p><p><strong>如何将视频压缩到指定的体积大小？</strong>    </p><p>对于这个问题，最简单的方法，就是找一个在开始压缩视频之前，可以<strong>提前得知</strong>压缩后视频体积大小的压缩工具。  </p><p>这里想推荐一个由国内厂商开发的多功能视频处理工具——<strong>万兴优转</strong>。    </p><p>这个工具用起来也非常简单：  </p><p>点击左侧栏的「视频压缩」，将想要压缩的视频拖拽到软件窗口中，点击右侧的「设置」按钮，在弹出的面板，拖动中间可自由滑动的图标，就能自定义视频的压缩强度，随之你就能在「文件大小」直接地看到压缩后的视频体积。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/09/16573061654679.jpg"></p><p>压缩后的视频体积大小之所以有个范围，而不是某个确定的值，是因为软件默认选择了「<strong>可变比特率</strong>」，这里的比特率其实就是通常所说的「视频码率」。  </p><p>可变比特率的优点在于，它会根据视频帧画面的复杂程度，比较智能地匹配相应的码率，直白地理解就是：当视频画面比较复杂时，就会分配多一些的码率，而对于帧画面比较简单的情况，相应地码率就会降低。</p><p>因此，选择了可变比特率的情况下，在软件还没正式开始压缩前，只能根据比特率的上限和下限，得到一个大概的视频体积，就呈现为我们在下图看到的 48.4 MB 和 96.9 MB 这两个临界值。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/09/16573064077783.jpg"></p><p><strong>可变比特率或者可变码率，我觉得叫做「动态码率」可能更直观，也更好理解。</strong>    </p><p>而如果我们把软件中的「可变比特率」更改为「恒定比特率」，压缩后的视频预估体积就是确定的，不存在前面有一个范围值的情况。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/09/16573068367798.jpg"></p><p>当你选择了恒定比特率，就意味着压缩后每个帧画面的比特率都是一致的，这样有可能会出现一种情况：  </p><p>当视频中含有一些比较复杂的画面，例如烟雾、灰尘、粒子动效等，画面的画质表现就会非常差。   </p><p>好的，到这里就讲请了「如何将视频压缩到指定大小」的问题。   </p><p>更多关于视频码率、视频压缩、视频封装格式等知识，如果你感兴趣的话，可以前往去 B 站查看「影视飓风」发布的相关视频。   </p><p>需要说明的是，万兴优转虽然是一款可以免费下载的软件，但其中的不少功能也会存在限制，需要开通会员后用起来才比较舒服。  </p><p>由于我已经有了会员，就没有去对比免费版与付费版的差别，有需要的朋友自行比对吧。   </p><p>最后的最后，如果你不想花钱购买这款软件的会员，也还有一个方法，可以提前预估视频压缩后的体积大小，具体是如何做到的，我的一篇老文章里写过了：   </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649914213&idx=1&sn=06869840e55c9d145f71773b35a20813&chksm=83a87f48b4dff65eb4e24ef5f00fa8e76f3406bc2ec583e343358ca24f2168d830f02531747d&token=658973878&lang=zh_CN#rd">高效批量压缩图片，Mark住这两个神器就够了。</a>       </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>效率工具</tag>
      
      <tag>视频压缩</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何在Mac上快速切换窗口？</title>
    <link href="/2022/06/28/2022-6-28-mac/"/>
    <url>/2022/06/28/2022-6-28-mac/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于公众号「<a href="https://mp.weixin.qq.com/s/U46M3GDfO3kVBDHGycbc8w">效率工具指南</a>」<br>文/彭宏豪  </p><p>Hello 各位好，我是小豪。   </p><p>从 2020 年用 Mac 电脑以来，至今唯一还不习惯的是 Mac 上的窗口切换。  </p><p>当一个应用开了多个窗口之后，切换起来不是很习惯，你能想象其中一种切换方式是：右击 Dock 栏的软件图标，在弹出的菜单，才能看到应用打开的所有窗口。  </p><p>这种窗口切换，对比 Windows 上的「鼠标悬停在任务栏图标上方」，就能显示所有窗口，我还是更喜欢后者。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/28/16563456961563.jpg"></p><p>因此为了把 Mac 上的这种切换方式，改回我更喜欢的方式，我在 Mac 上安装了一个第三方工具——<strong>DockMate</strong>。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/28/16563461850799.jpg"></p><p>安装了 DockMate 之后，当我再次把鼠标放在 Dock 栏的图标上方，熟悉的感觉又回来了，这次不需要啥动作，鼠标悬停在图标上方，就会显示打开的所有窗口的缩略图。           </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/28/16563465284421.jpg"></p><p>DockMate 是一款付费软件，价格还不是很便宜，有同样需求的朋友，可以前往下方的网站购买：   </p><p><a href="https://www.macenhance.com/dockmate#">https://www.macenhance.com/dockmate#</a>!     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/28/16563469038078.jpg"></p><p>除了 DockMate，之前还介绍过 Mac 上另外一款增强窗口切换体验的应用——<strong>AltTab</strong>，使用快捷键 Option + Tab 可以呼出 AltTab 切换软件窗口的面板，相比 Mac 原生的窗口切换，这款软件提供了窗口预览，视觉效果也比较像 Windows 系统的设计。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/28/16304971627851.jpg"></p><p>AltTab 是一款免费的软件，可从下方的官网链接下载：  </p><p><a href="https://alt-tab-macos.netlify.app/">https://alt-tab-macos.netlify.app/</a>   </p><p>以上，希望有帮助。   </p><p>如果对你也有帮助的话，别忘了点击下方的<strong>点赞、在看</strong>和<strong>分享</strong>按钮，<strong>你的小小支持，是我持续更新的最大动力</strong>，我们下次再见。    </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>macOS</tag>
      
      <tag>效率工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序开发学习笔记 - 以网易云音乐小程序项目为例</title>
    <link href="/2022/06/26/2022-6-26-miniprogram/"/>
    <url>/2022/06/26/2022-6-26-miniprogram/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p><em>注：笔记来自 coderwhy 老师的视频教程<a href="https://ke.qq.com/course/4162214#term_id=104318954">小程序音乐项目开发实战-大神coderwhy新课</a></em>    </p><p><em>笔记编辑者：彭宏豪</em>    </p><h2 id="项目成果展示"><a href="#项目成果展示" class="headerlink" title="项目成果展示"></a>项目成果展示</h2><p>最后制作出来的音乐小程序，可以查看我发布在 B 站上的视频：<a href="https://www.bilibili.com/video/BV1CY411N7JJ">学着做了一个音乐小程序｜前端开发【效率工具指南】</a>    </p><h2 id="项目亮点"><a href="#项目亮点" class="headerlink" title="项目亮点"></a>项目亮点</h2><ul><li>轮播图实现在不同尺寸设备上的适配      </li><li>音乐播放页面在不同尺寸设备上的适配     </li><li>小程序插槽无法像 Vue 一样设置默认值，可以使用 CSS 的条件判断巧妙地实现    </li><li>数据多页面共享和状态管理（难点）      </li><li>防抖和节流（性能优化，难点，JS 高级，课程中没有详细展开讲解）      </li><li>第三方 UI 组件库 Vant 的使用    </li><li>毛玻璃效果的制作    </li><li>事件冒泡和阻止冒泡      </li><li>项目常量数据的管理    </li><li>代码分包       </li><li>📦「封装」和「抽取」思想      </li></ul><h2 id="项目中用到的工具"><a href="#项目中用到的工具" class="headerlink" title="项目中用到的工具"></a>项目中用到的工具</h2><ul><li><p>代码编辑器：微信官方提供的「微信开发者工具」     </p></li><li><p>浏览器插件：FeHelper   </p></li></ul><p>FeHelper 可以对服务器请求返回的 JSON 数据进行美化（格式化），美化后的效果，就和我们在「微信开发者工具」控制台 <code>console.log</code> 打印的内容外观一致了，看起来更舒服。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/02/16566068661368.jpg"></p><p>顺便来看一下安装 FeHelper 插件之前，服务器返回的 JSON 数据的样式，作为对比：     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/02/16566070159756.jpg"></p><ul><li>正则表达式：正则表达式是字符串的匹配利器，在项目「解析歌词」的部分会用到。   </li></ul><h2 id="各大厂商支持小程序的原因"><a href="#各大厂商支持小程序的原因" class="headerlink" title="各大厂商支持小程序的原因"></a>各大厂商支持小程序的原因</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-3.png" alt="image -3-"></p><h2 id="小程序是由谁来开发？"><a href="#小程序是由谁来开发？" class="headerlink" title="小程序是由谁来开发？"></a>小程序是由谁来开发？</h2><p>小程序的定位：介于原生 App 和手机 H5 页面之间的一个产品定位。<br>小程序的技术特点，决定了由前端工程师来开发</p><h2 id="开发小程序的技术选型"><a href="#开发小程序的技术选型" class="headerlink" title="开发小程序的技术选型"></a>开发小程序的技术选型</h2><ul><li>原生小程序开发</li><li>小程序框架<ul><li>mpvue</li><li>wepy</li><li>两个跨端方案开发小程序<ul><li>uni-app：基于 Vue 开发的框架</li><li>taro：由京东团队开发维护</li></ul></li></ul></li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-4.png" alt="image -4-"></p><p>下图的 RN 是 React Native 的缩写，开发好之后可以发布为 iOS 和 Android 应用</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-5.png" alt="image -5-"></p><p>uni-app 和 taro 开发原生 App：</p><ul><li>无论是适配原生小程序还是原生 App，框架都有较多的适配问题，所以还是需要多了解原生的开发知识</li><li>产品使用体验整体相较于原生 App 差很多</li><li>也有其他的技术选型来开发原生 App：ReactNative、<strong>Flutter（体验也比较好）</strong></li></ul><p>作为前端工程师，不建议大家把过多精力放在原生开发上面，目前基本只有大厂才会开发原生 App，而很多小公司会开发小程序或 H5 页面。 </p><h2 id="小程序开发的预备知识"><a href="#小程序开发的预备知识" class="headerlink" title="小程序开发的预备知识"></a>小程序开发的预备知识</h2><p>小程序的核心技术主要是 3 个：</p><ul><li>页面布局：WXML</li><li>页面样式：WXSS，几乎就是 CSS（某些不支持，某些进行了增强，但基本是一致的）</li><li>页面脚本：JS + WXS(WeixinScript)</li></ul><p>如果之前已经掌握了 Vue 或者 React 等框架开发，那么学习小程序是更简单的，因为里面的核心思想都是一致的（比如<strong>组件化开发、数据响应式、mustache 语法、事件绑定</strong>等）</p><h2 id="微信小程序的双线程架构"><a href="#微信小程序的双线程架构" class="headerlink" title="微信小程序的双线程架构"></a>微信小程序的双线程架构</h2><ul><li>视图线程</li><li>逻辑线程</li></ul><p>这两个线程通过底层的 WeixinJSBridge 进行通讯</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-6.png" alt="image -6-"></p><h2 id="注册账号-申请-AppID"><a href="#注册账号-申请-AppID" class="headerlink" title="注册账号 - 申请 AppID"></a>注册账号 - 申请 AppID</h2><p>每个小程序都需要有一个唯一的 ID<br>前往 mp.weixin.qq.com 申请</p><h2 id="开发微信小程序的工具"><a href="#开发微信小程序的工具" class="headerlink" title="开发微信小程序的工具"></a>开发微信小程序的工具</h2><ul><li>微信开发者工具：官方提供的工具，必须下载、安装</li><li>VS Code</li></ul><h3 id="使用-VS-Code-开发"><a href="#使用-VS-Code-开发" class="headerlink" title="使用 VS Code 开发"></a>使用 VS Code 开发</h3><p>推荐一些 VS Code 插件：</p><ul><li>WXML - Language Service</li><li>小程序开发助手</li><li>wechat-snippet</li></ul><p>注：这些插件都是差不多的，不需要全部安装，老师推荐安装第一个插件就够了</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-7.png" alt="image -7-"></p><h2 id="小程序项目结构"><a href="#小程序项目结构" class="headerlink" title="小程序项目结构"></a>小程序项目结构</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-8.png" alt="image -8-"></p><h2 id="去除控制台的警告⚠️信息"><a href="#去除控制台的警告⚠️信息" class="headerlink" title="去除控制台的警告⚠️信息"></a>去除控制台的警告⚠️信息</h2><p>打开项目的 <code>project.config.json</code> 文件，在其中增加一个配置信息 <code>&quot;checkSiteMap&quot;: flase</code>，就可以去掉控制台的警告信息了。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-9.png" alt="image -9-"></p><h2 id="微信小程序基础库"><a href="#微信小程序基础库" class="headerlink" title="微信小程序基础库"></a>微信小程序基础库</h2><p>我们编写的代码，其实是运行在微信小程序 SDK 之上的，SDK 是 Soft Development Kit 的缩写，即<strong>软件开发工具包</strong>，SDK 是集成在微信 App 中的。</p><p>这里提到的 SDK 其实就是微信小程序的基础库。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-10.png" alt="image -10-"></p><p>基础库是会随着时间不断更新的，因此会衍生出多个版本：</p><ul><li>增加功能</li><li>修复 bug</li></ul><p>微信版本不同，其中包含的微信小程序基础库版本是不同的。</p><p>灰度发布：也叫金丝雀发布。<br>全量发布</p><h2 id="向服务器请求数据"><a href="#向服务器请求数据" class="headerlink" title="向服务器请求数据"></a>向服务器请求数据</h2><p>await 必须放到 async 异步函数里面。<br>这种方式不是在所有地方都可以使用的，在某些地方使用可能会影响性能。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-11.png" alt="image -11-"></p><h2 id="小程序的视频无法播放"><a href="#小程序的视频无法播放" class="headerlink" title="小程序的视频无法播放"></a>小程序的视频无法播放</h2><p>遇到小程序中的视频无法播放，可能是因为向服务器请求数据时验证不通过，我们需要在 video 组件中增加一个推荐策略的属性 <code>referrer-policy</code>，这个属性的默认值是 no-referrer，我们要把它设置为 origin。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-12.png" alt="image -12-"></p><h2 id="对-wxml-的数据进行格式化"><a href="#对-wxml-的数据进行格式化" class="headerlink" title="对 wxml 的数据进行格式化"></a>对 wxml 的数据进行格式化</h2><p>wxml 页面从服务器请求得到的视频播放量、时间（单位为毫秒 ms），转换为 XX 万播放量、几分几秒，不能直接在 wxml 的 mustache 语法使用过滤器 filter。</p><p>对 wxml 的数据进行格式化，需要用到 wxs，wxs 本质上也是 js，只不过不支持 ES6 语法，只能用 ES5。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-13.png" alt="image -13-"></p><p>在 utils 文件中创建一个 <code>format.wxs</code> 文件，里面定义了一个函数 formatCount，用来转换视频播放量。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-14.png" alt="image -14-"></p><p>接着在 wxml 文件中使用 wxs 标签引用 wxs 文件，wxs 标签需要添加一个 module 属性，属性值是可以自定义的，可以是 tools，也可以是 format。<br>在需要调用 formatCount 函数的位置，使用 module 属性值中的方法。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-15.png" alt="image -15-"></p><h2 id="将-wxml-中的组件抽取成一个单独的组件"><a href="#将-wxml-中的组件抽取成一个单独的组件" class="headerlink" title="将 wxml 中的组件抽取成一个单独的组件"></a>将 wxml 中的组件抽取成一个单独的组件</h2><p>小程序中创建的组件，同样需要包含 4 个文件——js、json、wxml、wxss</p><p>创建组件时，右击选择「新建 Component」，会一次性创建 4 个文件。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-37.png" alt="image -37-"></p><p>组件的 <code>index.js</code> 文件 Component 包含 properties 和 data，这两者的区别在于：</p><p>data 和页面一样，是用来存放组件内部的数据的；properties 用来<strong>存放外界传过来的数据</strong>，譬如服务器请求得到的数据，</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-38.png" alt="image -38-"></p><p>properties 会接收外部传入的 item 对象。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-39.png" alt="image -39-"></p><h2 id="在小程序中使用自定义的组件"><a href="#在小程序中使用自定义的组件" class="headerlink" title="在小程序中使用自定义的组件"></a>在小程序中使用自定义的组件</h2><p>在小程序页面使用自定义的组件时，需要先对组件进行注册，来到小程序页面的 json 文件。</p><p>注册组件的写法：<br><code>&quot;组件名&quot;: &quot;组件的路径&quot;</code><br>组件路径最末尾不要加后缀。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-40.png" alt="image -40-"></p><p>在 wxml 页面使用我们自定义的组件   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-41.png" alt="image -41-"></p><h2 id="小程序页面上拉加载更多数据"><a href="#小程序页面上拉加载更多数据" class="headerlink" title="小程序页面上拉加载更多数据"></a>小程序页面上拉加载更多数据</h2><p>在页面的 js 文件中，使用生命周期 <code>onReachBottom</code> 监听。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-42.png" alt="image -42-"></p><p>上拉加载数据时，可以在导航栏增加一点细节，譬如增加「加载数据」时的转圈动画<br>需要用到 <code>wx.showNavigationBarLoading()</code><br>数据完成加载后，要把加载动画隐藏，否则加载动画会一直显示在顶部的导航栏，调用 <code>wx.hideNavigationBarLoading()</code>   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-43.png" alt="image -43-"></p><h2 id="小程序页面下拉刷新"><a href="#小程序页面下拉刷新" class="headerlink" title="小程序页面下拉刷新"></a>小程序页面下拉刷新</h2><p>小程序页面默认情况下是不允许下拉刷新的，需要在页面的 json 文件中，将 enablePullDownRefresh 配置为 true，才可以实现下拉刷新。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-44.png" alt="image -44-"></p><p>同时，要在 json 中配置 <code>backgroundTextStyle</code> ，将默认的 light 更改为 dark，在下拉刷新时才能看见 3 个小点点。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-45.png" alt="image -45-"></p><p>当偏移量为 0 时，停止下拉刷新的动效，让动效尽快结束。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-46.png" alt="image -46-"></p><h2 id="点击组件跳转到新的页面"><a href="#点击组件跳转到新的页面" class="headerlink" title="点击组件跳转到新的页面"></a>点击组件跳转到新的页面</h2><p>新的需求：点击视频页面的小卡片（组件/item），进入视频详情页。</p><p>这时我们就要监听 item 的点击，有两种方式：</p><ul><li>组件内部监听点击</li><li>直接监听组件的点击（组件可以直接绑定事件的）</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-47.png" alt="image -47-"></p><h3 id="组件内部监听点击事件"><a href="#组件内部监听点击事件" class="headerlink" title="组件内部监听点击事件"></a>组件内部监听点击事件</h3><p>来到自定义组件的 wxml 页面，给类名为 item 的 view 组件添加 bindtap，监听点击事件。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-48.png" alt="image -48-"></p><h3 id="直接监听组件的点击"><a href="#直接监听组件的点击" class="headerlink" title="直接监听组件的点击"></a>直接监听组件的点击</h3><p>在我们自定义的组件 <code>video-item-v1</code> 添加 bindtap 属性，可以直接监听组件的点击。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-49.png" alt="image -49-"></p><p>我们点击不同的组件，会跳转到不同的详情页，那我们如何知道具体是点击了哪个页面呢？<br>——这里需要在 wxml 中给组件添加一个额外的属性 data-item。<br>之后在事件处理时，我们就可以通过 data-item 绑定的 item，拿到所点击的组件的 id，就可以知道用户到底是点击了哪一个组件。<br>这种拿到 id 的方法，并不是小程序独有的，而是 html 提供的能力。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-50.png" alt="image -50-"></p><h2 id="在小程序引入第三方-UI-库-Vant"><a href="#在小程序引入第三方-UI-库-Vant" class="headerlink" title="在小程序引入第三方 UI 库 Vant"></a>在小程序引入第三方 UI 库 Vant</h2><p>进入项目所在的路径，在终端输入 <code>npm init -y</code> 生成 <code>package.json</code> 文件。<br>如果项目中包含了中文名称的文件夹，使用上面的命令会无法生成 json 文件，需要使用命令 <code>npm init</code> 。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-51.png" alt="image -51-"></p><p>通过 npm 安装 Vant：</p><pre><code class="hljs bash">npm install @vant/weapp</code></pre><p>安装之后，项目文件夹会多出一个 <code>node_modules</code> 文件夹，里面就包含了我们刚安装的 Vant 库。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-52.png" alt="image -52-"></p><p><code>node_modules</code> 中的 Vant 库在小程序中无法直接使用，还需要经过构建 npm 的环节，构建之后，项目路径会生成一个新的文件夹 <code>miniprogram_npm</code> 。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-53.png" alt="image -53-"></p><p>完成构建之后，就可以开始使用 Vant 库了。<br>在想要使用 Vant 库的页面的 json 文件中，注册需要用到的组件，譬如其中的搜索框组件 <code>van-search</code>。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-54.png" alt="image -54-"></p><p>接着在 wxml 文件中使用 <code>van-search</code> 组件，编译之后就能看到搜索框了。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-55.png" alt="image -55-"></p><h2 id="小程序轮播图组件"><a href="#小程序轮播图组件" class="headerlink" title="小程序轮播图组件"></a>小程序轮播图组件</h2><p>小程序轮播图组件 swiper 默认的高度为 150px。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-56.png" alt="image -56-"></p><p>换到 iPhone5 小尺寸的手机上，轮播图组件高度依旧为 150px，原本位于图片上方的指示点就会显示在图片下方，看起来非常丑陋。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-57.png" alt="image -57-"></p><p>解决适配的问题，稍微有些麻烦。<br>解决的方法：轮播图组件的高度应该和图片的高度是一致的。<br>问题是：如何获取图片的高度（<strong>如何获取一张网络请求得到的图片的高度</strong>）。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-58.png" alt="image -58-"></p><p>这里需要注意的是，只有当图片完成加载，我们才能拿到网络图片的高度。</p><p>小程序的图片组件 image 有一个事件监听 <code>bindload</code>，可以在图片完成加载时，自动触发事件。</p><p>bindload 绑定了 handleSwiperImageLoaded 后，拿到的是图片原始的宽度和高度。</p><p>但我们这里想要的是 image 组件的高度，问题又转变成了：如何获取 image 组件的高度？<br>——需要用到小程序的 API <code>createSelectorQuery</code></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-59.png" alt="image -59-"></p><h2 id="请求次数过多的处理方法"><a href="#请求次数过多的处理方法" class="headerlink" title="请求次数过多的处理方法"></a>请求次数过多的处理方法</h2><p>请求次数过多，会造成性能的负担，这里有两种可供选择的方法：</p><ul><li>防抖</li><li>节流</li></ul><h2 id="setData-是同步的还是异步的？"><a href="#setData-是同步的还是异步的？" class="headerlink" title="setData 是同步的还是异步的？"></a>setData 是同步的还是异步的？</h2><p>在小程序的 js 文件中，我们经常会用到 setData 来给 data 对象中的变量设置值。</p><pre><code class="hljs javascript">data: &#123;  banners: []&#125;<span class="hljs-built_in">this</span>.setData(&#123; <span class="hljs-attr">banners</span>: res.banners &#125;)<span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.data.banners)</code></pre><p>如果 setData 是同步的，setData 设置了 banner 的值，下面的打印语句可以拿到最新设置的 banners 的值。<br>如果 setData 是异步的，setData 可能还没执行完设置值的语句，下面的打印语句就开始运行了，因为是<strong>异步的，setData 没执行完，并不会阻塞后面的打印语句</strong>，因此打印语句不一定能拿到最新设置的 banners 的值。</p><p>其实，setData 在设置 data 数据时，是同步的。<br>而通过最新的 data 数据对 wxml 进行渲染，渲染的过程 setData 是异步的。</p><p>setData 在设置 data 数据时，之所以是同步的，可能是为了方便我们在第 7 行打印语句中拿到最新设置的 banners 值。</p><h2 id="为轮播图组件设置圆角"><a href="#为轮播图组件设置圆角" class="headerlink" title="为轮播图组件设置圆角"></a>为轮播图组件设置圆角</h2><p>设置圆角，需要用到 wxss 中的 <code>border-radius</code>，但这个属性设置的圆角在某些手机系统上不起作用，是因为手机系统使用 web-view 来渲染类似 html 的页面时，会存在适配的问题（web-view 的 bug）。</p><p>解决这个 bug 的方法，添加额外的样式 transform</p><pre><code class="hljs css"><span class="hljs-selector-class">.banner</span> &#123;  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10</span>rpx;  <span class="hljs-attribute">overflow</span>: hidden;  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">0</span>);  &#125;</code></pre><h2 id="区域标题自定义组件-area-header"><a href="#区域标题自定义组件-area-header" class="headerlink" title="区域标题自定义组件 area-header"></a>区域标题自定义组件 area-header</h2><p>自定义组件 <code>area-header</code> 配置好了左侧 title 的默认值，我们可以在使用的时候，为 title 设置新的值，就可以替换到默认的值。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-60.png" alt="image -60-"></p><h2 id="小程序插槽"><a href="#小程序插槽" class="headerlink" title="小程序插槽"></a>小程序插槽</h2><p>为什么要使用插槽？</p><p>我们封装的区域标题组件，右侧的内容，在不同的场景下，显示的内容是不一样的（内容会动态变化的），如果想要让封装的组件更加灵活，就需要用到插槽。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-61.png" alt="image -61-"></p><p>不像 Vue，<strong>微信小程序无法给插槽 slot 设置默认值</strong>，但还是有相应的解决方法的，主要有两种：  </p><ul><li>js</li><li>css：通过 CSS 伪类和连接器来解决</li></ul><p>我们在封装的组件 area-header 中预留了插槽的位置，如何实现 <strong>插槽默认值</strong> 和 <strong>在使用组件时往插槽插入内容</strong> 的<strong>互斥显示</strong>呢？</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-62.png" alt="image -62-"></p><p>下面介绍基于 css 样式来解决这个问题的方法：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-63.png" alt="image -63-"></p><p>使用自定义组件 area-header，不往插槽中插入内容时，就会显示插槽的默认值 <code>更多 &gt;</code>。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-64.png" alt="image -64-"></p><h2 id="在小程序中使用多个插槽"><a href="#在小程序中使用多个插槽" class="headerlink" title="在小程序中使用多个插槽"></a>在小程序中使用多个插槽</h2><p>在一个小程序页面中使用多个插槽，可以像在 Vue 里一样，使用具名插槽，给每个插槽 slot 添加一个 name 属性，对插槽进行区分。</p><p>同时，<strong>当你在一个页面中使用多个插槽，需要在页面的 js 文件额外配置一个 options 字段</strong>，将 <code>multipleSlots</code>配置为 true。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-65.png" alt="image -65-"></p><h2 id="小程序多页面的状态管理"><a href="#小程序多页面的状态管理" class="headerlink" title="小程序多页面的状态管理"></a>小程序多页面的状态管理</h2><p>学习这个知识，是为了实现数据在多页面间共享（即多个页面会用到一份数据）的功能。</p><p>页面间的通讯包含两部分：</p><ul><li><strong>跨页面之间事件的传递</strong>：页面发出一个事件 event，其他的页面会进行监听。现在有很多的库来帮我们实现跨页面之间事件的传递，例如 mitt，mitt 库实际上就是<strong>事件总线</strong>。事件总线的库一般只负责帮助我们传递事件，并<strong>不会管理状态</strong>。</li><li>跨页面之间数据的共享和响应（<strong>状态共享</strong>）：页面会共享出一些数据（产生一些共享数据），其他页面可以使用这些数据，并且当共享的数据发生变化时，其他用到了共享数据的页面也会做出响应，自动更新数据。</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-66.png" alt="image -66-"></p><p>在不同的框架中，采用的不同方案来完成<strong>数据的共享</strong>：</p><ul><li>Vue 框架：Vuex（即 Vue 路由）</li><li>React：redux、react-redux</li><li>微信小程序<ul><li>方案一：把需要共享的数据放到全局的 <code>app.js</code> 中，在文件里面增加一个 globalData 的属性</li><li>其他方案：官方目前没有提供更好的方案；GitHub 有一些解决方案，但不够好。</li><li>更多方案：使用 coderwhy 老师写的库 <code>hy-event-store</code>，一个基于事件的全局状态管理工具，不仅可以在小程序中使用，也可以在 Vue、React 中使用。项目地址：<a href="https://github.com/coderwhy/hy-event-store">https://github.com/coderwhy/hy-event-store</a>    </li></ul></li></ul><p><strong>方案一</strong></p><p>app.js -&gt; globalData: { name: phh }<br>其他页面想使用共享的数据 -&gt; getApp().globalData.name 就可以拿到共享的数据<br>这种方案有一个致命的缺点：<strong>数据不是响应式的</strong>（不能根据最新的数据，去渲染页面）</p><p>方案一实际上只能共享数据，无法做到响应式。</p><h2 id="小程序状态管理第三方库-hy-event-store"><a href="#小程序状态管理第三方库-hy-event-store" class="headerlink" title="小程序状态管理第三方库 hy-event-store"></a>小程序状态管理第三方库 hy-event-store</h2><p>安装 hy-event-store 库：</p><pre><code class="hljs bash">npm install hy-event-store</code></pre><p>当我们用 npm 安装了新的包之后，需要构建一下 npm。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-67.png" alt="image -67-"></p><p>在根目录下创建一个文件夹 store，用来存放共享的数据。其中的 <code>index.js</code> 作为统一导出的出口。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-68.png" alt="image -68-"></p><p>在需要用到共享数据的页面的 js 文件，在 onLoad 生命周期<strong>发起共享数据的请求</strong>和<strong>从 store 获取共享数据</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-69.png" alt="image -69-"></p><h2 id="推荐歌曲列表自定义组件-song-item-v1"><a href="#推荐歌曲列表自定义组件-song-item-v1" class="headerlink" title="推荐歌曲列表自定义组件 song-item-v1"></a>推荐歌曲列表自定义组件 song-item-v1</h2><p>自定义组件 song-item-v1 用到了 mustache 语法，需要将页面请求得到的数据，通过设置的 item 属性传递给自定义组件。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-70.png" alt="image -70-"></p><p>自定义组件的 js 文件中的 properties 属性，接收数据。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-71.png" alt="image -71-"></p><h2 id="全局共享数据"><a href="#全局共享数据" class="headerlink" title="全局共享数据"></a>全局共享数据</h2><p>我们在做项目的过程当中，可能会在不同页面中用到手机的屏幕宽度，出于这个考虑，我们可以把这个数据放在 <code>app.js</code> 中。 </p><p><code>wx.getSystemInfoSync</code>API 可以拿到当前手机设备的信息，例如手机屏幕的宽度和高度。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-72.png" alt="image -72-"></p><p>把获取到的手机屏幕宽度和高度数据，存入全局对象 <code>globalData</code> 中。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-73.png" alt="image -73-"></p><p>如何在组件中使用全局共享的数据？</p><p>两个步骤：</p><ul><li>使用 getApp() 方法获取全局对象 app；</li><li>在 data 中使用全局对象的方法，就能得到我们刚刚获取的 screenWidth</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-74.png" alt="image -74-"></p><p>拿到屏幕宽度后，我们可以给 scroll-view 组件设置行内样式 <code>style=&quot;width: &#123;&#123;screenWidth&#125;&#125;px&quot;</code>，这样 scroll-view 组件的宽度就和手机屏幕宽度是一致的。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-75.png" alt="image -75-"></p><p>同样是让 scroll-view 组件宽度等于屏幕宽度，还有另外一种<strong>更为简单的方法</strong>：</p><p>把 scroll-view 组件的宽度设置为 <strong>100 vw</strong>，等于视口的宽度，即整个屏幕的宽度。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-76.png" alt="image -76-"></p><p>另外一个全局共享数据的例子：</p><p>我们需要根据不同的设备，动态地获取页面顶部状态栏的高度，由于这个动态获取状态栏高度的需求，可能在多个页面中都是会用到的，我们可以把它放到 <code>app.js</code> 文件中。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-77.png" alt="image -77-"></p><h2 id="编程语言-数据处理"><a href="#编程语言-数据处理" class="headerlink" title="编程语言 - 数据处理"></a>编程语言 - 数据处理</h2><p>coderwhy 老师在上课时候讲到一句名言：所有的编程语言最终落实到的都是对数据的处理。<br>我们可以怎样地把数据组织得更合适一点<br>之后在另外一个地方就可以更加方便地使用这些数据</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-78.png" alt="image -78-"></p><p>数据结构：告诉你应该怎样更高效地组织数据<br>算法：在组织数据的过程当中，如何可以进行优化（优化获取或存储）</p><h2 id="单行文本溢出隐藏显示-CSS"><a href="#单行文本溢出隐藏显示-CSS" class="headerlink" title="单行文本溢出隐藏显示 - CSS"></a>单行文本溢出隐藏显示 - CSS</h2><p>溢出隐藏显示为省略号</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-79.png" alt="image -79-"></p><h2 id="页面跳转时携带参数"><a href="#页面跳转时携带参数" class="headerlink" title="页面跳转时携带参数"></a>页面跳转时携带参数</h2><p>默认情况下，页面跳转 url 链接的写法为<br><code>url: &#39;/pages/detail-songs/index&#39;,</code></p><p>如果跳转页面时需要携带参数，url 原本的单引号就要更改为 ``，且需要在 index 末尾增加参数  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-80.png" alt="image -80-"></p><p>在跳转的目标页面，我们可以在页面的 js 文件的 onLoad 生命周期，通过 <code>function(options) &#123;&#125;</code> 拿到携带过来的参数。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-81.png" alt="image -81-"></p><h2 id="CSS-制作毛玻璃效果"><a href="#CSS-制作毛玻璃效果" class="headerlink" title="CSS 制作毛玻璃效果"></a>CSS 制作毛玻璃效果</h2><p>毛玻璃效果由两个图层组成，一个是最下方的图片，一个是上层的半透明色块，给半透明色块加上模糊滤镜，就能得到想要的毛玻璃效果。<br>两个图层都采取<strong>相对定位</strong>，<code>z-index</code> 的值为 -1，半透明色块添加 <code>backdrop-filter: blur(5px)</code>，就能加上毛玻璃效果。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-82.png" alt="image -82-"></p><h2 id="搜索框的防抖操作"><a href="#搜索框的防抖操作" class="headerlink" title="搜索框的防抖操作"></a>搜索框的防抖操作</h2><p>在前端开发中涉及到搜索功能时，通常都要用到防抖操作。主要是对发送网络请求的函数进行防抖操作，减少对服务器的频繁请求。</p><p>防抖函数的文件一般命名为 <code>debounce.js</code></p><h2 id="搜索框监听用户按下了回车键-Enter"><a href="#搜索框监听用户按下了回车键-Enter" class="headerlink" title="搜索框监听用户按下了回车键 Enter"></a>搜索框监听用户按下了回车键 Enter</h2><p>在搜索框组件 <code>van-search</code> 绑定一个事件 <code>bind:search</code>，可以用来监听用户按下了回车键 Enter。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-83.png" alt="image -83-"></p><h2 id="搜索框固定定位"><a href="#搜索框固定定位" class="headerlink" title="搜索框固定定位"></a>搜索框固定定位</h2><p>当我们把顶部的搜索框设置为<strong>固定定位</strong>时，搜索框不占位置，下方的搜索结果会与浮在最上面的搜索框重叠在一起。</p><p>解决方法：给页面设置一个 padding-top，padding-top 的数值等于搜索框的高度。</p><p>还有一个细节，当我们为固定定位的搜索框设置了左右两侧的距离，它就会根据设置的距离，自动计算搜索框的宽度。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-84.png" alt="image -84-"></p><h2 id="自定义小程序页面顶部状态栏"><a href="#自定义小程序页面顶部状态栏" class="headerlink" title="自定义小程序页面顶部状态栏"></a>自定义小程序页面顶部状态栏</h2><p>小程序页面顶部的状态栏默认会显示系统的时间和电量，我们制作的音乐播放页面，想让播放页充满整个页面，就需要在页面的 json 中添加配置 <code>&quot;navigationStyle&quot;: &quot;custom&quot;</code>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-85.png" alt="image -85-"></p><h2 id="获取不同机型（设备）状态栏的高度"><a href="#获取不同机型（设备）状态栏的高度" class="headerlink" title="获取不同机型（设备）状态栏的高度"></a>获取不同机型（设备）状态栏的高度</h2><p>这里的获取分成两种场景：</p><ul><li>页面获取</li><li>自定义组件获取</li></ul><p>页面获取，要把获取状态栏高度的函数写在页面 js 的 onLoad 生命周期中。<br>组件获取，通常情况下把获取状态栏高度的函数，写在组件的 lifetimes 生命周期中。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-86.png" alt="image -86-"></p><h2 id="小程序分页效果"><a href="#小程序分页效果" class="headerlink" title="小程序分页效果"></a>小程序分页效果</h2><p>点击页面顶部的 Tab，或是左右滑动可以切换到不同的页面，这种分页效果该怎么实现呢？</p><p>有 3 种方案：</p><ul><li>自己封装分页</li><li>使用第三方组件</li><li>使用小程序内置组件 swiper（类似轮播图）</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-87.png" alt="image -87-"></p><h2 id="项目中的「常量」管理"><a href="#项目中的「常量」管理" class="headerlink" title="项目中的「常量」管理"></a>项目中的「常量」管理</h2><p>不建议在 js 文件中直接使用「常量」进行运算，因为之后想要对常量进行更改，如果项目多个地方都用到了一个常量，就要在多处进行修改，维护起来比较麻烦。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-88.png" alt="image -88-"></p><p>对「常量」的处理方法有两种：</p><p>一种是在项目中建立一个专门用来存放常量的文件夹，例如下图的 constants 文件夹，里面有一个用于存放设备信息（常量）的 <code>device-const.js</code> 文件，导出我们需要用到的导航栏高度 44。</p><p>这种常量的管理方法常用于<strong>项目中有比较多常量</strong>的场景。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-89.png" alt="image -89-"></p><p>另外一种是将用到的常量放在全局的 <code>app.js</code> 文件，并对其初始化，在需要使用的时候，通过 getApp() 函数调用。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-90.png" alt="image -90-"></p><h2 id="页面在不同设备上的适配"><a href="#页面在不同设备上的适配" class="headerlink" title="页面在不同设备上的适配"></a>页面在不同设备上的适配</h2><p>音乐播放页面在不同型号的设备上，会因为<strong>屏幕高度的不同</strong>涉及到适配的问题。</p><p>这里我们采取的布局方式是，整个页面采用 flex 布局，flex-direction 设置为 column，即垂直方向为主轴，其他的部分都是由文字内容的大小、icon 图标的高度、内外边距撑起来的，而剩下两块——专辑的封面和歌词的高度，是由屏幕的高度来动态决定的，即它们的高度之和等于 屏幕高度 - 所有其他元素的高度之和，再由设置的 flex 数值来分配剩余的高度，譬如我们这里把专辑封面高度的比例设置为 4，歌词高度的比例设置为 1。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-91.png" alt="image -91-"></p><h2 id="小程序播放音乐"><a href="#小程序播放音乐" class="headerlink" title="小程序播放音乐"></a>小程序播放音乐</h2><p>小程序的 audio 组件已经停止维护了。<br>想要在小程序中添加音乐，需要使用能力更强的 <code>wx.createInnerAudioContext</code> API。</p><pre><code class="hljs bash">const audioContext = wx.createInnerAudioContext() // 设置音乐的 url 地址audioContext.src = <span class="hljs-string">&quot;url&quot;</span></code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-92.png" alt="image -92-"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-93.png" alt="image -93-"></p><h2 id="歌词解析"><a href="#歌词解析" class="headerlink" title="歌词解析"></a>歌词解析</h2><p>课程视频：<a href="https://ke.qq.com/webcourse/4162214/104318954#taid=12375291137589926&vid=387702294493689826">播放器暂停、上一首、下一首、进度控制（2）</a></p><p>我们从服务器请求得到的歌词，是放在一个大的字符串 lyric 里面，需要先对这个大的字符串进行分割，分割成一行行的歌词。   </p><p>通过每句歌词之间的换行符 <code>\n</code> 进行分割：   </p><pre><code class="hljs js"><span class="hljs-keyword">const</span> lyricString = res.lrc.lyric   <span class="hljs-keyword">const</span> lyricSingle = lyricString.split(<span class="hljs-string">&quot;\n&quot;</span>)</code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/02/16566068661368.jpg"></p><p>split() 方法分割之后得到的一个数组，数组里面的每个元素是一个字符串，由时间和歌词组成。  </p><p>[“[00:00.000] 作词 : 唐恬”, “[00:00.576] 作曲 : 钱雷”, ……]    </p><p>用 for……of 遍历上面的数据，可以得到一行行的字符串 </p><pre><code class="hljs js"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> lineString <span class="hljs-keyword">of</span> lyricSingle) &#123;    <span class="hljs-comment">// [00:00.000] 作词 : 唐恬</span>    <span class="hljs-built_in">console</span>.log(lineString)&#125;</code></pre><p>得到一个个字符串之后，我们要对字符串进行拆分，取出里面的时间 <code>00:00.000</code> 和歌词文本「作词 : 唐恬」。   </p><p>取出时间比较麻烦，这里需要用到<strong>正则表达式</strong>。  </p><pre><code class="hljs js"><span class="hljs-comment">// 我们想要匹配的是 [00:00.000]</span><span class="hljs-keyword">const</span> timeRegExp = <span class="hljs-regexp">/\[(\d&#123;2&#125;):(\d&#123;2&#125;)\.(\d&#123;2,3&#125;)\]/</span>     </code></pre><p>正则表达式要使用 <code>/ /</code> 进行包裹。  </p><p>方括号 [] 在正则表达式中是有特殊含义的，比如当我们想匹配 a 到 z 的字母，就会写 [a-z]，在中括号里会写上<strong>匹配的范围</strong>。</p><p>这里想匹配的时间左右两侧有中括号，因此在匹配的时候，需要在中括号前面加上转义的反斜杆 \。   </p><p>时间左右两侧的中括号匹配出来之后，我们就可以写里面想匹配的时间（分、秒、毫秒），每一块的匹配在正则表达式中使用小括号 <code>()</code> 进行分割。   </p><p>这里需要注意的是，英文句号 <code>.</code> 在正则表达式中也有特殊含义，因此要在英文句号前面加多一个反斜杆。  </p><p>接着我们就可以逐一写每一个小括号里面的匹配规则了：  </p><p>匹配分钟：(\d{2})</p><p>(\d)，<code>\d</code> 表示<strong>匹配数字</strong>，也可以写成 [0-9]，但这种形式有点长，我们更倾向于写更简短的 <code>\d</code>。  </p><p>在 <code>\d</code> 后面加上 <code>&#123;2&#125;</code> 表示我们想匹配两个数字。  </p><p>匹配秒钟：(\d{2})</p><p>匹配毫秒：(\d{2,3})</p><p>毫秒有些特殊，既有两个数字，也有 3 个数字的情况。  </p><p>[00:02.304]<br>[00:04.92]   </p><p><code>\d</code> 后面的规则需要改一改，写成 {2,3}，匹配两到三个，匹配 2 个或 3 个数字。  </p><p>⚠️ 注意：<strong>正则表达式中不能随意加空格</strong>，{2,3} 和 {2, 3} 在正则表达式中是不一样的。   </p><p>写好正则表达式之后，可以<strong>使用正则表达式对字符串进行执行</strong>，匹配出我们想要的东西。   </p><p>执行的意思是，我们要用正则表达式 timeRegExp 去匹配字符串 lineString 中的东西了。   </p><pre><code class="hljs js"><span class="hljs-keyword">const</span> timeRegExp = <span class="hljs-regexp">/\[(\d&#123;2&#125;):(\d&#123;2&#125;)\.(\d&#123;2,3&#125;)\]/</span>   <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> lineString <span class="hljs-keyword">of</span> lyricSingle) &#123;    <span class="hljs-comment">// [00:00.000] 作词 : 唐恬</span>    <span class="hljs-built_in">console</span>.log(lineString)      <span class="hljs-keyword">const</span> timeResult = timeRegExp.exec(lineString)    <span class="hljs-built_in">console</span>.log(timeResult)&#125;</code></pre><p>打印正则表达式匹配出来的结果 timeResult，会发现匹配结果是一个个的数组。   </p><p>每个数组中第 2、第 3、第 4 个元素，就是我们想要的分钟、秒钟、毫秒。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/02/16567361817322.jpg"></p><pre><code class="hljs js"><span class="hljs-keyword">const</span> minute = timeResult[<span class="hljs-number">1</span>] * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>  <span class="hljs-keyword">const</span> second = timeResult[<span class="hljs-number">2</span>] * <span class="hljs-number">1000</span><span class="hljs-keyword">const</span> millisecond = timeResult[<span class="hljs-number">3</span>]</code></pre><p>这里还需要分别把分钟、秒转换为毫秒，等会方便与进度条的 currentTime（单位为毫秒） 相匹配。     </p><blockquote><p>一个 JS 的知识点：JS 中，数字字符串（例如我们这里拿到的 “02” 就是一个数字字符串）与一个数字相乘时，数字字符串会隐式转换为一个数字，就可以正常运算了。      </p></blockquote><p>最后匹配到的毫秒，比较特殊，有两位数字，也有三位数字的情况：  </p><p>三位数字 304 是正常的毫秒，不需要作任何处理。</p><p><strong>两位数字 92，需要先乘以 10，才能真正转换成毫秒</strong>，92 完整的写法应该是 920 ms，因此这里需要进行判断，可以使用三元运算符：   </p><pre><code class="hljs js"><span class="hljs-keyword">const</span> millisecond = timeResult[<span class="hljs-number">3</span>].length === <span class="hljs-number">2</span> ? timeResult[<span class="hljs-number">3</span>] * <span class="hljs-number">10</span> : timeResult[<span class="hljs-number">3</span>] * <span class="hljs-number">1</span></code></pre><p>三元运算符的含义是，如果毫秒字符串的长度为 2，那么就乘以 10，转换为真正的毫秒，否则的话，就让<strong>毫秒字符串乘以 1，转换为数字类型的毫秒</strong>。   </p><p>拿到时间之后，我们再来拿字符串 lineString <code>[00:00.000] 作词 : 唐恬</code> 中剩下的歌词文本「作词 : 唐恬」。  </p><pre><code class="hljs js"><span class="hljs-keyword">const</span> lyricText = lineString.replace(timeResult[<span class="hljs-number">0</span>], <span class="hljs-string">&quot;&quot;</span>)  <span class="hljs-comment">// 另外一种写法</span><span class="hljs-comment">// const lyricText = lineString.replace(timeRegExp, &quot;&quot;)</span></code></pre><p>replace() 方法可以接收两种参数：  </p><ul><li>字符串  </li><li>正则表达式  </li></ul><p>timeResult[0] 是正则表达式匹配结果的第一个元素，值为 <code>[00:00.000]</code>，将整个字符串前面的时间戳替换为空字符串，就能得到剩下的歌词文本了。 </p><h2 id="匹配歌词"><a href="#匹配歌词" class="headerlink" title="匹配歌词"></a>匹配歌词</h2><p>对歌词进行解析，我们就可以得到包含有时间和歌词文本的数组 lyricInfos，数组中的每一个元素是对象类型：  </p><p>[{time: 0, text: “作词：唐恬”}, {time: 576, text: “作曲：钱雷”}, ……]   </p><p>接下来，我们要根据当前播放的音乐进度 currentTime，与 lyricInfos 中的 time 进行匹配，得到对应的歌词。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/07/02/gen-ju-shi-jian-cha-zhao-ge-ci-de-fen-xi.png" alt="根据时间查找歌词的分析"></p><h2 id="歌词自动滚动"><a href="#歌词自动滚动" class="headerlink" title="歌词自动滚动"></a>歌词自动滚动</h2><p>歌词滚动，是用小程序自带的 scroll-view 组件制作的。</p><p>想给开头和结尾的歌词设置一个空白，不能直接给 scroll-view 的第一行歌词（第一个 item）设置 margin-top 或 padding-top，因为这样设置的话，会导致上滑的歌词被设置的空白区域遮盖掉，无法看到歌词滚动到屏幕顶部自动消失的效果。<br>比较好的实现方法是：<strong>给遍历的 item 设置一个动态样式（动态的 css 样式）</strong>，根据歌词的索引值来设置样式，第一行歌词的索引值为 0，设置 padding-top，最后一行歌词的索引值为 <code>歌词所在的数组长度 - 1</code>，设置 padding-bottom。 </p><pre><code class="hljs css">style=&quot;padding-top: &#123;&#123;index==0? (contentHeight/2-80): 0&#125;&#125;px; padding-bottom: &#123;&#123;index==lyricInfos.length-1? (contentHeight/2+80): 0&#125;&#125;px&quot;</code></pre><p>注意：这里的 contentHeight 是整个 scroll-view 的高度。之所以添加了 <code>contentHeight/2-80</code> 这样的运算，是想让程序可以根据不同的手机屏幕高度，自适应设置不同大小的 padding-top 和 padding-bottom。</p><p>想要实现<strong>歌词自动滚动</strong>，可以给 scroll-view 组件设置 scroll-top 属性，属性需要绑定一个动态变化的值 lyricScrollTop。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-94.png" alt="image -94-"></p><p>动态变化的值 lyricScrollTop，是由歌词的索引值和每行歌词的高度 35px 相乘得来的。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-95.png" alt="image -95-"></p><h2 id="点击左侧按钮返回上一页"><a href="#点击左侧按钮返回上一页" class="headerlink" title="点击左侧按钮返回上一页"></a>点击左侧按钮返回上一页</h2><p>左侧按钮位于我们自行封装的 nav-bar 组件中，我们给左侧的 left 区域绑定一个 handleLeftClick 事件。<br>在 nav-bar 组件的 js 文件中，只把点击的事件发射出去，而不直接写返回上一页的逻辑，因为我们要让使用 nav-bar 组件的页面自行决定点击后的逻辑，如此一来也能让 nav-bar 组件更具备扩展性。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-96.png" alt="image -96-"></p><p>来到使用 nav-bar 组件的音乐播放页面 music-player，我们在 nav-bar 组件监听内部发射出来的 click 事件，并绑定一个函数 handleBackBtnClick。<br>在函数里面调用小程序的 API <code>wx.navigateBack()</code>，就能返回上一页。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-97.png" alt="image -97-"></p><h2 id="阻止事件向上冒泡"><a href="#阻止事件向上冒泡" class="headerlink" title="阻止事件向上冒泡"></a>阻止事件向上冒泡</h2><p>在 HTML 中常用的做法：传入 event 对象，调用 event 对象的 stopPropagation() 方法。<br>但是小程序中是不支持这个做法的。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-98.png" alt="image -98-"></p><p>小程序中捕捉到一个事件后，不想让它向上冒泡，我们监听的方法要从 bindtap 更换为 catchtap。<br>这样当我们点击右侧的 播放/暂停 按钮，就不会触发进入播放详情页的操作。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-99.png" alt="image -99-"></p><p>小程序有自己的捕获和冒泡机制的，跟在 JS 中的写法稍微有一点点不一样。</p><h2 id="小程序后台播放的-API（背景音频）"><a href="#小程序后台播放的-API（背景音频）" class="headerlink" title="小程序后台播放的 API（背景音频）"></a>小程序后台播放的 API（背景音频）</h2><p>什么时候属于后台播放？<br>——点击右上角的胶囊按钮，关闭小程序，或是从微信返回到手机桌面</p><p>使用 API <code>wx.getBackgroundAudioManager</code>  </p><p>将我们之前使用 <code>wx.createInnerAudioContext</code>创建的音频上下文对象，更改为 <code>wx.getBackgroundAudioManager</code>。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image-100.png" alt="image -100-"></p><p>使用 <code>wx.getBackgroundAudioManager</code> 有两个必须配置的参数：</p><ul><li>在 App 的全局 json 文件<code>app.json</code> 中增加字段 <code>requireBackgroundModes</code> 字段</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image--20220626t102556119.png" alt="image - 2022-06-26T102556.119"></p><ul><li>在使用到 <code>wx.getBackgroundAudioManager</code> 的 js 文件中配置 title 属性，这个属性代表音乐的名称。</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image--20220626t102612212.png" alt="image - 2022-06-26T102612.212"></p><h2 id="小程序登录功能"><a href="#小程序登录功能" class="headerlink" title="小程序登录功能"></a>小程序登录功能</h2><p>当用户登录小程序，我们可以拿到这个用户身份的唯一标识 openid，<strong>openid 是用户身份的唯一标识</strong>。<br>每个微信用户的 openid 是唯一的，不会重复</p><p><strong>微信小程序获取用户的 openid，是不需要经过用户授权的</strong><br>unionid：在多个平台共享 id</p><h3 id="小程序用户登录的流程"><a href="#小程序用户登录的流程" class="headerlink" title="小程序用户登录的流程"></a>小程序用户登录的流程</h3><p>涉及到 3 个角色——小程序（客户端）、开发者服务器（开发小程序的公司的服务器）、微信接口服务（微信的服务器）</p><p>步骤：</p><ol><li>在小程序中拿到一个临时的 code，调用 API <code>wx.login</code> 可以拿到临时的 code</li><li>把这个 code 传递给公司的服务器</li><li>公司服务器拿到 code 之后，准备齐 3 个东西（code、小程序后台的 appid 和 appsecret 参数）</li><li>公司服务器向微信服务器发送网络请求，携带前面的 3 个参数（服务器发送网络请求）</li><li>微信服务器向公司服务器返回 <strong>openid</strong> 和 session_key </li></ol><p>完成前面的步骤，用户是无感知的，不知道自己已经登录过了<br>那应该怎么让用户知道自己已经登录过了呢？<br>将 openid + session_key + 其他信息，生成一个新的东西——公司服务器的 token</p><ol start="6"><li>接着将这个 token 返回给微信小程序</li></ol><p>小程序端获取到服务器返回的 token（这个 token 可以保存到本地的缓存 storage 中），用户进行各种操作——<strong>收藏、喜欢</strong>或者<strong>评论</strong>等，将这个 token 发送给公司的服务器</p><ol start="7"><li>公司的服务器拿到小程序发送的 token</li></ol><p>解析 token 得到 openid、session_key<br>在数据库中保存用户的操作行为</p><ol start="8"><li>假设用户换了另外一部手机</li></ol><p>判断小程序本地的缓存有没有 token<br>没有 token 的话，<strong>使用原始的登录流程</strong>，就是把前面的步骤重新走一遍<br>如果有 token<br>需要先判断一下 token 是否过期了<br>没有过期的话，直接使用<br>过期了的话，重新走一遍登录流程</p><p>下图中的「自定义登录态」，就是公司服务器生成的 token。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/image--20220626t102629475.png" alt="image - 2022-06-26T102629.475"></p><h3 id="用户什么时候需要重新登录呢？"><a href="#用户什么时候需要重新登录呢？" class="headerlink" title="用户什么时候需要重新登录呢？"></a>用户什么时候需要重新登录呢？</h3><ul><li>小程序本地缓存的 token 为空</li><li>token 已失效，或者 token 不是一个有效值  </li><li>session_key 失效   </li></ul><p>这里之所以涉及到 session_key，是因为生成 access token 需要有至少 2 个参数：openid 和 session_key 。  </p><h3 id="判断-token-是否过期的两种方式"><a href="#判断-token-是否过期的两种方式" class="headerlink" title="判断 token 是否过期的两种方式"></a>判断 token 是否过期的两种方式</h3><p>第一种方式：在请求一些其他接口的时候，譬如请求收藏接口、评论接口等，在请求的 header 中携带 token，让服务器来判断 token 是否过期了。</p><p>第二种方式：当用户启动小程序，在 app.js 的 onLaunch 中判断 token 是否过期。</p><p>需要注意的是，微信给我们返回的 session_key 也是会过期的，在登录时也要判断一下 session_key 是否过期了，如果过期了，也要重新登录。   </p><p>session_key 的有效期是不确定的，微信官方并没有说明 session_key 的有效期，它的有效期与用户是否频繁使用小程序有关：如果用户频繁使用我们的小程序，它的有效期会比较长一点。  </p><h3 id="获取其他用户信息"><a href="#获取其他用户信息" class="headerlink" title="获取其他用户信息"></a>获取其他用户信息</h3><p>openid 是用户身份的唯一标识，它不携带其他信息，不包含用户的昵称、头像。  </p><p>openid 是识别这个用户的身份，而不是拿到这个用户的更多信息。  </p><p>获取其他用户信息，需要用到 API <code>wx.getUserProfile</code>。  </p><p>在使用这个 API 时需要注意，它直接放在 <code>app.js</code> 中是无效的，它需要<strong>在一个事件之后才能触发获取用户头像和昵称</strong>的，例如绑定在页面按钮的点击事件中，当我们点击了按钮，页面下方才会弹出是否授权的窗口。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/16561726429178.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/16561695117607.jpg"></p><h3 id="unionid"><a href="#unionid" class="headerlink" title="unionid"></a>unionid</h3><p>unionid：也是唯一标识，作为在微信的多个平台进行授权时，相同的 id。  </p><p>openid：仅仅是微信用户在同一个小程序里面多次登录的时候，它的一个身份标识。  </p><p>假设我们的产品不仅有小程序端，也有公众号端、H5 页面（第三方登录、微信登录），用户在不同端之间的操作行为，如何实现数据的共享呢？   </p><p>这时就需要用到 unionid。  </p><p>有了 unionid，用户使用同一个微信在不同的平台上登录，我们就可以通过 unionid 识别出这是同一个用户。  </p><p>获取 unionid，需要前往<strong>微信开放平台</strong>注册相应的账号，获取开放平台提供的 SDK。  </p><h3 id="国内-App-用户登录的常见设计（用户身份多平台共享）"><a href="#国内-App-用户登录的常见设计（用户身份多平台共享）" class="headerlink" title="国内 App 用户登录的常见设计（用户身份多平台共享）"></a>国内 App 用户登录的常见设计（用户身份多平台共享）</h3><p>用户身份多平台共享：  </p><ul><li>账号绑定</li><li>手机号绑定（现在最常用的）     </li></ul><p>初次打开刚下载的 App，通常都会让你进行登录，登录方式一般会提供多种第三方登录，比如：  </p><ul><li>QQ 登录   </li><li>微信登录    </li><li>微博登录  </li></ul><p>假设我们选择了微信登录，跳到微信授权后再返回 App，接下来可能还会遇到另外一步操作——<strong>绑定账号</strong>，绑定账号也有多种情况：  </p><ul><li>绑定用户名 userid</li><li>用户邮箱   </li><li>用户手机号（非常常见的）</li></ul><p>在前面的微信登录操作，我们可以拿到 openid 或者 unionid，与后面「绑定账号」的步骤获取的一项信息进行绑定，比如将 unionid 与手机号进行绑定，这样不管你之后是使用 unionid 登录，还是使用手机号登录，我们都可以知道这是同一个用户，可以更好地实现用户数据在多个平台间的共享。   </p><p>不过需要注意的是，个人开发者是无法通过微信小程序拿到用户的手机号的。   </p><p>截图地址：<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/getPhoneNumber.html">https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/getPhoneNumber.html</a><br><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/16561727312023.jpg"></p><p>如果是个人开发者账号，绑定获取手机号的事件，会打印一个错误信息，提示「没有获取的权限」。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/16561732384096.jpg"></p><p>不过即便是公司主体的开发者账号，拿到的也不是手机号，而是一个动态的 code，要想真正拿到用户手机号码，我们还需要在公司服务器向微信服务器发起请求，发起请求的时候，需要携带两个参数，一个是 access_token，一个是动态的 code，请求之后微信会返回 phone_info 对象，里面就有用户的手机号。  </p><h2 id="小程序分包"><a href="#小程序分包" class="headerlink" title="小程序分包"></a>小程序分包</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/16561736591917.jpg"></p><p>第一次打开小程序必须下载的包，称为主包。<br>后面才需要用到的包，称为分包。  </p><p>主包尽可能地小一些，把暂时用不到的都放到分包里面，再在需要用到的时候进行下载。  </p><p>小程序的限制：  </p><ul><li>单个分包/主包大小不能超过 2MB</li><li>整个小程序所有分包大小不超过 20MB</li></ul><p>分包操作：  </p><ul><li>将 3 个详情页分到一个包里面 packageDetail</li><li>将播放页面单独分到一个包里面 packagePlayer</li></ul><p>需要注意的是，TabBar 对应的页面是不能进行分包操作的。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/16561746955305.jpg"></p><h3 id="分包预下载"><a href="#分包预下载" class="headerlink" title="分包预下载"></a>分包预下载</h3><p>加载完主包后，当小程序处于闲置状态，可以在后台预先下载分包，这个设计参考了 Webpack 中的「预加载和预获取」。   </p><p>在 <code>app.js</code> 中添加一个预下载的规则，指明当进入某个页面后，预下载哪些分包。  </p><p>譬如下面的代码，是在进入 home-music 页面后，预下载两个分包 packageDetail 和 packagePlayer。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/26/16561756826579.jpg"></p><h2 id="项目为何要用到-Vant-组件库？"><a href="#项目为何要用到-Vant-组件库？" class="headerlink" title="项目为何要用到 Vant 组件库？"></a>项目为何要用到 Vant 组件库？</h2><ul><li>学习如何在小程序中引用一些 UI 组件库，来减少开发量</li><li>npm 包的使用</li><li>van-search 搜索组件</li></ul><h2 id="组件按需注入"><a href="#组件按需注入" class="headerlink" title="组件按需注入"></a>组件按需注入</h2><p>代码按需注入，俗称懒加载。   </p><p>启用组件按需注入，也就是在小程序中优先注入必须要用的组件，暂时未用到的组件之后注入，可以显著提高小程序的启动性能，配置起来也非常简单。  </p><p>只需要在项目的 <code>app.json</code> 中添加下面的一行配置，就能启用啦：   </p><pre><code>&quot;lazyCodeLoading&quot;: &quot;requiredComponents&quot;  </code></pre><h2 id="骨架屏"><a href="#骨架屏" class="headerlink" title="骨架屏"></a>骨架屏</h2><p>骨架屏：展示一个页面骨架，而不含有实际的页面。  </p><p>骨架屏在页面白屏的时候，给了用户及时的反馈，减缓了用户焦急等待的一个情绪，这是它的意义所在。  </p><p>点击开发者工具「模拟器」右下角的 … ，选择「生成骨架屏」。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/28/16562272511306.jpg"></p><p>骨架屏的详细使用，可以参考微信团队提供的视频教程： <a href="https://developers.weixin.qq.com/community/business/doc/000086539b40682ccddd8b71551c0d">https://developers.weixin.qq.com/community/business/doc/000086539b40682ccddd8b71551c0d</a>    </p><p>骨架屏只是在页面加载时给用户更好的体验，并不能提高页面的加载速度，因此<strong>不能无节制地使用骨架屏</strong>，一般只给主页添加骨架屏效果。 </p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>学习笔记</tag>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何批量导出石墨文档中的内容？</title>
    <link href="/2022/06/10/2022-6-10-shimo/"/>
    <url>/2022/06/10/2022-6-10-shimo/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于公众号「<a href="https://mp.weixin.qq.com/s/sNHowZTLXMaLzLhWcZ9zKw">效率工具指南</a>」<br>文/彭宏豪      </p><p>​Hello 各位晚上好，我是小豪。<br>​<br>​上次在一篇文章《<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649920061&idx=1&sn=8ea5550e1b0155f53361585d61f68ed2&chksm=83a89610b4df1f06bb6d30aaea13481470df27d40ab2e81f751a336c9216b10019eedc87149e&token=1993509468&lang=zh_CN#rd">靠软件赚钱，真的太难了</a>》中说到，我目前在用的在线文档工具是石墨文档，大体上它的功能都能满足我的需求，不过正如我在挑选文档或笔记类工具时，都会考虑软件是否提供了「<strong>数据导出</strong>」功能，以方便我在想切换到其他的工具时，可以随时导出数据。<br>​<br>​石墨文档虽然提供了数据导出功能，但导出时仅限于单个文档，无法一次批量导出多个文档。<br>​<br>​<img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/10/16548707584267.jpg"></p><p>就着这个问题，我在网上搜了一下，没想到从飞书的帮助文档中找到了解决方法。  </p><p>真是竞争对手把「撬墙角」的方法都给用户安排得明明白白的。             </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/10/16548720986290.jpg"></p><p>说明文档中提到了一个可批量导出石墨文档的第三方工具「shimo-cloud-files-download」，支持 Windows 和 macOS 系统。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/10/16548722867762.jpg"></p><p>批量导出石墨文档第三方工具下载地址：<br><a href="https://github.com/Boeing724/mover/releases/tag/0.0.7">https://github.com/Boeing724/mover/releases/tag/0.0.7</a>    </p><p>因为这个工具放在了 GitHub 上，从 GitHub 下载的速度比较慢，有需要的可以点击下方的公众号卡片，在后台回复【<strong>石墨</strong>】，获取我下载好的安装包。   </p><p>使用 Mac 电脑的朋友，安装完首次打开软件会提示软件不安全、无法打开，可以去到系统设置的「安全性与隐私」&gt;&gt;「通用」，点击左下角的小锁🔒，输入电脑开机密码，接着点击右侧的「仍要打开」。  </p><p>重启 shimo-cloud-files-download 软件，就能顺利打开了。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/10/16548719576841.jpg"></p><p>打开软件后，还是熟悉的石墨文档登录界面，输入石墨文档的账号密码。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/10/16548731425196.jpg"></p><p>​登录之后，点击文件列表「文件名」左侧的复选框，就能全选所有文档，再点击下方的「导出」，就能将所有文档批量导出了。<br>​<br>​<img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/06/10/16548732706427.jpg"></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>其实石墨文档官方也是可以提供批量导出文档功能的，但从我自己的角度猜测：谁会愿意把好不容易得到的用户，拱手相让给其他人呢？   </p><p>就像之前在 MacTalk 的池建强老师一篇文章中看到的一句话：  </p><blockquote><p>微信在哪个手机（上登录），那个手机就是主力机。   </p></blockquote><p>对应到这里：  </p><p><strong>你的多数文档放在哪，那个就是你的主力文档工具</strong>，何况现在国内的 Saas 产品这么卷？     </p><p>最后的最后，这篇文章介绍这个工具，并不是鼓励用着石墨文档的朋友都要把文档导出，而是给你在需要导出数据的时候，提供一种选择。      </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>石墨文档</tag>
      
      <tag>在线工具</tag>
      
      <tag>数据迁移</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows电脑如何打开heic格式的图片？</title>
    <link href="/2022/05/31/2022-5-31-heic/"/>
    <url>/2022/05/31/2022-5-31-heic/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于公众号「<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649920114&idx=1&sn=a388c8be16a1bbc30e33185b0810269b&chksm=83a8965fb4df1f49f87a642b30e65f6817df3276e74827aae5f2e0dc0dfd3b01852e1b3ead48&token=792768228&lang=zh_CN#rd">效率工具指南</a>」<br>文/彭宏豪    </p><p>​Hello 各位晚上好。</p><p>今天想来说一下，使用 Windows 系统的朋友经常会遇到的一个问题：从 iPhone 或者苹果设备上发送到 Windows 电脑的图片，在打开时会遇到下图的提示。  </p><p>这种情况，通常是在打开一种特殊的图片格式才会遇到，它就是来自苹果专有的图片格式 <strong>heic</strong>。   </p><p>使用 Win10 自带的「照片」虽然没办法打开 heic 格式的图片，但它还是给出了一种解决方法，让我们安装来自微软应用商店的一个插件「HEVC 视频扩展」。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/31/image-37.png" alt="image-37-"></p><p>当你顺着上图的提示，点击蓝色的链接跳转到微软应用商店，会发现这个插件原来是要收钱的，这可能也是你在微软应用商店遇到的第一款付费应用？   </p><p>不过别急着付款（急着付款的人也没办法挽回了），因为这篇文章的目的，就是来教你白嫖这个插件。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/31/7kuai-qian.png" alt="7块钱"></p><p>白嫖这个插件，需要先下载微软应用商店里的另外一个应用「哔哩哔哩动画」，这是 B 站的 UWP 应用。   </p><p>你可能会说，这两个软件八杆子打不着，干啥要扯到一起？（别急，往下看）      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/31/bi-li-bi-li-dong-hua.png" alt="哔哩哔哩动画"></p><p>安装 B 站应用之后，点击应用右下角的设置按钮，将打开的页面往下滑动，就能看到一个「安装 HEVC 视频解码扩展」的选项。  </p><p>点击这个选项，同样会打开微软应用商店，不过这回，你会发现一个惊天大秘密：这回这个插件居然变成免费的了！  </p><p>安装了这个免费插件之后，再次用 Win10 自带的「图片」打开 heic 格式的图片，就可以正常查看图片了。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/31/image-38.png" alt="image -38-"></p><p>这次之所以能不花钱安装 HEVC 视频解码插件，原因如下（下图来自 IT 之家 2019 年的一篇文章《<a href="https://www.ithome.com/0/447/326.htm">小技巧：微软Win10商店如何下载免费HEVC编解码器</a>》）：   </p><blockquote><p>微软在Windows 10商店中隐藏了另一个版本的HEVC编解码器，供设备制造商在将其交付给客户之前在台式机和笔记本电脑上安装编解码器。</p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/31/16539286055157.jpg"></p><h2 id="安装-HEVC-视频解码插件的另外一个用处"><a href="#安装-HEVC-视频解码插件的另外一个用处" class="headerlink" title="安装 HEVC 视频解码插件的另外一个用处"></a>安装 HEVC 视频解码插件的另外一个用处</h2><p>安装了 HEVC 视频解码插件，不仅可以打开 heic 格式的图片，还能解决另外一个问题——Win10 自带的「电影和电视」应用无法打开 <strong>mkv</strong> 格式的视频。   </p><p>如果你的电脑上没有安装第三方的视频播放器（例如 Potplayer），每次打开 mkv 格式的视频，电脑自带的视频播放器也会提示你安装解码插件，同样是要钱滴。  </p><p>可以说，安装了这个插件，真的是一箭双雕呀。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/31/dian-ying-he-dian-shi-da-kai-mkv-shi-pin.png" alt="电影和电视打开 mkv 视频"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/31/zhao-pian-he-dian-yingsnipaste20220531000702.png" alt="照片和电影Snipaste_2022-05-31_00-07-02"></p><h2 id="另外的解决方法"><a href="#另外的解决方法" class="headerlink" title="另外的解决方法"></a>另外的解决方法</h2><p>如果你不想安装免费的 HEVC 视频解码插件，但又想在本地直接查看 heic 格式的图片，还有另外的解决方法，这里提供一种：在电脑上安装开源、跨平台的看图软件 <strong>qView</strong>。    </p><p>关于 qView 的介绍，可以看我之前写过的一篇文章：   </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649909010&idx=1&sn=1f33cbfe38a60bde5b24a19a488d7b30&chksm=83a8633fb4dfea292589ae12e74c3cafdfeeb1eb463f3d4ac09775b4b29e0f0688adcfd7844c&token=792768228&lang=zh_CN#rd">没找到好用的看图软件，我最终还是下回了这个流氓软件</a>    </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>插件</tag>
      
      <tag>B站</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>靠软件赚钱，真的太难了｜石墨文档</title>
    <link href="/2022/05/25/2022-5-25-shimo/"/>
    <url>/2022/05/25/2022-5-25-shimo/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于公众号「<a href="https://mp.weixin.qq.com/s/ULmHo2lu_15WLFxcTPWQRQ">效率工具指南</a>」<br>文/彭宏豪   </p><p>Hello 各位好，我是小豪。   </p><p>昨天在公司用着<strong>石墨文档</strong>的时候，发生了一个小插曲：  </p><p>原本可以免费使用的「搜索文档正文」功能，在刷新页面后，变成了「个人高级版」中的一项权益，真像一句话说的「翻脸比翻书还快」。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/25/16534077864620.jpg"></p><p>说这个小插曲，并不是想吐槽「石墨文档你咋能这样，别的在线文档都是免费的功能，你却拿来收费，吃相这么难看」，反而是想说：<strong>在国内想靠软件赚钱，真的太难了</strong>。    </p><p>因为不少人会觉得：      </p><ul><li>我都习惯用盗版了，你跟我扯正版？   </li><li>软件免费就是天经地义，你跟我扯付费？   </li><li>大厂出的同类型的产品，好好的你放着不用，偏偏要来用这个名不见经传的小产品？   </li></ul><p>首先，我想声明我的观点：     </p><ul><li>我讨厌「产品唯大厂论」或是跪舔大厂产品的说法，一刀切地认为大厂的产品就是比小众的产品好，即便大厂的产品实际上做得并不咋地        </li><li>我讨厌那些因为「某款软件有广告」而否定某款产品的行为，你既想免费使用，但又不想花钱，看到广告后还骂娘，这种行为就有点像是：既想白嫖但又不愿意好好说话，敢情你来白嫖还是看得起对方一样，毕竟你还能反驳对方，我帮你贡献了一个阅读量或者播放量呢                </li></ul><p>说回到石墨文档，如果你有看过石墨文档免费版和个人高级版的功能对比，会发现，<strong>个人高级版并没有非常吸引人的卖点，让人非得去开通会员</strong>。      </p><p>而这次刚好让我撞见的「搜索正文」功能，正好是我经常要用到的功能，突然变成了会员专属的权益，犹豫了一小下，还是开通了一年的会员。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/25/16534102075707.jpg"></p><p>我想看到这里，有些人肯定会在心里默念：这人该不会是个傻子吧？别的软件不花钱照样能用的搜索，你搁着花钱不是傻子是啥？      </p><p>是的，我确实很傻，但我希望石墨文档这么好看、有气质的产品，别那么快就消失在中国互联网里。        </p><p>如果你天天在用一个产品，尤其是小公司出的产品，却不舍得为它花一分钱，那它最终走向没落甚至消亡，也是大概率的事情。   </p><p>写到这里，突然想起之前一位同事在朋友圈里发过的一句歌词：   </p><blockquote><p>经过的人没有名字，唯有城市接近不朽。——《陌生城市的早晨》    </p></blockquote><p>我想把它改成：  </p><blockquote><p>用过的人最是无情，唯有消亡才是永恒。    </p></blockquote><h2 id="腾讯文档"><a href="#腾讯文档" class="headerlink" title="腾讯文档"></a>腾讯文档</h2><p>说完石墨文档，还想来说一下同类型的腾讯文档。  </p><p>先上我的观点：即便腾讯文档完全免费，它还是比不上石墨文档，因为它不是一款好产品——不美、不好用、不用心。    </p><p>这里还有一个小插曲：有一回在一个知名公众号作者的视频号直播间里，听到他这么评论腾讯文档，「腾讯文档是一群没有文化的人做出的产品」。    </p><p>腾讯文档的「不好」体现在哪里呢？   </p><p>我来列举两点：   </p><ul><li>文档标题和正文标题没有逻辑关系，让人很迷</li></ul><p>当我编辑了左上角的文档标题，正文开头的提示语「请输入标题」并不会随之发生变化，两者之间不存在关联，不知道这个提示语的作用是什么？    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/25/16534116298196.jpg"></p><ul><li>内置的搜索功能一团糟   </li></ul><p>先说一下：腾讯文档也是支持搜索文档正文内容的，只是默认没有开启，需要手动开启。   </p><p>同样搜索「UI设计」，下图是石墨文档和腾讯文档正文搜索功能的对比，石墨文档会返回带有「UI设计」、「UI 设计」、「设计」、「UI」的结果，而腾讯文档只会返回「UI」的结果，而且不能直接看到 UI 在文档中的上下文。。。    </p><p>还有一个小细节，在腾讯文档中搜索「UI 设计」和「UI设计」得到的结果也是不同的，它把带有空格和不带空格的词当成两个截然不同的词了。。。真够蠢的。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/25/16534123699819.jpg"></p><p>就这两点，还有加上腾讯文档难看的设计，你要说这是一个好产品，我还真的无法认同。   </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>石墨文档</tag>
      
      <tag>在线文档</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何使用Notion制作个人网站？</title>
    <link href="/2022/05/22/2022-5-22-notiontoblog/"/>
    <url>/2022/05/22/2022-5-22-notiontoblog/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于公众号「效率工具指南」<br>文/彭宏豪    </p><p>Hello 各位好，我是小豪。   </p><p>之前写过一篇<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649911025&idx=1&sn=9b849dbaf03a6407b6ebd533d0fb6f87&chksm=83a86adcb4dfe3ca54a324d6c784c2f9fa8e5ba6061a33f4da804ddfc3a86f8019922c7449ec&scene=21#wechat_redirect">基于 Notion + Next.js + Vercel 搭建个人网站</a>的文章，老实说折腾起来有些麻烦，而且现在照着那篇文章去操作，可能还会因为代码（依赖的包）版本的不同而遇到新的问题。  </p><p>如果你之前看过上面的文章，但弄到一半就放弃了，没关系，今天来介绍一种超级简单的个人网站搭建方法，只需要用到一个工具——<strong>Popsy</strong>。   </p><p>Popsy，一个免费将 Notion 页面转换为网站的在线工具。使用 Popsy 之前，请确保你已经有一个 Google 账号。</p><p>没有 Google 账号的朋友，可以查看往期文章：<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649912873&idx=1&sn=7a11acaec4173d7a9501359b4aa5d524&chksm=83a87204b4dffb12a3b1e058dbddbba43e293dcef288db6391927660bac6aca610c62f21e9f8&token=201204900&lang=zh_CN#rd">2021年，如何注册一个Google账号？</a>      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/22/16531882183970.jpg"></p><p>下图是我使用 Notion + Popsy 搭建出来的网站首页，访问地址 ▶▶ <a href="https://penghh.popsy.site/">https://penghh.popsy.site/</a>    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/22/16531874725550.jpg"></p><p>打开 Popsy 的官网 <code>https://popsy.co/</code>，将 Notion 页面链接粘贴到中间的输入框，登录 Google 账号，按照提示一直往下点点点，就能将 Notion 页面转换为网站。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/22/16531896808461.jpg"></p><h2 id="网站域名"><a href="#网站域名" class="headerlink" title="网站域名"></a>网站域名</h2><p>Notion 页面转换为网站后，Popsy 会给你的网站提供一个域名，你可以自定义域名的前半部分，后半部分的 <code>popsy.site</code> 则是统一的。    </p><p>域名自定义的部分可以多次修改，因此不用担心第一次没取一个好记的域名而不得不重新创建一个网站。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/22/16531899027089.jpg"></p><h2 id="设置标签页图标和网站图标"><a href="#设置标签页图标和网站图标" class="headerlink" title="设置标签页图标和网站图标"></a>设置标签页图标和网站图标</h2><p>在网站域名下方，Popsy 还提供了设置页面图标和网站图标的选项。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/22/16531913208537.jpg"></p><p>页面图标 Site favicon，即每次打开页面，位于浏览器标签页的小图标，这个图标尺寸不宜过大，建议选择 16x16 或 32x32 的尺寸即可。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/22/16531916541821.jpg"></p><h2 id="手动同步-Notion-数据"><a href="#手动同步-Notion-数据" class="headerlink" title="手动同步 Notion 数据"></a>手动同步 Notion 数据</h2><p>当你在 Notion 中更新了页面的内容，使用 Popsy 搭建的网站也会自动更新。    </p><p>如果网站更新不及时，你可以打开 Popsy 的管理后台，点击左侧的「Sync from Notion」，手动同步 Notion 页面的数据。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/22/16531902326402.jpg"></p><h2 id="更换网站主题"><a href="#更换网站主题" class="headerlink" title="更换网站主题"></a>更换网站主题</h2><p>Popsy 提供了 8 种网站主题，点击左侧的主题名称，可以实时预览每种主题的效果。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/22/16531893830451.jpg"></p><h2 id="自定义主题"><a href="#自定义主题" class="headerlink" title="自定义主题"></a>自定义主题</h2><p>前面介绍的更换网站主题，可以一键更换网站的主题样式，但不能细致地调节网站的布局、字体、文本大小等。  </p><p>如果你想更精细化地调节网站的样式，Popsy 也提供了相应的支持，点击管理后台左侧栏的「Customize theme」，进入自定义主题的界面，左侧提供了多个调整布局的选项，调整后可以实时预览效果。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/22/16531918152716.jpg"></p><p>但比较尴尬的是，当你完成调整后，点击顶部的保存按钮，Popsy 会弹出让你付费成为会员的窗口，每月为 8 美元，付费后才能保存你刚刚调整好的样式。 </p><p>Popsy 的会员权益包含：自定义主题、移除网站左下角的 Popsy 图标、谷歌网站流量分析、添加自定义的代码。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/22/16531923224767.jpg"></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>最后，简单总结一下：   </p><p>如果你图简单，不想改代码、不购买域名、不配置 DNS，使用 Popsy 就能快速得到一个属于自己的个人网站，而且网站的数据最终还是存放在 Notion 中，不用担心 Popsy 之后可能会出现的关停，给个人数据带来损失。  </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>Notion</tag>
      
      <tag>网站搭建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>4个相见恨晚的iPhone使用技巧，关键时刻还能救你一命。</title>
    <link href="/2022/05/14/2022-5-14-iPhone/"/>
    <url>/2022/05/14/2022-5-14-iPhone/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于公众号「<a href="https://mp.weixin.qq.com/s/rN8qotED3XyWAGHvGjrAwQ">效率工具指南</a>」<br>作者/彭宏豪       </p><p>Hello 各位好，我是小豪。  </p><p>好久没有写过手机📱使用技巧方面的东西，今天就来开整！   </p><p>这篇文章想给大家介绍一些手机上的「救命🆘/急救」小技巧，希望你永远不会用到。   </p><h2 id="SOS-紧急联络"><a href="#SOS-紧急联络" class="headerlink" title="SOS 紧急联络"></a>SOS 紧急联络</h2><p>这个相信不少用过 iPhone 的朋友都知道，长按电源键和音量键（上下音量键都可以），会打开 iPhone 的关机页面。</p><p>在关机页面会出现「SOS 紧急联络」的按钮，向右滑动可以进入拨打 110/119/120 的页面。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/14/img2417.JPEG" alt="IMG_2417"></p><p>上面调出关机页的「SOS 紧急联络」按钮，需要用到两只手，但如果不幸你的其中一只手被压住了，这种呼出紧急联络按钮的方法就失效了。  </p><p>别担心，苹果提供了另外一种方法，让我们单只手也能呼出同样的界面。  </p><p>这需要我们打开系统设置，找到「SOS 紧急联络」，开启「按 5 次进行呼叫」。  </p><p>开启之后，连续按下 5 次手机电源键，就会自动进入 SOS 紧急联络的界面，但同时还会发出警报声😂，<strong>从来没用过的朋友可以体验一下</strong>。     </p><p>但我在想，如果你被别人绑架了，想偷偷拨打电话报警，发出这个警报声，反而不是暴露了嘛🤦‍♂️ </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/14/img2422.jpg" alt="IMG_2422"></p><h2 id="紧急联系人"><a href="#紧急联系人" class="headerlink" title="紧急联系人"></a>紧急联系人</h2><p>除了从外部寻求帮助，生活中可能还会发生其他的意外，譬如你走在路上不幸晕倒了，别人送你到医院后，和你素不相识，该怎么通知你的家里人呢？  </p><p>——这时就可以用到 iPhone 的紧急联系人功能了。</p><p>打开 iPhone 自带的健康 App，点击右上角的头像，选择「医疗急救卡」，点击右上角的「编辑」，在编辑界面，可以从手机通讯录选择亲人作为自己的紧急联系人。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/14/img37e44c3dc6ab1.jpeg" alt="IMG_37E44C3DC6AB-1"></p><p>添加紧急联系人之后，还要记得拉到下面，开启「<strong>锁定时显示</strong>」，最后点击右上角的「完成」保存设置。  </p><p>完成设置之后，可以测试一下：同时按下电源键和音量键，在关机页面会增加一个「<strong>医疗急救卡</strong>」的按钮，滑动按钮进入健康 App 的页面，就能看到你设置的紧急联系人的电话。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/14/img745350c341cd1.jpeg" alt="IMG_745350C341CD-1"></p><p>当然，如果只有晕倒的人知道这个功能，而施救者却不知道这个操作，好像也是白搭。     </p><p>可能是考虑到这个呼出紧急联系人的操作比较隐蔽，苹果还提供了另外一个入口：   </p><p>在手机的锁屏页，点击左下角的「紧急情况」进入拨号页面，点击拨号页左下角的「医疗急救卡」，同样可以查看我们设置的紧急联系人电话。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/14/img84b1c992f77d1.jpeg" alt="IMG_84B1C992F77D-1"></p><h2 id="摔倒检测"><a href="#摔倒检测" class="headerlink" title="摔倒检测"></a>摔倒检测</h2><p>摔倒检测，是苹果手表 Apple Watch 中的一项实用功能，对于任何人（尤其是老年人）来说，意外摔倒是非常危险的，这项功能有助于帮助他们在摔倒后及时获得救助。     </p><p>在使用这项功能之前，你需要先有一个 Apple Watch，要求的 Apple Watch 型号：Apple Watch SE、Apple Watch Series 4 或更新机型。  </p><p>在 iPhone 上打开 Watch App，在「我的手表」找到「SOS 紧急联络」，开启「<strong>摔倒检测</strong>」，并设置为「始终开启」。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/14/imge117a8b0ebdc1.jpeg" alt="IMG_E117A8B0EBDC-1"></p><p>当 Apple Watch 检测到你<strong>可能</strong>摔倒后，它会弹出下面的提示，根据苹果官方提供的说明：   </p><blockquote><p>如果 Apple Watch 检测到您在移动，它会等待您对提醒做出响应，而不会自动拨打紧急服务电话。如果手表检测到您在大约一分钟内没有做出任何动作，它会自动拨打紧急服务电话。    </p><p>在通话结束后，手表会向您的紧急联系人发送一条包含您所在位置的信息，让他们知道手表检测到您摔得很严重并呼叫了紧急服务。手表会从您的医疗急救卡中获取紧急联系人信息。</p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/14/16525333154392.jpg"></p><p>前面在描述摔倒时，我加上了「可能」两个字，是因为苹果手表有时会产生误判，误以为你摔倒了，但其实并没有。   </p><p>值得一提的是，如果你在健康 App 中设置的年龄已满 55 周岁，iPhone 会自动开启摔倒检测的功能。  </p><blockquote><p>如果您在设置 Apple Watch 时输入了您的年龄或在“健康”App 中输入了年龄，并且您已年满 55 周岁，这项功能会自动打开。确保您的“医疗急救卡”和“健康资料”中显示了您的正确年龄。“摔倒检测”仅供年满 18 周岁的用户使用。</p></blockquote><p>如果有多余的闲钱，或是不知道给爸妈买什么礼物，就送 TA 一个苹果手表吧～最好加一部 iPhone，用起来才给力。      </p><h2 id="遗产联系人"><a href="#遗产联系人" class="headerlink" title="遗产联系人"></a>遗产联系人</h2><p>这是一个比较令人伤心的功能。  </p><p>遗产联系人，是 iOS15.2 中新增的「数字遗产继承」功能，它可以让你从通讯录选择一位或多位用户成为你的数字遗产继承人，在你过世后可以访问你储存在 Apple 帐户中的数据。</p><p>譬如小明将自己的爸妈设置为遗产联系人，它们会获得一串密钥，当小明过世后，小明爸妈向苹果官方提供密钥和小明的死亡证明文件，通过苹果审核后，小明爸妈就可以访问小明存放在 Apple 帐户中的数据，包含但不限于照片、钥匙串、备忘录等。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/14/img2416.JPEG" alt="IMG_2416"></p><p>遗产联系人：打开系统设置，点击顶部的 Apple ID，选择「密码与安全性」，其中就可以找到「遗产联系人」。    </p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>由于我没有安卓手机，本文仅写了 iPhone 上的小技巧，使用安卓设备的朋友，如果知道安卓上的一些急救小技巧，欢迎在下方👇的评论区留言。   </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>App</tag>
      
      <tag>iPhone</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>近期值得关注的 App</title>
    <link href="/2022/05/04/2022-5-4-apps/"/>
    <url>/2022/05/04/2022-5-4-apps/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于公众号「效率工具指南」<br>作者/彭宏豪     </p><p>Hello 各位好，我是小豪。<br>今天照例来更新一下这个不定期更新的栏目「近期值得关注的 App」，希望能给你带来一些有用的信息。</p><p>Enjoy~       </p><h2 id="Goodnotes"><a href="#Goodnotes" class="headerlink" title="Goodnotes"></a>Goodnotes</h2><p>Goodnotes，一款在 iPad 上非常受欢迎的手写笔记应用，在上个月宣布由付费下载转为「免费下载 + 内购解锁」的方式。  </p><p>如果你之前没有购买过 Goodnotes，现在可以免费下载并试用这款软件了。对于免费用户，Goodnotes 支持在 App 内创建 3 个笔记本。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/04/16516687639596.jpg"></p><p>内购解锁后，你将获得额外的权限： </p><ul><li>无限制的笔记本数量  </li><li>手写识别，可以通过内置的搜索功能来搜索你手写的内容   </li><li>从电子邮件导入文件      </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/04/16516688928219.jpg"></p><h2 id="Uno-Calculator"><a href="#Uno-Calculator" class="headerlink" title="Uno Calculator"></a>Uno Calculator</h2><p>Uno Calculator，这是 iPad 上一款免费的计算器 App，外观设计很像 Win10 自带的计算器。   </p><p>用过 Win10 上的计算器的朋友，想必对下图的 App 界面并不陌生。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/04/16516691992097.jpg"></p><p>说一个冷知识：用 iPad 很久之后，我才意识到原来 iPad 上并没有内置类似 iPhone 的计算器 App，如果想用 iPad 来做简单的计算，要么使用 Spotlight，要么就是得在 iPad 上额外安装一个计算器的 App。  </p><p>除了这里说到的 Uno Calculator，我之前还介绍过另外一个 iPad 上的计算器 App——<strong>微软数学</strong>。   </p><p>微软数学的特色在于，它可以识别你手写的数学符号或表达式，并返回最终的计算结果。   </p><h2 id="招行-App-X-iPhone-NFC-读取"><a href="#招行-App-X-iPhone-NFC-读取" class="headerlink" title="招行 App X iPhone NFC 读取"></a>招行 App X iPhone NFC 读取</h2><p>因为很久以前办的身份证过期了，前阵子收到不少银行发来的信息，让我自行到手机银行 App 里更新一下身份证信息，其中就包含招商银行。  </p><p>在招行 App 更新身份证信息时，第一次用上了下图的功能「<strong>身份证识读</strong>」，只需要将身份证放在手机背面摄像头的位置，就能<strong>自动读取身份证的信息</strong>，而不是像其他银行 App 那样——还是停留在手机拍照上传的旧设计……     </p><p>不得不说，招行 App 确实走在国内众多银行的前列，拜托其他银行也向招行学学吧。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/04/img2265.JPEG" alt="IMG_2265"></p><p>第一次用上 iPhone 的这个功能，也有点让我出乎意料，问了网上的网友，说这是用到了 iPhone 的 NFC 功能。  </p><p>在网上查了一下信息，NFC 功能在 2014 年推出的 iPhone 6 上就有了，只不过最初这个功能仅用于苹果自家的 Apple Pay。   </p><p>等到 iOS 系统发展到 iOS 13，iPhone 的 NFC 功能就可以读取身份证信息了。</p><p>NFC 读取身份证信息，不止在招行 App 中可以使用，据说在出行应用——<strong>航旅纵横</strong> App 上也可以使用，有用过的朋友，可以到评论区留个言确认下。   </p><h2 id="将日历小程序添加为桌面小组件"><a href="#将日历小程序添加为桌面小组件" class="headerlink" title="将日历小程序添加为桌面小组件"></a>将日历小程序添加为桌面小组件</h2><p>倏地一下，五一假期就过完了，下一个让人有盼头的节日，只能是下半年的国庆了。   </p><p>今天距离 2022 年国庆假期还有 150 天。  </p><p>如果你希望可以随时看到距离国庆假期还有多少天，不妨可以考虑在桌面上添加一个下图右侧的小组件。  </p><p>添加小组件需要用到的工具和系统要求：     </p><ul><li>微信小程序：时刻助理   </li><li>iPhone App：Scriptable（免费）     </li><li>iOS 系统：不低于 iOS 14      </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/04/img2364.PNG" alt="IMG_2364"></p><p>如何在桌面上添加日历小组件，小程序「时刻助理」在详情页中提供了详细的说明，这里就不再复读了，感兴趣的朋友可以自行前往小程序查看。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/05/04/img9a107944581a1.jpeg" alt="IMG_9A107944581A-1"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>App</tag>
      
      <tag>iPad</tag>
      
      <tag>iPhone</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>怀旧！电脑上怎么玩4399小游戏？</title>
    <link href="/2022/04/16/2022-4-16-4399games/"/>
    <url>/2022/04/16/2022-4-16-4399games/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 各位晚上好。  </p><p>去年写过一篇<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649905749&idx=1&sn=6188e9922f00e6f9994b43ee8e2e4bab&chksm=83a85e78b4dfd76eb9ceda175d69fabef5dfcdb9a538bc89ce2ed05a60c1c6d31730051b6ad8&token=1621633249&lang=zh_CN#rd">关于 Flash 停用的文章</a>，介绍了 4 种应对 Flash 停用的方法，其中介绍了一个浏览器插件 Ruffle。  </p><p>今天想来纠正一下，即便是安装了 Ruffle 插件，在用到 Flash 技术的网页游戏页面，例如 4399 小游戏，还是会无法正常加载，导致玩不了游戏。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/16/16501096533005.jpg"></p><p>对于这个问题，我找到了两个解决方法，希望能帮到想玩网页小游戏的朋友。  </p><h2 id="换用另一个在线游戏网站"><a href="#换用另一个在线游戏网站" class="headerlink" title="换用另一个在线游戏网站"></a>换用另一个在线游戏网站</h2><p>yikm：一个提供了多款小霸王游戏的在线网站，例如超级玛丽、坦克大战、魂斗罗、雪人兄弟、冒险岛、双截龙、拳皇系列等。   </p><p>在这个网站，我试着搜了一下 4399 有的「死神VS火影」，结果还真有，它提供了两个版本——1.0 和 2.0。  </p><p>这两个版本的死神VS火影应该是用 H5 重制过了，不需要用到 Flash，所以在没装 Flash 插件的 Chrome 浏览器上可以正常运行。   </p><p>听到 死神VS火影1.0 开头的那段背景音乐，真的非常亲切，想起了 N 多年以前和我的老表第一次玩这个游戏的场景。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/16/16501112854630.jpg"></p><p>yikm 网址：<br><a href="https://www.yikm.net/">https://www.yikm.net/</a>     </p><h2 id="360-极速浏览器"><a href="#360-极速浏览器" class="headerlink" title="360 极速浏览器"></a>360 极速浏览器</h2><p>yikm 里面比较多的是小霸王上的游戏，如果你在里面没有搜到 4399 上面有的游戏，那还是要回到 4399 上面去玩。   </p><p>这时候就要安装另外一个浏览器——360 极速浏览器，这个浏览器内置了 Flash 插件，因此打开 4399 就可以直接开始游戏了。  </p><p>虽然不推荐把 360 极速浏览器作为主力的浏览器，但是我们可以用它来打开需要用到 Flash 技术的网站，无论是这里说到的 4399，还是其他比较古老的网站，至少它可以让你远离中国特供版的 Flash。  </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>Flash</tag>
      
      <tag>4399</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端框架 Vue3 学习笔记（一）</title>
    <link href="/2022/04/04/2022-4-4-vue3learnnote/"/>
    <url>/2022/04/04/2022-4-4-vue3learnnote/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>注：学习笔记来自 coderwhy 老师的 Vue3 课程。  </p><p>Vue 是一种面向数据的编程，在 Vue 应用中定义了数据和模板，Vue 就会自动把数据和模板关联起来，变成 HTML 页面想要展示的效果。   </p><p>Vue 这种面向数据编程的模式，是参考了 MVVM 这种设计模式。  </p><p>M 代表 Model，也就是数据。<br>V 代表 View，视图。对应 Vue 实例中的 template。<br>VM 代表 ViewModel，视图数据连接层。把数据和模板关联起来，是 Vue 的<strong>组件</strong>帮我们做的。  </p><p>下图把 Vue 应用返回的根组件，起名叫做 vm。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16466608169086.jpg"></p><h2 id="Vue-的生命周期函数"><a href="#Vue-的生命周期函数" class="headerlink" title="Vue 的生命周期函数"></a>Vue 的生命周期函数</h2><p>生命周期函数：在某一时刻会自动执行的函数。   </p><p>下面是 coderwhy 老师的视频课程：  </p><h2 id="Vue-在前端处于什么地位？"><a href="#Vue-在前端处于什么地位？" class="headerlink" title="Vue 在前端处于什么地位？"></a>Vue 在前端处于什么地位？</h2><p>主流的 3 大框架：Vue、React、Angular  </p><p>Angular：入门门槛较高，并且国内市场占有率较低；不否认本身是一个非常优秀的框架   </p><p>React：在国内外的市场占有率都是非常高的，作为前端工程师也是必须学习的一个框架   </p><p>Vue：在国内市场占有率是最高的，几乎所有的前端岗位都会对 Vue 有要求   </p><h3 id="学习哪一门语言更容易找到工作？"><a href="#学习哪一门语言更容易找到工作？" class="headerlink" title="学习哪一门语言更容易找到工作？"></a>学习哪一门语言更容易找到工作？</h3><p>找后端的工作：优先推荐 Java、其次推荐 Go、再次推荐 Node  </p><p>找前端的工作：优先推荐 JS(TypeScript)、其次 Flutter、再次 Android(Java、Kotlin)、iOS(OC、Swift)  </p><p>在国内找前端工作，优先推荐学习 Vue，其次是 React。  </p><h3 id="学习-Vue2-还是-Vue3？"><a href="#学习-Vue2-还是-Vue3？" class="headerlink" title="学习 Vue2 还是 Vue3？"></a>学习 Vue2 还是 Vue3？</h3><p>尤雨溪：<strong>直接学 Vue 3 就行了</strong>，基础概念是一样的。   </p><p>2020 年的 9 月 19 日，Vue3 正式发布，命名为 One Piece。  </p><p>Vue 3 带来了很多新的特性：更好的性能、更小的包体积、更好的 TypeScript 集成、更优秀的 API 设计。   </p><h3 id="Vue3-带来的变化（源码）"><a href="#Vue3-带来的变化（源码）" class="headerlink" title="Vue3 带来的变化（源码）"></a>Vue3 带来的变化（源码）</h3><ul><li>源码通过 monorepo 的形式来管理代码</li><li>源码使用 TypeScript 来进行重写（在 Vue2.x 的时候，Vue 使用 Flow 来进行类型检测）   </li></ul><h3 id="Vue3-带来的变化（性能）"><a href="#Vue3-带来的变化（性能）" class="headerlink" title="Vue3 带来的变化（性能）"></a>Vue3 带来的变化（性能）</h3><ul><li>使用 Proxy 进行数据劫持   </li><li>删除了一些不必要的 API   </li><li>编译方面的优化（生成 Block Tree、Slot 编译优化、diff 算法优化）  </li></ul><h3 id="Vue3-带来的变化（新的-API）"><a href="#Vue3-带来的变化（新的-API）" class="headerlink" title="Vue3 带来的变化（新的 API）"></a>Vue3 带来的变化（新的 API）</h3><ul><li>由 Options API 到 Composition API（Options API 包括 data、props、methods、computed、生命周期等等选项）   </li><li>Hooks 函数增加代码的复用性（Vue2.x 通常通过 mixins 在多个组件之间共享逻辑）    </li></ul><h2 id="如何使用-Vue-呢？"><a href="#如何使用-Vue-呢？" class="headerlink" title="如何使用 Vue 呢？"></a>如何使用 Vue 呢？</h2><ul><li>通过 CDN 的方式引入   </li><li>下载 Vue 的 JS 文件，手动引入   </li><li>通过 npm 包管理工具安装使用   </li><li>直接通过 Vue CLI 创建项目，并且使用它    </li></ul><h3 id="CDN-引入"><a href="#CDN-引入" class="headerlink" title="CDN 引入"></a>CDN 引入</h3><p>CDN 称之为内容分发网络（Content Delivery Network 或 Content Distribution Network，缩写 CDN）。  </p><ul><li>CDN 是指通过相互连接的网络系统，利用最靠近每个用户的服务器；   </li><li>更快、更可靠地将音乐、图片、视频、应用程序及其他文件发送给用户；  </li><li>来提供高性能、可扩展性及低成本的网络内容传递给用户  </li></ul><p>常用的 CDN 服务器可以大致分为两种：   </p><ul><li>自己的 CDN 服务器</li><li>开源的 CDN 服务器：国际上使用比较多的是 unpkg、JSDelivr、cdnjs  </li></ul><p>Vue 的 CDN 引入：   </p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://unpkg.com/vue@next&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h2 id="MVVM-模型"><a href="#MVVM-模型" class="headerlink" title="MVVM 模型"></a>MVVM 模型</h2><p>MVC 和 MVVM 都是一种软件的体系结构。   </p><p>MVC 是 Model-View-Controller 的简称，在前期被使用的架构模式，比如 iOS、前端；   </p><p>MVVM 是 Model-View-ViewModel 的简称，是目前非常流行的架构模式。  </p><p>通常情况下，我们也经常称 Vue 是一个 MVVM 的框架。   </p><p>Vue 官方其实有说明：Vue 虽然并没有完全遵守 MVVM 的模型，但是整个设计是受到它的启发的。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16470544025119.jpg"></p><h3 id="template-属性"><a href="#template-属性" class="headerlink" title="template 属性"></a>template 属性</h3><p>HTML 原生提供了 <code>&lt;template&gt;</code> 标签，只不过 template 标签包含的内容，是不会被浏览器渲染的，它里面的内容可以被 js 读取。  </p><p>template 的两种写法：  </p><ul><li>使用 script 标签（带有两个属性，一个是 <code>type=&quot;x-template&quot;</code>，一个是 id）   </li><li>使用 template 标签（一个 id 属性）  </li></ul><h3 id="data-属性"><a href="#data-属性" class="headerlink" title="data 属性"></a>data 属性</h3><p>data 属性：传入一个函数，并且该函数需要返回一个对象。  </p><p>在 Vue2.x 中，data 可以传入一个对象（虽然官方推荐是一个函数）；<br>在 Vue3.x 中，必须传入一个函数，否则浏览器就会报错。   </p><p>data 中返回的对象会被 <strong>Vue 的响应式系统劫持</strong>，之后<strong>对该对象的修改或访问</strong>，都会在劫持中被处理。   </p><h3 id="methods-属性"><a href="#methods-属性" class="headerlink" title="methods 属性"></a>methods 属性</h3><p>methods 属性：传入一个对象，在这个对象中可以定义很多方法。   </p><p>在该方法中，我们可以<strong>使用 this 关键字</strong>来直接访问到 data 中返回的对象的属性。   </p><p>官方文档中有这么一段话：  </p><blockquote><p>methods 中定义的函数，不能使用箭头函数，理由是<strong>箭头函数绑定了父级作用域的上下文</strong>，所以 this 将不会按照期望指向组件实例，<code>this.a</code> 将是 undefined。   </p></blockquote><p>问题：  </p><ul><li>为什么不能使用箭头函数？   </li><li>不使用箭头函数的情况下，this 到底指向的是什么？（可以作为一道面试题）  </li></ul><p>为什么不能使用箭头函数？   </p><p>如果使用箭头函数，这个 this 会指向 window，而不是 data 字段中对象返回的属性。   </p><pre><code class="hljs js">methods: &#123;    btnClick: <span class="hljs-function">() =&gt;</span> &#123;        <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>);    &#125;&#125;</code></pre><p>为什么是 window 呢？  </p><p>这里涉及箭头函数使用 <strong>this 的查找规则</strong>，它会在自己的上层作用域中来查找 this；最终刚好找到 script 作用域中的 this，所以就是 window。  </p><p>箭头函数中的 this 没有做任何的绑定，它会往上层作用域找（一层一层找），最终到达顶层作用域，在 script 标签这一层，找到 window。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16470613709221.jpg"></p><p>this 到底是如何查找和绑定的呢？   </p><h3 id="其他属性"><a href="#其他属性" class="headerlink" title="其他属性"></a>其他属性</h3><p>props、computed、watch、emits、setup 等等，也包含很多的生命周期函数。  </p><h2 id="Vue3-源码"><a href="#Vue3-源码" class="headerlink" title="Vue3 源码"></a>Vue3 源码</h2><p>GitHub 地址：<a href="https://github.com/vuejs/core">https://github.com/vuejs/core</a>     </p><p>Vue 的源代码是通过 yarn 进行管理。  </p><p>终端需要安装 yarn，安装的命令：             </p><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> yarn -g</code></pre><p>从 GitHub 仓库直接下载 Vue3 源码的压缩包，需要在终端中安装一些额外的东西： </p><p>进入 Vue3 源码解压后所在的路径，运行命令     </p><pre><code class="hljs cmake">yarn <span class="hljs-keyword">install</span></code></pre><p>调试代码的步骤：         </p><p>勘误：下面的那一行代码，位于 <code>package.json</code> 文件中。    </p><p>修改之后，运行命令 <code>yarn dev</code>，执行打包操作。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16470587663007.jpg"></p><h2 id="Vue-基础-模板语法"><a href="#Vue-基础-模板语法" class="headerlink" title="Vue 基础 - 模板语法"></a>Vue 基础 - 模板语法</h2><h3 id="VS-Code-添加代码片段"><a href="#VS-Code-添加代码片段" class="headerlink" title="VS Code 添加代码片段"></a>VS Code 添加代码片段</h3><p>生成代码片段的在线工具：<a href="https://snippet-generator.app/">https://snippet-generator.app/</a>  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16470753100267.jpg"></p><p>使用方法：将写好的一整个 html 代码复制到左侧的窗口，就会自动生成代码片段。  </p><p>在顶部两个输入框分别输入「代码片段的名称」、「快速插入代码片段的命令」   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16470760844594.jpg"></p><p>回到 VS Code，选择 首选项 &gt;&gt; 用户片段，搜索 <code>html.json</code>，将复制的代码片段粘贴到其他的大括号即可。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16470766359128.jpg"></p><p>VS Code 开启自动保存的方法：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16470765239563.jpg"></p><h3 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h3><p>React 的开发模式（了解）：  </p><ul><li>React 使用的是 jsx，所以对应的代码都是编写的类似于 js 的一种语法；  </li><li>之后通过 Babel 将 jsx 编译成 React.createElement 函数调用。  </li></ul><p>jsx 语法：将 js 和 html 融合在一起的书写方式  </p><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>    &#125;</code></pre><p>Vue 也支持 jsx 的开发模式：  </p><p>但多数情况下，使用<strong>基于 HTML 的模板语法</strong>；<br>在模板中，允许开发者以声明式的方式将 <strong>DOM</strong> 和<strong>底层组件实例的数据</strong>绑定在一起；<br>在底层的实现中，Vue 将模板编译成虚拟 DOM 渲染函数。      </p><p>下面是模板语法的例子：   </p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> @<span class="hljs-attr">click</span> <span class="hljs-attr">v-bind</span> <span class="hljs-attr">v-once</span>&gt;</span>    &#123;&#123;&#125;&#125;    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></code></pre><h3 id="v-bind-的属性绑定"><a href="#v-bind-的属性绑定" class="headerlink" title="v-bind 的属性绑定"></a>v-bind 的属性绑定</h3><p>Vue2 template模板中只能有一个根元素，多个元素得包裹到一个div标签里；<br>Vue3 允许template模板中有多个根元素。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16471028032192.jpg"></p><p>v-bind 绑定 class 有两种方式：   </p><ul><li>对象语法   </li><li>数组语法</li></ul><p>数组语法，数组中可以包含三元表达式，也可以包含对象。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16471394179750.jpg"></p><p>v-bind 绑定 style 介绍   </p><p>v-bind:style 绑定 CSS 内联样式。   </p><p>CSS property 名可以用<strong>驼峰式</strong>(camelCase)或<strong>短横线分隔</strong>(kebab-case)来命名。      </p><p>绑定 class 有两种方式：     </p><ul><li>对象语法</li><li>数组语法   </li></ul><p>v-bind 动态绑定属性：绑定的属性名是不确定的，即用户自定义的属性名。   </p><p>写法：  </p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">:</span>[<span class="hljs-attr">PropertyName</span>]=<span class="hljs-string">&quot;PropertyValue&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>data() &#123;<span class="javascript">    PropertyName: <span class="hljs-string">&quot;自定义的属性名&quot;</span></span><span class="javascript">    PropertyValue: <span class="hljs-string">&quot;属性值&quot;</span></span>&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>v-bind 直接绑定一个对象：将一个对象的所有属性，绑定到 html 元素上的所有属性。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16471626696660.jpg"></p><h3 id="v-on-绑定事件"><a href="#v-on-绑定事件" class="headerlink" title="v-on 绑定事件"></a>v-on 绑定事件</h3><p>前端开发中，需要经常和用户进行各种各样的<strong>交互</strong>，这时就必须监听用户发生的事件，比如：      </p><ul><li>点击</li><li>拖拽   </li><li>键盘事件等   </li></ul><p>在 Vue 中如何监听事件呢？使用 v-on 指令。   </p><p>v-on 可以绑定单个事件（单个函数），也可以绑定内联表达式(inline statement)和对象。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16471817367790.jpg"></p><p>v-on 的参数传递   </p><p>v-on 绑定的函数需要传入多个对象的时候，event 对象前面要加多一个美元符号 $   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16471824562895.jpg"></p><p>v-on 的修饰符  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16471826574713.jpg"></p><h2 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h2><p>Vue 提供了下面的指令来进行条件判断：   </p><ul><li>v-if   </li><li>v-else   </li><li>v-else-if   </li><li>v-show   </li></ul><h3 id="v-if-和-template-元素结合使用"><a href="#v-if-和-template-元素结合使用" class="headerlink" title="v-if 和 template 元素结合使用"></a>v-if 和 template 元素结合使用</h3><p>如果我们希望批量显示/隐藏多个元素，一般是在 template 中使用 div 元素进行包裹，但这样用于包裹的 div 最终会被渲染出来，增加了一个额外的 div 标签。    </p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;isShow&quot;</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>哈哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>哈哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>哈哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>呵呵呵呵<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>呵呵呵呵<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>呵呵呵呵<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16471904822289.jpg"></p><p>template 元素中可以嵌套 template 元素，它可以当做<strong>不可见的包裹元素</strong>，并且添加 v-if 指令，但是最终 template 不会被渲染出来，它有点类似于小程序中的 block。  </p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;isShow&quot;</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>哈哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>哈哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>哈哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-else</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>呵呵呵呵<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>呵呵呵呵<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>呵呵呵呵<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16471907753775.jpg"></p><h3 id="v-show-和-v-if-的区别"><a href="#v-show-和-v-if-的区别" class="headerlink" title="v-show 和 v-if 的区别"></a>v-show 和 v-if 的区别</h3><p>用法上的区别：   </p><ul><li>v-show 不支持 template;   </li><li>v-show 不可以和 v-else 一起使用  </li></ul><p>本质上的区别：  </p><ul><li>v-show 元素无论是否需要显示到浏览器上，它的 DOM 实际都是有渲染的，只是通过 CSS 的 display 属性来进行切换；  </li><li>v-if 为 false 时，其对应的元素压根不会被渲染到 DOM 中。   </li></ul><p>开发中如何进行选择呢？  </p><ul><li>如果我们的元素需要在显示和隐藏之间频繁切换，那么使用 v-show（通过 CSS 来实现显示和隐藏间的切换，不会那么耗费性能）；      </li><li>如果不会频繁地发生切换，那么使用 v-if。  </li></ul><h3 id="v-for-列表渲染"><a href="#v-for-列表渲染" class="headerlink" title="v-for 列表渲染"></a>v-for 列表渲染</h3><p>v-for 支持遍历数组、对象和数字。  </p><p>v-for 遍历对象，支持有一二三个参数：  </p><ul><li>一个参数：value in object    </li><li>二个参数：(value, key) in object   </li><li>三个参数：(value, key, index) in object     </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16473058251414.jpg"></p><h3 id="v-for-中的-key-是什么？"><a href="#v-for-中的-key-是什么？" class="headerlink" title="v-for 中的 key 是什么？"></a>v-for 中的 key 是什么？</h3><p><strong>认识 VNode</strong>  </p><p>VNode 的全称是 Virtual Node，也就是虚拟节点。   </p><p>事实上，无论是组件还是元素，它们最终在 Vue 中表示出来的都是一个个 VNode；  </p><p>VNode 的本质是一个 JS 对象；  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16473642423596.jpg"></p><p><strong>虚拟 DOM</strong></p><p>虚拟 DOM：多个 VNode 形成的树结构  </p><p>虚拟 DOM 最大的优点在于，可以做<strong>跨平台</strong>，可以在服务端渲染，可以做移动端    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16473643775064.jpg"></p><p>Vue 中对于列表的更新是如何操作的呢？   </p><p>Vue 对于有 key 和没有 key 会调用两个不同的方法：  </p><p>有 key，就使用 patchKeyedChildren 方法；<br>没有 key，那么就使用 patchUnkeyedChildren 方法。   </p><h3 id="Vue-的-diff-算法"><a href="#Vue-的-diff-算法" class="headerlink" title="Vue 的 diff 算法"></a>Vue 的 diff 算法</h3><p>diff 算法用来比较新旧两个 VNode 列表。  </p><p>比较两个新旧节点的类型 type 和 key 是否相同。  </p><p>type 和 key 都一样的话，节点是不需要进行更新的。         </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16475309445882.jpg"></p><p>如果新节点比旧节点多，会<strong>挂载</strong>(mount)新的节点。<br>如果旧节点比新节点多，会<strong>卸载/销毁</strong>(unmount)旧的、多余的节点。    </p><p>最后一步：新旧节点的排序比较混乱，尽可能地移动节点，移除新节点中没有的旧节点，新增旧节点中没有的新节点。  </p><p>尽可能在旧的节点列表里面，找到新的列表中对应的节点，比如新的节点里面有一个 h，就会尽可能地在旧节点里面找到 h。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16475342142617.jpg"></p><p>patch：  </p><p>如果 n1 非空，就进行更新操作；<br>如果 n1 为 null，就进行挂载操作。   </p><h3 id="computed-计算属性"><a href="#computed-计算属性" class="headerlink" title="computed 计算属性"></a>computed 计算属性</h3><p>对 data 中的数据进行复杂处理（对数据进行运算后再在模板中使用的情况），会用到计算属性。   </p><p>复杂 data 的处理方式    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16475799391071.jpg"></p><p>计算属性的用法：  </p><ul><li>选项：computed   </li><li>类型：{[key: string]: Function | {get: Function, set: Function}}   </li></ul><p>key 的值是一个函数或者对象。  </p><p>插值语法(Mustache语法)的 3 个缺点：     </p><ul><li>模板中存在大量的复杂逻辑，不便于维护（模板中使用表达式的初衷是用于简单的计算）；          </li><li>当有多次一样的逻辑时，存在重复的代码；</li><li>多次使用的时候，很多运算需要多次执行，<strong>没有缓存</strong></li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16476228150335.jpg"></p><p>计算属性的缓存：  </p><ul><li>计算属性会基于它们的依赖关系进行缓存</li><li>在数据不发生变化时，计算属性是不需要重新计算的    </li><li>但如果依赖的<strong>数据发生变化</strong>，在使用时，计算属性依然会重新进行计算   </li></ul><h3 id="计算属性的-setter-和-getter-方法"><a href="#计算属性的-setter-和-getter-方法" class="headerlink" title="计算属性的 setter 和 getter 方法"></a>计算属性的 setter 和 getter 方法</h3><p>计算属性的完整写法，应该是包含 setter 和 getter 方法的，需要写成<strong>对象</strong>的形式，但我们一般只用到 getter 方法，所以就会写成<strong>函数</strong>的形式，这个函数就是 getter 方法。  </p><p>老师上课的笔记：计算属性在大多数情况下，只需要一个 getter 方法即可，所以我们会<strong>将计算属性直接写成一个函数</strong>。     </p><p>下面是计算属性的完整写法：  </p><p>给计算属性传参（赋值）的时候，会调用计算属性的 setter 方法。       </p><pre><code class="hljs js">computed: &#123;    fullName: &#123;        set: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">newValue</span>) </span>&#123;            <span class="hljs-built_in">console</span>.log(newValue);        &#125;,        get: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.firstName + <span class="hljs-string">&quot; &quot;</span> + <span class="hljs-built_in">this</span>.lastName        &#125;    &#125;&#125;</code></pre><p>下面是计算属性的简略写法（只用到 getter 方法）：    </p><pre><code class="hljs js">computed: &#123;    fullName() &#123;        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.firstName + <span class="hljs-string">&quot; &quot;</span> + <span class="hljs-built_in">this</span>.lastName          &#125;&#125;</code></pre><h3 id="认识侦听器-watch"><a href="#认识侦听器-watch" class="headerlink" title="认识侦听器 watch"></a>认识侦听器 watch</h3><p>在某些情况下，我们希望在<strong>代码逻辑</strong>中监听某个数据的变化，这个时候就需要用侦听器 watch 来完成了。     </p><p>侦听器的用法：  </p><ul><li>选项：watch   </li><li>类型：{[key:string]: string|Function|Object|Array}   </li></ul><p>watch 后面跟一个对象，对象里面是一个键值对，值可以是函数，也可以是字符串/对象/数组。    </p><p>侦听器的使用场景：侦听当 data 里面的数据发生变化时，想要进行一些<strong>逻辑处理</strong>（JavaScript，例如向服务器发送网络请求）    </p><p>watch 是 Vue 实例中的一个 option。   </p><p>watch 中的 question 侦听 data 中的属性的名称。    </p><p>watch 可以调用 methods 中定义的函数。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16476678949655.jpg"></p><p>上图中的 <code>你问题$&#123;this.question&#125;的回答是 哈哈哈哈哈哈</code> 是 ES6 中的模板字符串语法，可以很方便地进行字符串的拼接。   </p><p><strong>字符串拼接表达式</strong>的时候，可以使用 ${} 来拼接。   </p><h3 id="侦听器的配置选项"><a href="#侦听器的配置选项" class="headerlink" title="侦听器的配置选项"></a>侦听器的配置选项</h3><ul><li>深度侦听</li><li>立即执行   </li></ul><p>下图的 info 是一个来自 data 中的对象，当对象里的一个键值对发生变化、而非整个对象发生变化时，watch 在默认情况下，无法监听到内部属性的变化。  </p><p>此时就需要给 watch 配置一个 <strong>deep</strong> 选项，实现深度侦听。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16476783824194.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16476789743188.jpg"></p><h3 id="侦听器-watch-的其他方式"><a href="#侦听器-watch-的其他方式" class="headerlink" title="侦听器 watch 的其他方式"></a>侦听器 watch 的其他方式</h3><p>侦听器的其他写法：  </p><p>使用 $watch 的 API，需要配合<strong>生命周期函数</strong>一起使用         </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16476795876487.jpg"></p><p>生命周期函数与实例中的 data()、methods 选项处于同一层级。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16476805015043.jpg"></p><h3 id="浅拷贝和深拷贝"><a href="#浅拷贝和深拷贝" class="headerlink" title="浅拷贝和深拷贝"></a>浅拷贝和深拷贝</h3><p><strong>浅拷贝</strong>在堆内存中的表现：  </p><p>浅拷贝只会拷贝第一层，如果内部嵌套了对象，还是会指向对象原来的内存地址。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16476928211960.jpg"></p><p>那如果要实现深拷贝，该怎么办呢？  </p><p>需要借助 JSON 的两个方法：   </p><ul><li>stringify()：先把对象转换成字符串     </li><li>parse()：转成字符串之后，再对字符串进行还原，就会在内存中生成一个新的对象    </li></ul><pre><code class="hljs js"><span class="hljs-keyword">const</span> info = &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;phh&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">28</span>, <span class="hljs-attr">friend</span>: &#123;<span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;angola peng&#x27;</span>&#125; &#125;;   <span class="hljs-keyword">const</span> obj = <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">JSON</span>.stringify(info));</code></pre><p>经过上面两步，就可以实现深拷贝，生成一个新的对象 obj。   </p><h2 id="Vue3-的表单"><a href="#Vue3-的表单" class="headerlink" title="Vue3 的表单"></a>Vue3 的表单</h2><p>v-model 本质上是语法糖。  </p><p>双向绑定：可以将 data 中的值绑定到 input(表单)的 value 属性上面，同时当 input 的 value 发生变化时，会将最新的值更新到 data 中。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16477028248176.jpg"></p><p><strong>v-model 修饰符 lazy</strong>  </p><p>修饰符 lazy 的本质：将 v-model 内部绑定的 input 事件切换为 <strong>change 事件</strong>，只有在提交(比如按下回车键)时才会触发。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16477392862009.jpg"></p><p>v-model 修饰符 number：将输入的文本转换为数字类型<br>v-model 修饰符 trim：去除用户输入的 value 前后的空格    </p><h2 id="Vue-组件化开发"><a href="#Vue-组件化开发" class="headerlink" title="Vue 组件化开发"></a>Vue 组件化开发</h2><p>组件化开发的思想：将页面拆分成一个个小的功能块，之后像<strong>搭积木</strong>一样，把组件组装到一起。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16477445942339.jpg"></p><p>现在整个大前端开发都是组件化的天下，无论是三大框架，还是跨平台方案的 Flutter，甚至是移动端都在转向组件化开发，包括小程序的开发也是采用组件化开发的思想。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16477449433308.jpg"></p><h3 id="注册组件的方式"><a href="#注册组件的方式" class="headerlink" title="注册组件的方式"></a>注册组件的方式</h3><p>注册组件分成两种：  </p><ul><li>全局组件：在任何其他的组件中都可以使用的组件   </li><li>局部组件：只有在注册的组件中才能使用的组件   </li></ul><p><strong>注册全局组件</strong>   </p><p>全局组件：注册的组件可以在任何的组件模板中使用。  </p><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = Vue.createApp(App);<span class="hljs-comment">// 伪代码</span><span class="hljs-comment">// app.component(&quot;组件名称&quot;, 组件对象)</span>app.component(<span class="hljs-string">&quot;component-a&quot;</span>, &#123;    template: <span class="hljs-string">&#x27;#component-a&#x27;</span>,    data() &#123;        <span class="hljs-keyword">return</span> &#123;            message: <span class="hljs-string">&#x27;hello world&#x27;</span>        &#125;    &#125;&#125;)</code></pre><p>实际开发中一般不推荐使用全局组件。   </p><p><strong>全局组件的逻辑</strong></p><p>组件本身也可以有自己的代码逻辑：比如 data、computed、methods 等。   </p><p><strong>组件的名称</strong>   </p><p>通过 <code>app.component</code> 注册组件时，第一个参数是<strong>组件的名称</strong>，定义组件名的方式有两种：   </p><p>方式一：使用 kebab-case（短横线分隔符）   </p><pre><code class="hljs js">app.component(<span class="hljs-string">&#x27;my-component-name&#x27;</span>, &#123;    <span class="hljs-comment">/* … */</span>&#125;)</code></pre><p>在引用这个组件时，也必须使用 kebab-case，例如 <code>&lt;my-component-name&gt;</code>      </p><p>方式二：使用 PascalCase（驼峰标识符）   </p><pre><code class="hljs js">app.component(<span class="hljs-string">&#x27;ComponentName&#x27;</span>, &#123;    <span class="hljs-comment">/* … */</span>&#125;)</code></pre><p>组件命名一般采用<strong>大驼峰</strong>，首字母必须是大写。        </p><p>采用驼峰命名的方式，在模板中引用这个组件时，有两种写法：  </p><ul><li><code>&lt;component-name&gt;</code>   </li><li><code>&lt;ComponentName&gt;</code>（实际开发中<strong>不推荐使用</strong>这种）        </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16477495715671.jpg"></p><p><strong>注册局部组件</strong>   </p><p>局部组件：通过 <strong>components 属性选项</strong>来注册，这个选项与之前的 data、methods、computed 处于同一层级。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16477501396196.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16477576075152.jpg"></p><h2 id="Vue-的开发模式"><a href="#Vue-的开发模式" class="headerlink" title="Vue 的开发模式"></a>Vue 的开发模式</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16477577826684.jpg"></p><p>单文件组件的后缀为 <code>.vue</code>，浏览器无法识别，因此还需要经过构建、打包的环节，借助 Webpack 或 Vite 将 <code>.vue</code> 转换为普通的 js 文件。   </p><pre><code class="hljs vue">&lt;template&gt;&lt;&#x2F;template&gt;&lt;script&gt;&lt;&#x2F;script&gt;&lt;style&gt;&lt;&#x2F;style&gt;</code></pre><h3 id="单文件的特点"><a href="#单文件的特点" class="headerlink" title="单文件的特点"></a>单文件的特点</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16477582245705.jpg"></p><h3 id="如何支持单文件组件"><a href="#如何支持单文件组件" class="headerlink" title="如何支持单文件组件"></a>如何支持单文件组件</h3><p>想要使用这一单文件组件的 <code>.vue</code> 文件，比较常见的两种方式：   </p><ul><li>方式一：使用 <strong>Vue CLI</strong> 来创建项目，项目会默认帮我们配置好所有的配置选项，可以在其中直接使用 <code>.vue</code> 文件（<strong>脚手架本质上也是基于 Webpack 的</strong>）  </li><li>方式二：自己使用 <strong>Webpack</strong> 或 rollup 或 Vite 这类打包工具，对其进行打包处理    </li></ul><p>最终，无论是后期做项目，还是在公司进行开发，通常都会采用 Vue CLI 的方式来完成。    </p><p>在学习阶段，为了更好地理解 Vue CLI 打包项目的过程，会先讲解一部分 Webpack 的知识。   </p><h2 id="Webpack"><a href="#Webpack" class="headerlink" title="Webpack"></a>Webpack</h2><p>Webpack 的官方文档：<a href="https://webpack.js.org/">https://webpack.js.org</a><br>Webpack 的中文官方文档：<a href="https://webpack.docschina.org/">https://webpack.docschina.org</a>    </p><p>Webpack 依赖 Node 环境，因此需要先安装 nodejs。    </p><p>下面的内容基于最新的 Webpack 5。  </p><h3 id="认识-Webpack"><a href="#认识-Webpack" class="headerlink" title="认识 Webpack"></a>认识 Webpack</h3><p>三大框架的脚手架都是基于 Webpack 的。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16477612953301.jpg"></p><p>Webpack is a static module bundler for modern JavaScript applications.        </p><p>Webpack 是一个静态的<strong>模块化</strong>打包工具。   </p><p>Webpack 默认支持各种模块化开发，包含 ES Module、CommonJS、AMD 等。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16477616392501.jpg"></p><h3 id="Vue-项目加载的文件有哪些？"><a href="#Vue-项目加载的文件有哪些？" class="headerlink" title="Vue 项目加载的文件有哪些？"></a>Vue 项目加载的文件有哪些？</h3><p>Webpack 会对哪些文件进行打包？  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16477618774866.jpg"></p><h3 id="Webpack-的安装"><a href="#Webpack-的安装" class="headerlink" title="Webpack 的安装"></a>Webpack 的安装</h3><p>Webpack 的安装目前分为两个：<strong>webpack</strong>、<strong>webpack-cli</strong>     </p><p>当我们在命令行中使用 webpack，并且传入一些参数时，就需要用到 <code>webpack-cli</code>。     </p><p>webpack 在执行时是依赖 webpack-cli 的，如果没有安装就会报错。   </p><p>webpack 和 webpack-cli 的关系：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16478785840276.jpg"></p><p>全局安装 webpack 和 webpack-cli：  </p><pre><code class="hljs avrasm">npm install webpack webpack-<span class="hljs-keyword">cli</span> -g</code></pre><p>老师视频中使用的版本：   </p><p>webpack 5.37.1<br>webpack-cli 4.7.0   </p><p>在实际开发中，很少会用全局的 webpack 来打包项目，一般都会针对项目单独安装一个 webpack 版本，这就需要用到局部 webpack。  </p><p>项目中会包含多个包(package)，使用 <code>package.json</code> 来管理这些包。  </p><p>生成 <code>package.json</code> 文件的方法：   </p><p>打开终端，输入 <code>npm init</code>，按下回车，需要给包起一个名字，接下去一路回车，就会生成 <code>package.json</code> 文件。   </p><p>这种生成 <code>package.json</code> 文件的方法，适用于文件包含有<strong>中文名称</strong>的情况。   </p><p>另外一个生成 <code>package.json</code> 文件的方式： </p><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> init -y</code></pre><p>-y 表示后面所有的选项都是 yes，可以快速创建 <code>package.json</code> 文件。   </p><p>局部安装的 Webpack 分为两类：   </p><ul><li>开发阶段依赖的 Webpack：开发者开发时使用的        </li><li>生产阶段依赖的 Webpack：项目正式上线后，面向用户的            </li></ul><p>在项目文件夹中直接运行 <code>npm install webpack webpack-cli</code>，默认安装生产依赖的 webpack（面向用户的）。    </p><p>开发时依赖的 Webpack 的安装命令：   </p><pre><code class="hljs q">npm install webpack webpack-cli --<span class="hljs-built_in">save</span>-<span class="hljs-built_in">dev</span></code></pre><p>上面的安装命令也可以简写成：       </p><pre><code class="hljs avrasm">npm install webpack webpack-<span class="hljs-keyword">cli</span> -D</code></pre><p>运行局部 Webpack 的命令：  </p><pre><code class="hljs ebnf"><span class="hljs-attribute">npx webpack</span></code></pre><p>Webpack 对项目进行打包，默认会去找 src 文件夹下面的 <code>index.js</code> 文件，这被称为<strong>入口文件</strong>。  </p><p>如果把 <code>index.js</code> 文件命名为其他的名字，例如 <code>main.js</code>，在运行打包命令的时候，要带上<strong>额外的参数</strong>，配置 <code>main.js</code>为入口文件：     </p><pre><code class="hljs awk">npx webpack --entry .<span class="hljs-regexp">/src/m</span>ain.js</code></pre><h3 id="webpack-配置文件"><a href="#webpack-配置文件" class="headerlink" title="webpack 配置文件"></a>webpack 配置文件</h3><p>项目文件中单独创建一个 <code>webpack.config.js</code>文件，来对 webpack 进行配置：   </p><p>出口 output 的 path 属性，它的值应该为<strong>绝对路径</strong>，即完整的文件路径。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16479085335494.jpg"></p><p>但这个绝对路径比较长，我们通常会用 Node 中的 path 模块，来简化绝对路径的写法。   </p><p>调用 path 模块的 resolve 方法，对两个路径进行拼接：   </p><pre><code class="hljs less"><span class="hljs-selector-tag">path</span><span class="hljs-selector-class">.resolve</span>(__dirname, <span class="hljs-string">&quot;./build&quot;</span>)</code></pre><p><code>__dirname</code> 是 <code>webpack.config.js</code> 文件所在的绝对路径，<code>./build</code>是打包后的文件存放位置的相对路径。   </p><p>将这两个路径拼接后，就可以找到打包文件所在的位置啦。   </p><p>配置文件的名称多数情况下为 <code>webpack.config.js</code>，如果你执意要更改文件的名称，例如更改为 <code>why.config.js</code>，需要在 <code>package.json</code>中作相应的调整，build 属性后面需要配置额外的参数：     </p><pre><code class="hljs 1c"><span class="hljs-string">&quot;build&quot;</span>: <span class="hljs-string">&quot;webpack --config why.config.js&quot;</span></code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16479958252520.jpg"></p><p>在 <code>package.json</code> 文件中配置好 webpack 和 webpack-cli 的依赖后，在终端输入 <code>npm install</code>，安装的就是局部的 webpack。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16480509148257.jpg"></p><h3 id="Webpack-打包的依赖关系图"><a href="#Webpack-打包的依赖关系图" class="headerlink" title="Webpack 打包的依赖关系图"></a>Webpack 打包的依赖关系图</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16480531421554.jpg"></p><h3 id="css-loader-的使用"><a href="#css-loader-的使用" class="headerlink" title="css-loader 的使用"></a>css-loader 的使用</h3><p>Webpack 需要 loader 来加载 CSS 文件。   </p><p>安装 css-loader：  </p><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> css-loader -D</code></pre><p>loader 是什么呢？  </p><ul><li>loader 可以用于对模块的源代码进行转换   </li><li>我们可以<strong>将 css 文件也看成是一个模块</strong>，我们是通过 import 来加载这个 css 模块的    </li><li>在加载这个 css 模块时，Webpack 其实并不知道如何对其进行加载，必须制定对应的 loader 来完成这个功能   </li></ul><p><strong>loader 的配置</strong>    </p><p>css-loader 加载 css 文件的 3 种方式：  </p><ul><li>内联方式   </li><li>CLI 方式（Webpack5 中不再使用）    </li><li>配置方式（多采用这一种）</li></ul><p>内联方式：使用较少，因为不方便管理。</p><p>在引入的 css 样式前加上使用的 loader，并且使用英文感叹号分割：  </p><pre><code class="hljs xl"><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;css-loader!../css/style.css&quot;</span></code></pre><p><strong>loader 的配置方式：</strong>    </p><p>在 <code>webpack.js.config</code> 中写明我们用到的 loader。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16481312600912.jpg"></p><h3 id="认识-style-loader"><a href="#认识-style-loader" class="headerlink" title="认识 style-loader"></a>认识 style-loader</h3><p>前面的 css-loader 只负责将 <code>.css</code> 文件进行解析，并不会将解析之后的 css 插入到页面中。    </p><p>如果想要把完成插入 style 的操作（将解析后的 css 插入到 html 中的 style 标签），还需要用到另外一个 loader——<strong>style-loader</strong>。   </p><p>安装 style-loader：  </p><pre><code class="hljs sql">npm <span class="hljs-keyword">install</span> <span class="hljs-keyword">style</span>-loader -D</code></pre><p>两个 loader 的执行顺序：先执行 css-loader，再执行 style-loader。   </p><p>但在 use 数组中，它是从后往前执行 loader 的，因此先执行的 css-loader 要写在后面。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16481343531644.jpg"></p><h3 id="如何处理-less-文件"><a href="#如何处理-less-文件" class="headerlink" title="如何处理 less 文件"></a>如何处理 less 文件</h3><p>less 文件要先转换为普通的 CSS 文件，转换需要用到一个工具 less compiler，简称 lessc。  </p><p>lessc 与 Webpack 没有任何关系，它是一个独立的工具。   </p><p>局部安装 lessc：   </p><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> <span class="hljs-keyword">less</span> -D</code></pre><p>将 lessc 工具与 Webpack 关联起来，需要安装 less-loader。实际上 less-loader 依赖 lessc 工具。   </p><p>局部安装 less-loader：  </p><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> <span class="hljs-keyword">less</span>-loader -D</code></pre><p>之后同样需要在 <code>webpack.config.js</code> 文件中进行配置，处理 less 文件需要用到 3 个 loader：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16481357156386.jpg"></p><h3 id="认识-PostCSS-工具"><a href="#认识-PostCSS-工具" class="headerlink" title="认识 PostCSS 工具"></a>认识 PostCSS 工具</h3><p>PostCSS 是一个<strong>通过 JS 来转换 css 样式</strong>的工具；<br>这个工具可以帮助我们进行一些 CSS 的转换和适配，比如自动添加**浏览器前缀(user-select)**、css 样式的重置；<br>但是实现这些功能，我们需要借助 PostCSS 对应的插件。   </p><p>使用 PostCSS 的两个步骤：   </p><ol><li>查找 PostCSS 在构建工具中的扩展，比如 webpack 中的 postcss-loader    </li><li>选择可以添加你需要的 PostCSS 相关的插件，例如 autoprefixer 插件       </li></ol><p>PostCSS 工具与 Webpack 无关，可以独立使用。   </p><p>安装 PostCSS：  </p><pre><code class="hljs avrasm">npm install postcss postcss-<span class="hljs-keyword">cli</span> -D</code></pre><p>安装 autoprefixer 插件：  </p><pre><code class="hljs angelscript">npm install <span class="hljs-built_in">auto</span>prefixer -D</code></pre><p>在 Webpack 中使用 PostCSS，还需要安装 postcss-loader：   </p><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> postcss-loader -D</code></pre><p><code>webpack.config.js</code> 中配置 postcss-loader 时，需要额外配置使用到的 autoprefixer 插件：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16481376464344.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16481376630475.jpg"></p><p>另外一个 postcss 插件：postcss-preset-env  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16481378414151.jpg"></p><p>现代的 CSS 特性：<strong>最新的 CSS 中表示颜色的十六进制可以有 8 位，例如 #12345678</strong>，而不是只能有 6 位——#123456。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16481382257857.jpg"></p><p>局部安装插件：   </p><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> postcss-preset-env -D</code></pre><h2 id="Webpack-打包其他资源"><a href="#Webpack-打包其他资源" class="headerlink" title="Webpack 打包其他资源"></a>Webpack 打包其他资源</h2><h3 id="file-loader"><a href="#file-loader" class="headerlink" title="file-loader"></a>file-loader</h3><p>加载图片这种资源，需要使用 file-loader。  </p><p>引用图片的两种方式：   </p><ul><li>一种是给 div 设置图片背景，在 CSS 中使用 <code>background-image: url()</code>    </li><li>一种是在 img 元素的 src 属性引入图片         </li></ul><p>在 CSS 中使用 <code>background-image: url()</code> 的配置方式：    </p><p>Webpack5 中使用 file-loader 打包图片，需要添加额外的配置：  </p><ul><li>options 中关闭 esModule 模块（file-loader 默认使用 ES6 模块解析），启用 file-loader 的 CommonJS 模块（不配置这个，html 文件中图片路径不对）   </li><li>后面要加多一个 type，否则会打包生成两张图片      </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482304113249.jpg"></p><p>下图来自 Stackoverflow<br><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482304845203.jpg"></p><p>在 img 元素的 src 属性引入图片的配置方法：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482322835534.jpg"></p><p>在 template 中引用图片，图片会通过 vue-loader 进行编译。   </p><h3 id="图片打包后生成文件的命名"><a href="#图片打包后生成文件的命名" class="headerlink" title="图片打包后生成文件的命名"></a>图片打包后生成文件的命名</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482325495717.jpg"><br>上图有个错别字，截图 ▶ 截取。   </p><p>file-loader 打包后的图片会放在 build(dist) 文件夹中，如果想把打包后的文件都归集到 img 文件中，需要给 file-loader 配置 <strong>outputPath</strong> 字段。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482605312293.jpg"></p><p>对打包后的图片进行命名       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482613068661.jpg"></p><p>实际开发中，可以把 outputPath 去掉，与 name 字段进行合并，同时指定保存的文件夹和打包生成的文件名。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482622582028.jpg"></p><h3 id="url-loader"><a href="#url-loader" class="headerlink" title="url-loader"></a>url-loader</h3><p>url-loader 和 file-loader 的工作方式是相似的，但是可以将较小的文件，转成 base64 的 URI。  </p><p>服务器「高并发」，经常会对<strong>小的图片</strong>进行处理，减少浏览器向服务器发送请求的次数：   </p><ul><li>精灵图：将多张小的图片合并为一张图   </li><li>字体图标：iconfont，矢量图    </li><li>对小的图片进行编码：编码成 base64 的 URI   </li></ul><p>安装 url-loader：  </p><pre><code class="hljs sql">npm <span class="hljs-keyword">install</span> <span class="hljs-keyword">url</span>-loader -D</code></pre><p>url-loader 和 file-loader 的区别：   </p><ul><li>想把全部图片打包，就用 file-loader</li><li>想把部分小图片使用 base64 编码，就用 url-loader   </li></ul><p>url-loader 配置时，需要增加一个字段 limit，划定使用 base64 编码的界限。  </p><p>如下图，当图片小于 100kb 时，使用 base64 进行编码。     </p><p> <img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482638055212.jpg"></p><h3 id="认识-asset-module-type"><a href="#认识-asset-module-type" class="headerlink" title="认识 asset module type"></a>认识 asset module type</h3><p>在 Webpack5 之前，加载资源需要使用一些 loader，比如 <strong>raw-loader、url-loader、file-loader</strong>；   </p><p>从 Webpack5 开始，我们可以直接使用**资源模块类型(asset module type)**，来替代上面的这些 loader。    </p><p><strong>使用 asset module type，不需要安装任何模块</strong>，可以直接使用。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482640706763.jpg"></p><p><code>type: &quot;asset&quot;</code> 可以像之前的 url-loader 一样，对小于 100kb 的图片使用 base64 编码，不过它的配置方式比较特殊：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482648072239.jpg"></p><p>配置打包后的路径和文件名，使用字段 generator，需要注意的是，<strong>filename 中的扩展名 [ext] 前面不需要加英文句号</strong>。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482651041691.jpg"></p><h3 id="加载字体文件"><a href="#加载字体文件" class="headerlink" title="加载字体文件"></a>加载字体文件</h3><p>在 src 文件中放入字体文件夹 font，里面包含 3 个字体文件和 2 个 css 文件。</p><p>接着在 <code>element.js</code> 中导入 <code>iconfont.css</code> 文件。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482736683933.jpg"></p><p>加载字体文件有两种方式：  </p><ul><li>使用 file-loader 模块（参考加载图片的写法）  </li><li>使用 Webpack5 内置的资源模块类型(asset module type)     </li></ul><p>在 <code>webpack.config.js</code> 中添加配置：  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482742769686.jpg"></p><h2 id="Webpack-插件"><a href="#Webpack-插件" class="headerlink" title="Webpack 插件"></a>Webpack 插件</h2><p>Webpack 的另一个核心是 Plugin。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482747955742.jpg"></p><h3 id="CleanWebpackPlugin"><a href="#CleanWebpackPlugin" class="headerlink" title="CleanWebpackPlugin"></a>CleanWebpackPlugin</h3><p>前面每次修改了一些配置，重新打包时，都需要手动删除  build 文件夹。  </p><p>我们可以借助一个插件 CleanWebpackPlugin，来帮我们自动删除之前打包的文件。   </p><p>安装插件：  </p><pre><code class="hljs sql">npm <span class="hljs-keyword">install</span> clean-webpack-<span class="hljs-keyword">plugin</span> -D</code></pre><p>安装插件之后，还需要在 <code>webpack.config.js</code> 中导入：   </p><pre><code class="hljs js"><span class="hljs-keyword">const</span> &#123; CleanWebpackPlugin &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;clean-webpack-plugin&quot;</span>);</code></pre><p>上面的 CleanWebpackPlugin 是一个类。  </p><p>导入后，在 <code>module.exports</code> 中使用插件：  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482756531403.jpg"></p><p>每次运行 <code>npm run build</code> 时，插件会自动删除之前打包生成的 build 文件夹，生成新的 build。  </p><h3 id="HtmlWebpackPlugin"><a href="#HtmlWebpackPlugin" class="headerlink" title="HtmlWebpackPlugin"></a>HtmlWebpackPlugin</h3><p>之前写的代码，html 文件都是没有打包到 build 文件夹中，如果要对放在根目录下的 html 进行打包，需要用到另外一个插件——HtmlWebpackPlugin。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482759272641.jpg"></p><p>配置 HtmlWebpackPlugin 插件：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482762310525.jpg"></p><p>配置好插件后，我们可以把之前放在根目录下的 <code>index.html</code> 文件删除，因为这个插件会在打包后的 build 文件中生成一个 <code>index.html</code>。 </p><p>自动生成的 <code>index.html</code> 文件，是根据 ejs 的一个模板来生成的。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482768532420.jpg"></p><p>自定义 HTML 模板    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482769331352.jpg"></p><p>可以在根目录下创建一个 public 文件夹，存放自定义的 html 模板。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482778952822.jpg"></p><p>在 <code>webpack.config.js</code> 的 HtmlWebpackPlugin 插件传入我们自定义的 html 模板：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482779270604.jpg"></p><p>之后 Webpack 进行打包时，就会以自定义的 html 模板为基础进行打包，而不是使用 HtmlWebpackPlugin 插件的 ejs 模板。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482770468083.jpg"></p><h3 id="CopyWebpackPlugin"><a href="#CopyWebpackPlugin" class="headerlink" title="CopyWebpackPlugin"></a>CopyWebpackPlugin</h3><p>放在 public 文件夹下的文件，例如 <code>favicon.ico</code>，一般在打包时会直接复制到 build 文件夹中。</p><p>要想实现<strong>自动复制（文件拷贝）</strong>，需要借助插件 CopyWebpackPlugin。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482864720518.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482807983680.jpg"></p><p>注意：直接使用最新版的 CopyWebpackPlugin 插件，打包时会报错，建议使用视频中 coderwhy 老师用到的 9.0.0 版本。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482850581542.jpg"></p><p>安装 CopyWebpackPlugin 插件：  </p><pre><code class="hljs angelscript">npm install copy-webpack-<span class="hljs-symbol">plugin@</span><span class="hljs-number">9.0</span><span class="hljs-number">.0</span> -D</code></pre><p>插件配置：  </p><p>在 <code>webpack.config.js</code> 中引入插件：  </p><pre><code class="hljs js"><span class="hljs-keyword">const</span> CopyWebpackPlugin = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;copy-webpack-plugin&#x27;</span>);</code></pre><p>接着在下面的插件中 new 一个插件：  </p><p>把 <code>favicon.ico</code> 从 public 复制到 build 文件夹，并忽略 public 文件夹中所有叫 <code>index.html</code> 的文件。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482853972994.jpg"></p><h3 id="Webpack-的-Mode-配置"><a href="#Webpack-的-Mode-配置" class="headerlink" title="Webpack 的 Mode 配置"></a>Webpack 的 Mode 配置</h3><p>不设置的话，默认是生产模式。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482880965326.jpg"></p><p>当我们把 mode 设置为 development(开发模式)，Webpack 会自动配置下面一大堆选项。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482881581774.jpg"></p><h2 id="Babel"><a href="#Babel" class="headerlink" title="Babel"></a>Babel</h2><p>Webpack 打包 js 和 <code>.vue</code> 文件。   </p><p>Babel 是一个工具链，可以将 ES6+ 的代码转换为向后兼容的 JS。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482911713645.jpg"></p><p>安装 babel：  </p><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> install @babel/core @babel/cli -D</code></pre><p>一个小例子：将使用 ES6 语法写的 <code>demo.js</code> 转换成 ES5 语法   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482939122966.jpg"></p><p>局部安装的 babel，在终端调用的时候，要用 npx 命令：   </p><pre><code class="hljs mipsasm">npx <span class="hljs-keyword">babel </span>demo.<span class="hljs-keyword">js </span>--out-<span class="hljs-keyword">dir </span><span class="hljs-keyword">dist </span></code></pre><p><code>--out-dir</code> 指定文件输出的目录，输出到 dist 文件夹。   </p><p>如果想直接指定输出的文件名，可以改写一下命令：  </p><pre><code class="hljs x86asm">npx babel demo<span class="hljs-number">.</span><span class="hljs-keyword">js</span> --<span class="hljs-keyword">out</span>-file <span class="hljs-keyword">test</span><span class="hljs-number">.</span><span class="hljs-keyword">js</span></code></pre><p>这样输出的 <code>test.js</code> 文件就和 <code>demo.js</code> 在同一个路径下。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16482930906558.jpg"></p><p>运行 babel 时，转换箭头函数，就需要配置用到的插件：  </p><pre><code class="hljs stata">npx babel demo.js --<span class="hljs-keyword">out</span>-<span class="hljs-keyword">file</span> <span class="hljs-keyword">test</span>.js --plugins=@babel/<span class="hljs-keyword">plugin</span>-transform-arrow-functions</code></pre><p>babel 转换 ES6 块级作用域插件：transform-block-scoping   </p><p>ES6 块级作用域，指的是 ES6 中的关键字 const、let。      </p><p>安装插件：  </p><pre><code class="hljs sql">npm <span class="hljs-keyword">install</span> @babel/<span class="hljs-keyword">plugin</span>-transform-<span class="hljs-keyword">block</span>-scoping -D</code></pre><p>在命令行中同时使用两个插件的写法，使用逗号进行分割：      </p><pre><code class="hljs stata">npx babel demo.js --<span class="hljs-keyword">out</span>-<span class="hljs-keyword">file</span> <span class="hljs-keyword">test</span>.js --plugins=@babel/<span class="hljs-keyword">plugin</span>-transform-arrow-functions,@babel/<span class="hljs-keyword">plugin</span>-transform-block-scoping</code></pre><h3 id="Babel-的预设-preset"><a href="#Babel-的预设-preset" class="headerlink" title="Babel 的预设 preset"></a>Babel 的预设 preset</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483088835337.jpg"></p><p>安装 Babel 预设： </p><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> install @babel/preset-env -D</code></pre><p>使用预设：  </p><pre><code class="hljs mipsasm">npx <span class="hljs-keyword">babel </span>demo.<span class="hljs-keyword">js </span>--out-file test.<span class="hljs-keyword">js </span>--presets=@<span class="hljs-keyword">babel/preset-env </span></code></pre><p>上面的命令就可以取代前面长长的命令啦，也不需要去安装两个插件，来分别实现 箭头函数、ES6 块级作用域 的转换。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483165117803.jpg"></p><h3 id="Babel-编译器执行原理（了解）"><a href="#Babel-编译器执行原理（了解）" class="headerlink" title="Babel 编译器执行原理（了解）"></a>Babel 编译器执行原理（了解）</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483448938446.jpg"></p><h3 id="Babel-loader"><a href="#Babel-loader" class="headerlink" title="Babel-loader"></a>Babel-loader</h3><p>Webpack 对代码进行打包时，并不会将使用 ES6 编写的代码转换成 ES5，这样会存在一个问题：  </p><p>如果用户使用的浏览器不支持 ES6 语法，就会导致无法正常使用我们的服务。   </p><p>babel-loader：将 Babel 和 Webpack 结合起来，加载所有 js 结尾的文件，如果文件中含有 ES6 语法编写的代码，就会将 ES6 语法转换成 ES5。   </p><p>安装 babel-loader：   </p><pre><code class="hljs mipsasm">npm <span class="hljs-keyword">install </span><span class="hljs-keyword">babel-loader </span>-D</code></pre><p>如果前面没有安装过 @babel/core，在安装 babel-loader 时也要同时安装：   </p><pre><code class="hljs mipsasm">npm <span class="hljs-keyword">install </span><span class="hljs-keyword">babel-loader </span>@<span class="hljs-keyword">babel/core </span>-D</code></pre><p>安装之后，在 <code>webpack.config.js</code> 中添加配置：  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483463722835.jpg"></p><p>因为用到的插件比较多，我们还可以使用 babel 预设，替代上面的插件：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483466039248.jpg"></p><h3 id="Babel-的配置文件"><a href="#Babel-的配置文件" class="headerlink" title="Babel 的配置文件"></a>Babel 的配置文件</h3><p>像之前学习的 postcss 一样，我们可以把放在 <code>webpack.config.js</code> 中的 babel 配置信息，放到一个单独的文件中。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483468582440.jpg"></p><p>更常见的是使用第一种配置文件，创建 <code>babel.config.js</code>文件。   </p><p>在根目录下创建 <code>babel.config.js</code>文件：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483471767368.jpg"></p><p>接着在 <code>webpack.config.js</code> 调整一下之前的配置，可以写得很简洁了：       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483472441529.jpg"></p><h2 id="Vue-源码的打包"><a href="#Vue-源码的打包" class="headerlink" title="Vue 源码的打包"></a>Vue 源码的打包</h2><p>首先要安装 Vue，在命令行中运行：  </p><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> vue</code></pre><p>这一次不需要在 vue 后面加上 <code>-D</code> 的参数，因为 Vue 不仅是在开发时需要用到，项目正式上线的时候，也会用到 Vue。  </p><p>Vue 有多个版本，大致分为两个： </p><ul><li>runtime + compiler(后面的 compiler 可以用来解析 Vue 代码中的 template 模板)</li><li>runtime-only(这个版本的体积比较小，不支持对 template 模板进行解析)     </li></ul><p>直接使用 <code>import &#123; createApp &#125; from &#39;vue&#39;</code> 引入的 Vue 是 runtime-only 的版本，无法解析 template 模板，最终在 html 页面无法显示出来。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483500443459.jpg"></p><p>Vue 和 Webpack 一起使用，引入时需要使用包含 compiler 的 Vue 版本：   </p><pre><code class="hljs clean"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue/dist/vue.esm-bundler&#x27;</span></code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483517602689.jpg"></p><p>Vue 开发过程中，有 3 种方式来编写 DOM 元素：   </p><ul><li>template 模板的方式（之前一直在用的方式）  </li><li>render 函数的方式      </li><li>通过 <code>.vue</code> 文件中的 template 元素来编写模板      </li></ul><p>方式一需要通过 Vue 源码中的 compiler 来对 template 模板进行解析；<br>方式三需要用到 vue-loader。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483521098331.jpg"></p><h3 id="VSCode-对-SFC-文件的支持"><a href="#VSCode-对-SFC-文件的支持" class="headerlink" title="VSCode 对 SFC 文件的支持"></a>VSCode 对 SFC 文件的支持</h3><p>SFC：单文件组件    </p><p>VS Code 中两个和 SFC 相关的插件：     </p><ul><li>Vetur    </li><li>Volar，Vue 官方推荐的插件</li></ul><h3 id="Vue-loader"><a href="#Vue-loader" class="headerlink" title="Vue-loader"></a>Vue-loader</h3><p>安装 Vue-loader，同样是开发时依赖：  </p><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> vue-loader -D</code></pre><p>配置 Vue-loader：  </p><p>在 <code>webpack.config.js</code> 中配置好规则，还需要引入一个 VueLoaderPlugin 插件。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483627350073.jpg"></p><p>控制台会有一个警告信息：  </p><p><code>__VUE_OPTIONS_API__</code>：是对 Vue2 进行适配的（Vue2 中会使用 Options，Vue3 开始就去掉了 Options）   </p><p><code>__VUE_PROD_DEVTOOLS__</code>：在生产环境是否使用 Vue 调试工具。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483623132086.jpg"></p><p>要去除这个警告信息，可以在 <code>webpack.config.js</code> 的 DefinePlugin 插件中进行配置。   </p><p>配置之后，重新进行打包，控制台就不会出现这个警告信息了。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483625001041.jpg"></p><p>安装 Vue-loader 之后，内部有一个 <code>@vue/compiler-sfc</code> 模块，会对 template 模板进行解析，这时就不需要用到 Vue 源码中的 compiler。  </p><p>因此，我们可以把最开始使用的 runtime + compiler <code>vue.esm-bundler</code> 版本，切换为 只包含 runtime 的 <code>vue</code> 版本。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483632760489.jpg"></p><h2 id="Webpack-搭建本地服务器"><a href="#Webpack-搭建本地服务器" class="headerlink" title="Webpack 搭建本地服务器"></a>Webpack 搭建本地服务器</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483722087543.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483725735450.jpg"></p><p>第一种开启 watch 的方式：在 <code>webpack.config.js</code> 的导出配置中，添加 <code>watch: true</code>   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483731701280.jpg"></p><p>在真实开发中，上面这种 watch 的配置方式，其实用得还是比较少。  </p><h3 id="webpack-dev-server"><a href="#webpack-dev-server" class="headerlink" title="webpack-dev-server"></a>webpack-dev-server</h3><p>上面的方式可以监听到文件的变化，但是事实上它本身是<strong>没有自动刷新浏览器</strong>的功能的：  </p><p>因为我们是借助 VS Code 中的 live-server 插件来完成自动刷新浏览器的；   </p><p>但是，我们希望在不使用 live-server 插件的情况下，可以具备 <strong>live reloading(实时重新加载)</strong> 的功能。  </p><p>安装 webpack-dev-server：   </p><pre><code class="hljs sql">npm <span class="hljs-keyword">install</span> webpack-dev-<span class="hljs-keyword">server</span> -D</code></pre><p>安装之后，在 <code>package.json</code> 文件的脚本字段，添加配置 <code>&quot;serve&quot;: &quot;webpack serve&quot;</code>。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483979958580.jpg"></p><p>serve通过 webpack-cli 来帮助我们做解析的。   </p><p>webpack-dev-serve 在编译之后不会写入到任何输出文件，而是将 bundle 文件保留在<strong>电脑内存</strong>中。webpack-dev-serve 使用了一个 memfs 库。</p><p>接着在终端运行 <code>npm run serve</code>，就能看到 Webpack 帮我们搭建的本地服务。  </p><p>这个本地服务是基于 Node 的 express 框架搭建的本地服务器。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16483984801008.jpg"></p><p>如果有些资源没有从 Webpack 打包的文件中加载到，就会从 devServer 的 static 中配置的文件夹寻找。  </p><p>浏览器向 express 服务器请求某个资源的时候，如果在打包后的资源中找不到，express 就会去 devServer 的 static 中配置的文件夹寻找。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16484760305252.jpg"></p><p>视频中老师用到的 contentBase 字段已经被弃用了。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16484761398900.jpg"></p><p>在真实开发中，如果<strong>希望有些资源在开发阶段暂时不要复制到打包的文件中，加快打包速度</strong>，等到上线(生产)阶段再作复制，就需要给 devServer 的 static 配置路径。   </p><p>开发阶段：devServe 的 static 配置文件夹路径 <code>./public</code><br>打包(生产)阶段：使用 CopyWebpackPlugin</p><h3 id="认识模块热替换-HMR"><a href="#认识模块热替换-HMR" class="headerlink" title="认识模块热替换(HMR)"></a>认识模块热替换(HMR)</h3><p>HMR 是 Hot Module Replacement，翻译为模块热替换。   </p><p>模块热替换是指在<strong>应用程序运行过程中，替换、添加、删除模块</strong>，而<strong>无需重新刷新整个页面</strong>。  </p><p>在 Webpack 中，一个文件就可以看成是一个模块。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16484795771943.jpg"></p><h3 id="开启-HMR"><a href="#开启-HMR" class="headerlink" title="开启 HMR"></a>开启 HMR</h3><p>修改 webpack 的配置：  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16484806480170.jpg"></p><p>修改 webpack 配置后，修改文件后依然会刷新整个页面，这是因为我们要去<strong>指定哪些模块发生更新</strong>时，进行 HMR： </p><p>增加 if 判断，当 <code>module.hot</code> 为 true，进行模块热替换。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16484807844782.jpg"></p><p>开启模块热更新后，浏览器控制台会有下图的提示。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16484811127696.jpg"></p><p>指定模块发生更新进行 HMR 后，当我们修改文件，控制台会打印下面的信息：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16484811610635.jpg"></p><h3 id="Vue-框架的-HMR"><a href="#Vue-框架的-HMR" class="headerlink" title="Vue 框架的 HMR"></a>Vue 框架的 HMR</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16484814117106.jpg"></p><h3 id="HMR-的原理"><a href="#HMR-的原理" class="headerlink" title="HMR 的原理"></a>HMR 的原理</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16484824990220.jpg"></p><p>Socket 长连接 -&gt; 即时通信（微信、直播间评论区、送礼物、进场消息）<br>长连接：当服务器数据发生变化时，可以主动地向客户端发送请求      </p><p>Http 链接 -&gt; 短连接<br>客户端发送 http 请求 -&gt; 和服务器建立连接 -&gt; 服务器做出响应 -&gt; 断开连接    </p><p>HMR 原理图   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16484825865854.jpg"></p><h3 id="devServer-的其他配置"><a href="#devServer-的其他配置" class="headerlink" title="devServer 的其他配置"></a>devServer 的其他配置</h3><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16484827807798.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16484832451168.jpg"></p><h3 id="Proxy"><a href="#Proxy" class="headerlink" title="Proxy"></a>Proxy</h3><h3 id="Webpack-的-resolve-模块解析配置"><a href="#Webpack-的-resolve-模块解析配置" class="headerlink" title="Webpack 的 resolve 模块解析配置"></a>Webpack 的 resolve 模块解析配置</h3><p>resolve 用于设置模块如何被解析：   </p><ul><li>开发中我们会有各种各样的模块依赖，这些模块可能来自于自己编写的代码，也可能来自第三方库；   </li><li>resolve 可以帮助 webpack 从每个 require/import 语句中，找到需要引入的模块代码；   </li><li>webpack 使用 enhanced-resolve 库来解析文件路径。    </li></ul><p>webpack 能解析三种文件路径：  </p><ul><li>绝对路径</li><li>相对路径</li><li>模块路径：在 resolve.modules 中指定的所有目录检索模块，默认值是 [‘node_modules’]，所以默认会从 node_modules 中查找文件；    </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16485622946807.jpg"></p><p>如何确定导入的是一个文件还是文件夹？  </p><pre><code class="hljs capnproto"><span class="hljs-keyword">import</span> &#123; sum &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./js/math&quot;</span>;</code></pre><p>如何确定导入的 math 是一个文件还是文件夹呢？   </p><p>如果是一个文件：   </p><ul><li>如果文件具有扩展名，则直接打包文件；   </li><li>否则，将使用 resolve.extensions 选项作为文件扩展名解析；    </li></ul><p>resolve.extensions 默认配置了一些扩展名，遇到没有后缀的文件，就会依次为文件加上后缀，去匹配文件夹中是否有对应的文件。   </p><pre><code class="hljs css"><span class="hljs-selector-tag">resolve</span>: &#123;    <span class="hljs-attribute">extensions</span>: [<span class="hljs-string">&quot;.js&quot;</span>, <span class="hljs-string">&quot;.json&quot;</span>, <span class="hljs-string">&quot;.mjs&quot;</span>, <span class="hljs-string">&quot;.wasm&quot;</span>]     &#125;</code></pre><p>如果是一个文件夹，会在文件夹中根据 resolve.mainFiles 配置选项中指定的文件顺序查找：   </p><ul><li>resolve.mainFiles 的默认值是 [“index”]；   </li><li>再根据 resolve.extensions 来解析扩展名；  </li></ul><p>添加额外的扩展名，例如在配置中添加 <code>.vue</code>，之后从 <code>App.vue</code> 导入模块时，文件末尾就不需要带上 <code>.vue</code> 后缀了。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16485647015692.jpg"></p><p>alias：可以为路径起<strong>别名</strong>，简化导入模块时路径的书写。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16485648915673.jpg"></p><h3 id="开发环境和生产环境分离"><a href="#开发环境和生产环境分离" class="headerlink" title="开发环境和生产环境分离"></a>开发环境和生产环境分离</h3><p>之前我们把所有配置都写在了一个 <code>webpack.config.js</code> 中，里面混合了开发环境和生产环境的配置。   </p><p>接下来我们要对其进行分离，将配置写到两个不同的文件中。  </p><p>在根目录下创建一个 config 的文件夹，创建 3 个配置文件，一个公共的配置文件(comm)，一个是开发环境的配置文件(dev)，一个是生产环境的配置文件(prod)。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16486488190016.jpg"></p><p>接着修改 <code>package.json</code> 中的配置信息：  </p><p>给脚本的 build 和 serve 字段后面添加额外的配置，这样我们在终端中运行 <code>npm run build</code> 和 <code>npm run serve</code> 才不会报错。   </p><pre><code class="hljs 1c"><span class="hljs-string">&quot;build&quot;</span>: <span class="hljs-string">&quot;webpack --config ./config/webpack.prod.config.js&quot;</span>,    <span class="hljs-string">&quot;serve&quot;</span>: <span class="hljs-string">&quot;webpack serve --config ./config/webpack.dev.config.js&quot;</span></code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16486488999177.jpg"></p><h2 id="Vue-CLI-脚手架"><a href="#Vue-CLI-脚手架" class="headerlink" title="Vue CLI 脚手架"></a>Vue CLI 脚手架</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16486491520254.jpg"></p><p>Vue CLI 本质上是一个工具，在使用之前需要先安装。  </p><h3 id="Vue-CLI-安装和使用"><a href="#Vue-CLI-安装和使用" class="headerlink" title="Vue CLI 安装和使用"></a>Vue CLI 安装和使用</h3><p>全局安装 Vue CLI：  </p><pre><code class="hljs angelscript">npm install @vue/<span class="hljs-symbol">cli@</span><span class="hljs-number">4.5</span><span class="hljs-number">.13</span> -g</code></pre><p>老师视频中安装的是 4.5.13 版本的脚手架，这里也安装相同的版本。   </p><p>安装好之后，通过 vue 的命令来创建项目：  </p><pre><code class="hljs awk">vue create 项目的名称   ```   在 Mac 电脑上使用 `vue create 项目的名称` 创建项目可能会报错，报错信息：  ```       gyp: No Xcode or CLT version detected!   ```     解决方法：   在终端分别输入两行命令  ```   sudo rm -rf $(xcode-select -print-path)   sudo xcode-select --install     ```       之后重新运行创建 vue 项目的命令，覆盖之前创建的东西。   用 Vue 脚手架创建的 demo 项目的目录，结构和前面学习的 Webpack 非常像：      ![](https:<span class="hljs-regexp">//</span>article-picbed-<span class="hljs-number">1302715071</span>.cos.ap-guangzhou.myqcloud.com<span class="hljs-regexp">/2022/</span><span class="hljs-number">04</span><span class="hljs-regexp">/04/</span><span class="hljs-number">16487356417880</span>.jpg)`.browserslistrc` 文件：设置适配浏览器的范围<span class="hljs-comment">## 认识 Vite</span>Vite 是尤雨溪写的构建工具。   ![](https:<span class="hljs-regexp">//</span>article-picbed-<span class="hljs-number">1302715071</span>.cos.ap-guangzhou.myqcloud.com<span class="hljs-regexp">/2022/</span><span class="hljs-number">04</span><span class="hljs-regexp">/04/</span><span class="hljs-number">16489530669622</span>.jpg)<span class="hljs-comment">### Vite 的构造   </span>Vite 由两部分组成：   * 一个开发服务器，它基于原生 ES 模块，提供了丰富的内建功能，HMR（模块热替换）的速度非常快速   * 在构建阶段，它是一套构建指令，使用 rollup 打开我们的代码，并且它是预配置的，可以输出生产环境的优化过的静态资源    ![](https:<span class="hljs-regexp">//</span>article-picbed-<span class="hljs-number">1302715071</span>.cos.ap-guangzhou.myqcloud.com<span class="hljs-regexp">/2022/</span><span class="hljs-number">04</span><span class="hljs-regexp">/04/</span><span class="hljs-number">16489541314670</span>.jpg)版本比较新的浏览器支持 ES Module（**原生浏览器也是支持 ES Module 的**），不需要使用构建工具，也可以识别 ES Module 的代码。    在 `index.html` 中引入包含 ES Module 的 js 文件，需要给 script 标签增加一个属性 type。  ![](https:<span class="hljs-regexp">//</span>article-picbed-<span class="hljs-number">1302715071</span>.cos.ap-guangzhou.myqcloud.com<span class="hljs-regexp">/2022/</span><span class="hljs-number">04</span><span class="hljs-regexp">/04/</span><span class="hljs-number">16489580248866</span>.jpg)但这也存在一些弊端：  * 浏览器无法识别某些文件，例如 ts、vue、less、scss    * 如果用到的包，之间的依赖太多，会发送过多的网络请求    因为存在这些弊端，我们还是需要使用构建工具。这两个弊端，就是 Vite 想帮我们解决的。   <span class="hljs-comment">### Vite 的安装和使用  </span>Vite 本身也是依赖 Node 的，所以也需要安装好 Node 环境。  Vite 要求 Node 版本是大于 <span class="hljs-number">12</span> 版本的。  全局安装与局部安装 Vite：  </code></pre><p>npm install vite -g<br>npm install vite -D    </p><pre><code class="hljs awk"><span class="hljs-comment">### Vite 对 css、less 和 postcss 的处理   </span>![](https:<span class="hljs-regexp">//</span>article-picbed-<span class="hljs-number">1302715071</span>.cos.ap-guangzhou.myqcloud.com<span class="hljs-regexp">/2022/</span><span class="hljs-number">04</span><span class="hljs-regexp">/04/</span><span class="hljs-number">16489652801181</span>.jpg)Vite 对 css 的处理，不像 webpack 需要安装 css-loader、style-loader，内部的代码可以直接对 css 进行处理。   Vite 对 less 的处理，需要安装 less 工具：  </code></pre><p>npm install less -D     </p><pre><code class="hljs awk">Vite 对 postcss 的处理，用来添加浏览器前缀，需要安装 `postcss` 和 `postcss-preset-env`。  ![](https:<span class="hljs-regexp">//</span>article-picbed-<span class="hljs-number">1302715071</span>.cos.ap-guangzhou.myqcloud.com<span class="hljs-regexp">/2022/</span><span class="hljs-number">04</span><span class="hljs-regexp">/04/</span><span class="hljs-number">16489651769542</span>.jpg)在使用 postcss 时，需要在根目录创建一个配置文件 `postcss.config.js`：      ![](https:<span class="hljs-regexp">//</span>article-picbed-<span class="hljs-number">1302715071</span>.cos.ap-guangzhou.myqcloud.com<span class="hljs-regexp">/2022/</span><span class="hljs-number">04</span><span class="hljs-regexp">/04/</span><span class="hljs-number">16489652259662</span>.jpg)<span class="hljs-comment">### Vite 对 TypeScript 的支持   </span>Vite 对 TypeScript 是原生支持的。    ![](https:<span class="hljs-regexp">//</span>article-picbed-<span class="hljs-number">1302715071</span>.cos.ap-guangzhou.myqcloud.com<span class="hljs-regexp">/2022/</span><span class="hljs-number">04</span><span class="hljs-regexp">/04/</span><span class="hljs-number">16489662171165</span>.jpg)<span class="hljs-comment">### Vite 本地服务器的原理     </span>Vite 在本地搭建了一个服务器，基于 Connect 库，Vite 会将我们编写的 `mul.ts`、`title.less` 文件分别转换(编译)为 **ES6 的 js 代码**。  当浏览器向本地服务器请求数据时，Vite 会将这些请求**拦截**，并**转发**给编译后的 ES6 js 代码，再将这些代码返回给浏览器。   <span class="hljs-comment">### Vite 对 Vue 的支持   </span>![](https:<span class="hljs-regexp">//</span>article-picbed-<span class="hljs-number">1302715071</span>.cos.ap-guangzhou.myqcloud.com<span class="hljs-regexp">/2022/</span><span class="hljs-number">04</span><span class="hljs-regexp">/04/</span><span class="hljs-number">16490002332134</span>.jpg)Vite 在处理 Vue <span class="hljs-number">3</span> 单文件组件(`App.vue` 文件)之前，需要安装插件 `@vitejs/plugin-vue`。  安装插件之后，需要在根目录下创建一个配置文件 `vite.config.js`。   ![](https:<span class="hljs-regexp">//</span>article-picbed-<span class="hljs-number">1302715071</span>.cos.ap-guangzhou.myqcloud.com<span class="hljs-regexp">/2022/</span><span class="hljs-number">04</span><span class="hljs-regexp">/04/</span><span class="hljs-number">16490016375055</span>.jpg)在 coderwhy 老师的视频中，添加配置文件后，运行 `npx vite` 还是会报错，这是因为这个插件还会依赖一个模块 `@vitejs/plugin-vue`。   ![](https:<span class="hljs-regexp">//</span>article-picbed-<span class="hljs-number">1302715071</span>.cos.ap-guangzhou.myqcloud.com<span class="hljs-regexp">/2022/</span><span class="hljs-number">04</span><span class="hljs-regexp">/04/</span><span class="hljs-number">16490014994457</span>.jpg)但在新版的 Vite 中，已经不需要安装这个模块 `@vitejs/plugin-vue` 了。  <span class="hljs-comment">### Vite 打包项目  </span>完成开发后，在将项目部署到服务器之前，需要对项目进行打包（构建），Vite 也提供了打包的命令：  </code></pre><p>npx vite build    </p><pre><code class="hljs plain">测试打包之后的文件是否有问题，可以运行另外一个命令：  </code></pre><p>npx vite preview   </p><pre><code class="hljs awk">在 `package.json` 的 scripts 字段添加相关的配置，就可以把之前的预览命令由 `npx vite preview` 替换为 `npm run preview`。    ![](https:<span class="hljs-regexp">//</span>article-picbed-<span class="hljs-number">1302715071</span>.cos.ap-guangzhou.myqcloud.com<span class="hljs-regexp">/2022/</span><span class="hljs-number">04</span><span class="hljs-regexp">/04/</span><span class="hljs-number">16490026147789</span>.jpg)<span class="hljs-comment">### ESBuild 解析  </span>Vite 打包的速度非常快，是因为它用到了 ESBuild。   ESBuild 有点像是之前学习过的 Babel，但相对来说，ESBuild 的速度更快。      ESBuild 是用 Go 语言实现的，而不是 JS。   ![](https:<span class="hljs-regexp">//</span>article-picbed-<span class="hljs-number">1302715071</span>.cos.ap-guangzhou.myqcloud.com<span class="hljs-regexp">/2022/</span><span class="hljs-number">04</span><span class="hljs-regexp">/04/</span><span class="hljs-number">16490029090297</span>.jpg)![](https:<span class="hljs-regexp">//</span>article-picbed-<span class="hljs-number">1302715071</span>.cos.ap-guangzhou.myqcloud.com<span class="hljs-regexp">/2022/</span><span class="hljs-number">04</span><span class="hljs-regexp">/04/</span><span class="hljs-number">16490033471983</span>.jpg)<span class="hljs-comment">### Vite 架手脚</span>![](https:<span class="hljs-regexp">//</span>article-picbed-<span class="hljs-number">1302715071</span>.cos.ap-guangzhou.myqcloud.com<span class="hljs-regexp">/2022/</span><span class="hljs-number">04</span><span class="hljs-regexp">/04/</span><span class="hljs-number">16490036509066</span>.jpg)全局安装脚手架： </code></pre><p>npm install @vitejs/create-app -g   </p><pre><code>安装 Vite 脚手架之后，在终端输入 `create-app + 项目名称`，就可以快速创建出一个使用 Vite 作为构建工具的项目。   ![](https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/04/04/16490040081962.jpg)</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>Vue</tag>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>电脑上如何给视频设置封面？</title>
    <link href="/2022/03/06/2022-3-6-videocover/"/>
    <url>/2022/03/06/2022-3-6-videocover/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于我的公众号「<a href="https://mp.weixin.qq.com/s/7hH8NbkZ2YT-FOVdSdPHPA">效率工具指南</a>」<br>文/彭宏豪    </p><p>Hello 各位好，我是小豪。   </p><p>用过剪映 App 剪过视频的朋友，可能会留意到时间轴最前面的「<strong>设置封面</strong>」，使用这个功能，可以给视频自定义封面。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/06/img096e1d8351a31.jpeg" alt="IMG_096E1D8351A3-1"></p><p>在当下信息爆炸的时代，视频封面就像是一个人的颜值，好的封面会有更高的回头率，对应到视频或者其他媒介上，就意味着会有更高的打开率或者播放量。   </p><p>所以，如果你想让自己的视频有更高的曝光，设置一个好看的<strong>视频封面</strong>，其重要性不言而喻。</p><p>如果你是在手机上剪视频，使用剪映 App 内置的这个功能，就可以很方便地自定义视频封面。   </p><p>但如果是换到电脑上，「似乎」就没有很方便地给视频设置封面的工具。  </p><p>似乎确实是似乎，不用怀疑，能看到这篇文章，说明我已经找到方法啦。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/06/16465779024433.jpg"></p><p>今天这篇文章，介绍 个在电脑上给视频设置封面的方法。    </p><h2 id="Mac-电脑自带功能"><a href="#Mac-电脑自带功能" class="headerlink" title="Mac 电脑自带功能"></a>Mac 电脑自带功能</h2><p>右击想要自定义封面的视频，点击「<strong>显示简介</strong>」，打开视频的属性面板。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/06/16465780869183.jpg"></p><p>打开属性面板后，将封面直接拖拽到属性面板左上角的缩略图，就可以替换掉视频原来默认的封面了。   </p><p>在 Mac 上更换视频封面，就是这么简单。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/06/geng-huan-shi-pin-feng-mian.gif" alt="更换视频封面"></p><h2 id="快剪辑"><a href="#快剪辑" class="headerlink" title="快剪辑"></a>快剪辑</h2><p>上面的方法仅适用于苹果电脑，对于使用 Windows 系统的朋友，可以使用另外一个软件——由 360 推出的「<strong>快剪辑</strong>」。  </p><p>说到快剪辑，还得提到另外一个熟悉的名字——爱剪辑。</p><p>可以这么说，在剪映还没推出电脑版之前，很多人应该都用过这个傻瓜式的剪辑软件，快剪辑应该就是看到爱剪辑火得一塌糊涂之后，顺势推出的（快剪辑上线时间 2017 年）。    </p><p>说回正事，快剪辑在导出视频的环节，有一个可<strong>编辑视频封面</strong>的选项，如下图所示，使用这个功能，也可以为视频自定义封面。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/06/kuai-jian-ji-she-zhi-shi-pin-feng-mian.png" alt="快剪辑设置视频封面"></p><p>值得一提的是，<strong>快剪辑只有 Windows 版本</strong>，Mac 用户无法使用。      </p><h2 id="剪映电脑版"><a href="#剪映电脑版" class="headerlink" title="剪映电脑版"></a>剪映电脑版</h2><p>上面介绍的两个方法，还是不够完美，每一个方法都只能在一个平台上使用。   </p><p>这里介绍一个终极解决方法，使用剪映电脑版。   </p><p>没记错的话，剪映电脑版最开始并没有设置视频封面的功能。   </p><p>不过，今晚在写文章之前，我重新打开剪映，意外地发现电脑版也有了和 App 一样的功能。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/06/16465795068903.jpg"></p><p>视频封面可以来自视频中的某一帧，也可以是从本地导入的图片，导入之后，还可以使用剪映的「编辑」功能，给封面套上内置的模板，让封面变得更好看一些。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/06/16465796493150.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/06/16465798344893.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>视频剪辑</tag>
      
      <tag>剪映</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>加微信时，如何快速亮出你的二维码｜快捷指令</title>
    <link href="/2022/03/05/2022-3-5-wechat/"/>
    <url>/2022/03/05/2022-3-5-wechat/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于我的公众号「效率工具指南」<br>文/彭宏豪    </p><p>Hello 各位好，我是小豪。   </p><p>在线下和别人面基时，往往会有一个加微信的环节。   </p><p>正所谓，动作要快，（亮码）姿势要帅。   </p><p>所以今天的问题是，如何快速亮出自己的二维码，加上心仪女生的微信呢？       </p><p>下面分享两个快速亮码的小技巧：   </p><h2 id="轻点两下手机背面"><a href="#轻点两下手机背面" class="headerlink" title="轻点两下手机背面"></a>轻点两下手机背面</h2><p>轻点两下手机背面，就能快速呼出二维码，实际效果见下面👇的 Gif 动图：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/05/imb8aah0c.GIF" alt="IMB_8AAh0C"></p><p>这个快速亮码的小技巧，需要用到 iPhone 的两个功能：快捷指令 + 轻点背面。   </p><p>先在微信上打开个人二维码的页面，截取一张图片；   </p><p>截取后手机左下角会出现一个截图的<strong>缩略图</strong>，点击缩略图，会显示下图的页面：   </p><p>点击左上角的「完成」按钮，在弹出的菜单选择「存储到“文件”」，将截图保存到「我的 iPhone」中。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/05/img1954.PNG" alt="IMG_1954"></p><p>打开快捷指令 App，点击「所有快捷指令」页面右上角的加号 + ，创建一个新的快捷指令。   </p><p>新的快捷指令顶部需要填入一个<strong>名称</strong>，你可以命名为「微信二维码」。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/05/img1958.PNG" alt="IMG_1958"></p><p>点击「添加操作」，在弹出的面板搜索「文件」，点击下方的「文件」选项。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/05/img1965.PNG" alt="IMG_1965"></p><p>添加「文件」变量后，点击文件两个字，在「我的 iPhone」中找到刚截取的微信二维码并打开。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/05/img1970.PNG" alt="IMG_1970"></p><p>接着点击底部的「搜索 App 和操作」，搜索「<strong>显示结果</strong>」，点击下方返回的「显示结果」。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/05/img1967.PNG" alt="IMG_1967"></p><p>完成以上两步操作后，这个新的快捷指令就算创建好了，如下图：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/05/img1963.PNG" alt="IMG_1963"></p><p>打开 iPhone 上的系统设置，搜索「轻点」，点击下方返回的「<strong>触控</strong>」，将页面滑动到底部，选择「<strong>轻点背面</strong>」。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/05/img1976.PNG" alt="IMG_1976"></p><p>⚠️ 注意：轻点背面是 <strong>iOS 14</strong> 新增的功能，如果你没有看到这个选项，请先查看一下手机系统是否 iOS 14。   </p><p>此外，这个功能对<strong>手机型号</strong>也有限制，从网上反馈的情况来看，iPhone 8 Plus 之后的手机，都可以用上这个功能。   </p><p>点击「轻点两下」，可以看到轻点两下 iPhone 背面可以触发的多个操作，在里面找到我们刚刚创建的快捷指令「微信二维码」。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/05/img1978.PNG" alt="IMG_1978"></p><p>到这里，就完成了轻点两下手机背面、快速打开微信二维码的全部设置，可以轻点一下测试实际的效果（点开下方的视频号查看）：  </p><h2 id="3D-Touch-快速打开"><a href="#3D-Touch-快速打开" class="headerlink" title="3D Touch 快速打开"></a>3D Touch 快速打开</h2><p>如果你觉得前面的方法，前期设置起来还是有些麻烦，可以使用下面这种更为便捷的操作——<strong>3D Touch</strong>。      </p><p>长按微信图标，稍等一小小会，微信会弹出一个快捷菜单，点击其中的「我的二维码」，也可以快速打开个人微信二维码。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/03/05/img1942.JPEG" alt="IMG_1942"></p><p>之前一直有传闻说，苹果可能会取消 3D Touch 功能，不过到目前为止还能使用，就暂且用着吧。   </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>微信</tag>
      
      <tag>iPhone</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安利两个浏览器插件</title>
    <link href="/2022/02/28/2022-2-28-chrome/"/>
    <url>/2022/02/28/2022-2-28-chrome/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=386844&auto=1&height=66"></iframe></div>       <p>Hello 各位好，我是小豪。  </p><p>以前我是一个插件控，时不时就会给浏览器装各种插件。  </p><p>当然，插件在提升浏览器或上网体验的同时，也会加重电脑的运行负担。如果你的电脑运行内存比较大，那请随意。  </p><p>今天想介绍 2 个最近刚安装的浏览器插件，一个是标签页搜索 &amp; 管理，一个是标签页美化。</p><h2 id="Omni"><a href="#Omni" class="headerlink" title="Omni"></a>Omni</h2><p>Omni，是前阵子在 Product Hunt 上非常火的浏览器插件，可用来搜索浏览器书签、历史记录以及管理标签页。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/28/16460528834249.jpg"></p><p>在使用浏览器的过程中，许多人可能有过这么一种经历：</p><p>当浏览器打开了太多的标签页，如下图，所有标签页顶部原先显示的<strong>页面名称</strong>，都会被「挤压」得只剩下一个图标，以至于我们都分不清哪个是哪个。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/28/16460533257042.jpg"></p><p>而有了 Omni 插件，你可以像使用苹果上的聚焦搜索或是 Windows 上的 PowerToys 那样，在浏览器中呼出一个<strong>搜索框</strong>，如下图，以搜索的方式查找你打开的标签页。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/28/16460521472184.jpg"></p><p>默认呼出 Omni 搜索框的方式，点击浏览器右上角的 Omni 插件图标。</p><p>当然这种默认的呼出方式，既不够快，也不够优雅。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/28/16460539914953.jpg"></p><p>我们可以自定义呼出 Omni 搜索框的快捷键，方法如下： </p><p>在 Chrome 浏览器地址栏输入 <code>chrome://extensions/shortcuts</code> 并按下回车，打开扩展程序的快捷键设置页面，找到 Omni 插件。   </p><p>点击输入框右侧的编辑按钮，按照提示，设置呼出 Omni 搜索框的快捷键，例如我在 Mac 上设置的快捷键为 Ctrl + O。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/28/16460537842769.jpg"></p><p>接着去到非浏览器设置页面的标签页，按下刚设置的快捷键，就能快速呼出 Omni 搜索框了。   </p><p>除了搜索标签页，Omni 还有另外一些附加功能，如下图，可以通过内置的命令实现一些<strong>快捷操作</strong>：  </p><ul><li>发送一份邮件</li><li>创建一个新的 Notion 页面   </li><li>创建一个谷歌表格   </li><li>创建一个谷歌文档   </li><li>创建一个表单     </li><li>发布一条推特</li><li>……   </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/28/16460545287349.jpg"></p><p>Omni 目前似乎只上架到了 Chrome Web Store，暂未上架 Edge 插件商店，想用的朋友，自行前往谷歌商店搜索安装吧。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/28/16460551202601.jpg"></p><h2 id="iTab"><a href="#iTab" class="headerlink" title="iTab"></a>iTab</h2><p>iTab，一个标签页美化插件，安装之后，可以取代浏览器默认的标签页，效果如下。  </p><p>iTab 最大的特色在于，<strong>加入了 iOS 上的小组件的设计</strong>，让它在众多标签页美化插件中显得与众不同，而且拖动小组件可以重新调整小组件的位置。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/28/16460552728542.jpg"></p><p>剩下的功能就和其他浏览器美化插件相似，就不过多介绍了。   </p><p>iTab 官网：<br><a href="https://itab.link/">https://itab.link/</a>   </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>插件</tag>
      
      <tag>Chrome</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>近期值得关注的 App</title>
    <link href="/2022/02/26/2022-2-26-apptips/"/>
    <url>/2022/02/26/2022-2-26-apptips/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于公众号「效率工具指南」<br>文/彭宏豪   </p><p>Hello 大家好，我是小豪。   </p><p>好久不见，来一期这个公众号的传统艺能「近期值得关注的 App」，本期想介绍 3 个工具，一个是介绍过很多次的 Notion，两个是最近才用上的新工具，希望对你有帮助。  </p><h2 id="Notion-网页版导出-Markdown"><a href="#Notion-网页版导出-Markdown" class="headerlink" title="Notion 网页版导出 Markdown"></a>Notion 网页版导出 Markdown</h2><p>用 Notion 来记学习笔记，当一个页面记录的内容过多，通过点击目录来实现内容的跳转，会遇到<strong>卡顿</strong>的情况——点击后停留一小会、才能跳到对应的部分。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/26/16458805639428.jpg"></p><p>除了卡顿，Notion 客户端没有像飞书文档一样的<strong>侧边目录</strong>，这对在 Notion 中阅读长文档的人来说，非常痛苦。  </p><p>基于这两个原因，我萌生了<strong>把原先存放在 Notion 中的长文档导出到别的软件</strong>的想法。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/26/16458810403409.jpg"></p><p>从 Notion 中导出文档，我首选了 Markdown 格式，不为别的，就是希望文档从一个地方迁移到另外一个地方，格式不会错乱。  </p><p>很久之前用 Notion 自带的导出 Markdown  的功能，会遇到图片丢失的问题，那时候为了解决这个问题，还需要借助外部的工具，例如之前介绍过的浏览器插件「简悦」。  </p><p>不过今天我又试用了 <strong>Notion 网页版导出 Markdown</strong> 的功能，这次给我很大的惊喜：图片竟然没有丢失，而且渲染出来的富文本样式也很完美。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/26/16458817566839.jpg"></p><p>网页版 Notion 导出 Markdown，会得到一个压缩包，解压后可以得到一个 md 文件和文件夹，文件夹中存放了文档中插入的图片。  </p><p>我试过用两个不同的编辑器（VS Code 和 MWeb）打开这个 md 文件，文档里的图片都能正常显示。  </p><p>喜大普奔，<strong>从 Notion 中导出 Markdown，再也不需要借助任何第三方工具了</strong>，Notion 又行了。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/26/16458818022195.jpg"></p><h2 id="Here"><a href="#Here" class="headerlink" title="Here"></a>Here</h2><p>Here，是 Mac 上一个有点像是 <a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649882151&idx=1&sn=970d4b52a1974edad439e7766c89091a&chksm=83abfa0ab4dc731c16f214e3cdf4f85c5850e98f657f2181ded8cfce63efb46b6a2e582609b7&token=1423371312&lang=zh_CN#rd">uTools</a> 的应用，按下 Option + 空格键，可以呼出下图的搜索框。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/26/16458714832443.jpg"></p><p>点击右侧的圆形按钮，会显示 Here 内置的一些小工具（插件），可用来查看现在的天气、电脑网速、电池状态、汇率。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/26/16458716559396.jpg"></p><p>如果觉得插件数量太少，可以打开 Here 的偏好设置，切换到「插件」页面，启用未开启的插件，或是从 Here 官网下载更多插件。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/26/16458722856715.jpg"></p><p>切换到「捷径」页面，还可以看到它内置的一些小游戏，例如下图来自 Chrome 的彩蛋——<strong>小恐龙</strong>，按下空格键就能直接开始游戏；另外一个游戏：2048。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/26/16458718058641.jpg"></p><p>Here 右上角还提供了一个查看「<strong>剪贴板历史</strong>」的功能，可以查看你之前复制到剪贴板的所有内容，包含文本和图片，这个功能可以取代之前介绍过的付费剪贴板工具 <a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649918947&idx=1&sn=6137a4554ce7d2aa003545cb22128035&chksm=83a889ceb4df00d8619fc8882141a4d465ea328b1012652641256423f5a6fa2c2386c6bf1cbb&token=1423371312&lang=zh_CN#rd">PasteNow</a>。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/26/16458720112046.jpg"></p><p>剪贴板历史记录顶部有一个搜索框，输入关键字可以找到相关的剪贴板记录。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/26/16458762739771.jpg"></p><p>最后，Here 还有一个小功能，在程序坞显示插件图标，如下图，我选择在程序坞上显示 Here 的天气插件。</p><p>这样一来，每次我想查看气温的时候，直接看程序坞的天气图标就好，而不需要按前面说的——呼出搜索框，点击右侧的圆形按钮，打开插件面板（查看天气）——进行一系列操作。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/26/16458770951007.jpg"></p><p>Here 官网：<br><a href="https://here.app/">https://here.app/</a>  </p><p>首次使用 Here，可能需要用到「邀请码」，可以前往下方的页面获取邀请码：</p><p><a href="https://here.app/release-notes">https://here.app/release-notes</a>   </p><h2 id="更高效地移动文件"><a href="#更高效地移动文件" class="headerlink" title="更高效地移动文件"></a>更高效地移动文件</h2><p>用 Mac 的过程中，可能会有这样的需求：将多个文件从一个文件夹📁移动到另外一个文件夹。</p><p>我之前的做法是，在打开 Finder 访达的情况下，按下 <strong>Command + T</strong> 新建一个标签页，在新标签页中打开目标文件夹，接着在起始文件夹选中多个待转移的文件，将它们拖拽到目标文件夹。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/26/16458796530476.jpg"></p><p>这个做法没啥毛病，但少数时候操作不慎，本来已经拖拽到目标文件夹的文件，还是会回到起始文件夹（用文字描述不太直观，但有过类似经验的朋友应该能体会）。   </p><p>这里推荐一个帮我们更高效地转移文件的工具：<strong>Dropover - 更加容易拖放文件</strong></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/26/16458800036506.jpg"></p><p>安装软件后，选中一个想要转移的文件并<strong>长按鼠标左右晃动</strong>，文件旁边会出现一个小抽屉，这是一个文件暂存区，将想要移动的多个文件拖拽到小抽屉中，再一次性移动，使用体验更好。</p><p>软件可免费下载，免费试用 14 天，到期后需要购买才能继续使用，买断制，25 元。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/26/16458795114809.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>Notion</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>打工人/新媒体小编/设计师常用工具整理</title>
    <link href="/2022/02/16/2022-2-16-designtools/"/>
    <url>/2022/02/16/2022-2-16-designtools/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于我的公众号「<a href="https://mp.weixin.qq.com/s/d6VxS3u0T5sCkU3jlCaCAQ">效率工具指南</a>」<br>作者/彭宏豪      </p><p>Hello 各位好，这里是效率工具指南。<br>我是小豪。  </p><p>古话说「术业有专攻」，说的是每个人专攻一个方向就好了，但在如今啥都「卷」的当下，一个人不会多一点技能，好像就混不下去了。  </p><p>具体到<strong>工作中做一张图</strong>，以前是设计师才要干的活，现在好像是个岗位就会有要求：  </p><blockquote><p>熟练掌握 PS 的使用（事实上我只精通 PS 的安装与卸载）   </p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/16/16449984297049.jpg"></p><p>回到<strong>如何做一张图</strong>的问题上，今天的这篇文章将从以下几方面做出一些回答：   </p><ul><li>获取灵感</li><li>设计作品 &amp; 素材管理工具 </li><li>素材下载<ul><li>图标 icon</li><li>字体</li></ul></li></ul><h2 id="获取灵感"><a href="#获取灵感" class="headerlink" title="获取灵感"></a>获取灵感</h2><p>做一张图的工作流，和新媒体小编存在着共性：都需要寻找灵感，一个是寻找设计灵感，一个是寻找文章选题及切入角度。  </p><p>对于设计灵感，国内外有很多设计相关的网站：  </p><ul><li>Behance</li><li>Dribbble  </li><li>Pinterest  </li><li>站酷  </li><li>花瓣</li></ul><p>这些网站对许多设计师来说，应该非常熟悉，就不过多介绍了。</p><h3 id="浏览器插件-Muzli"><a href="#浏览器插件-Muzli" class="headerlink" title="浏览器插件 Muzli"></a>浏览器插件 Muzli</h3><p>下面介绍一个聚合了多个设计网站内容的浏览器插件 Muzli： </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/16/16449917315769.jpg"></p><p>安装插件后，它会替换掉浏览器默认的标签页，在你未进行搜索操作时，页面中央会显示来自不同设计网站的作品。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/16/16449899776063.jpg"></p><p>点击左下角的编辑按钮，打开左侧的编辑面板，可自由选择要查看的设计网站。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/16/16449901958964.jpg"></p><p>将鼠标指针置于网站图标左侧，指针会变成一个小抓手，长按左键拖拽可改变网站上下的顺序，你可以将优先级更高的网站排在列表的前排。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/16/16449911927235.jpg"></p><p>初次使用插件 Muzli，可以选择你想在标签页看到的内容，不局限于设计作品，还可以浏览：  </p><ul><li>科技 &amp; 代码   </li><li>新闻 &amp; 商业   </li><li>文化    </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/16/16449849538168.jpg"></p><p>Muzli 官网：<br><a href="https://muz.li/">https://muz.li/</a>   </p><h2 id="设计作品-amp-素材管理工具"><a href="#设计作品-amp-素材管理工具" class="headerlink" title="设计作品 &amp; 素材管理工具"></a>设计作品 &amp; 素材管理工具</h2><p>看完别人的设计作品，为了方便后续查找和参考，最好还是要将它们保存起来。  </p><p>设计作品 &amp; 素材管理工具，主要有两类，一类是采集到在线网站的画板，例如花瓣、Pinterest，一类是采集到本地的管理软件。   </p><p>花瓣采集插件：<a href="https://faq.huaban.com/faq/huaban-plugin-install/">https://faq.huaban.com/faq/huaban-plugin-install/</a>   </p><p>Pinterest 采集插件：<a href="https://help.pinterest.com/zh-hans/article/save-pins-with-the-pinterest-browser-button">https://help.pinterest.com/zh-hans/article/save-pins-with-the-pinterest-browser-button</a>    </p><p>本地的设计作品 &amp; 素材管理工具：  </p><ul><li>Eagle（macOS + Windows）</li><li>Picsee（macOS）👉👉 <a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649919416&idx=1&sn=a27dc29eda0beb241e45217292987758&chksm=83a88b95b4df028359fd8cf6775093d207c9570f5fe42452f1796b9e54e9ad1314240fa57c14&token=879990072&lang=zh_CN#rd">戳这里了解 Picsee</a>   </li></ul><h2 id="图标-Icon"><a href="#图标-Icon" class="headerlink" title="图标 Icon"></a>图标 Icon</h2><p>有时在制作图片的时候，需要用到一些 <strong>App 图标</strong>作为素材。  </p><p>例如我之前做过的一个剪映加字幕的视频封面，需要用到剪映 App 的图标。   </p><p>直接从搜索引擎找 App 的图标，尤其是国内产品的图标，并不太好找，而且找到的图标清晰度一般都不高。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/16/16449931282248.jpg"></p><p>这里介绍两个获取 App 图标的实用技巧：   </p><h3 id="在线网站-HQ-Icon"><a href="#在线网站-HQ-Icon" class="headerlink" title="在线网站 HQ Icon"></a>在线网站 HQ Icon</h3><p>输入 App 名称，网站就会返回对应的应用图标，且提供了两种图标分辨率——512px 和 1024px，用起来非常方便。  </p><p>HQ Icon 网址：<br><a href="https://icon.yukonga.top/">https://icon.yukonga.top/</a>      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/16/16449936377283.jpg"></p><h3 id="快捷指令-App-获取应用图标"><a href="#快捷指令-App-获取应用图标" class="headerlink" title="快捷指令 App 获取应用图标"></a>快捷指令 App 获取应用图标</h3><p>前面获取图标的方法适用于所有用户，下面的这种方法，只对拥有 iPhone 或 iPad 设备的用户可用。  </p><p>之前发布过一篇介绍 iPhone 上的快捷指令 App 的文章，介绍过一个获取 App 图标的快捷指令「应用图标抓取」：  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/16/16449944232564.jpg"></p><p>错过或忘记的朋友，可以戳下面的文章：  </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649911233&idx=1&sn=ae14d222f9847022b35923abe005c872&chksm=83a86becb4dfe2fac78fc6060ec5d5b0e6d863453adc1cd9939a5f32bf53785a04d8b1717cd0&token=879990072&lang=zh_CN#rd">手机自带的多功能百宝箱，没人用真的太可惜了。</a>   </p><h3 id="其他图标-Icon-网站"><a href="#其他图标-Icon-网站" class="headerlink" title="其他图标 Icon 网站"></a>其他图标 Icon 网站</h3><p>前面介绍的两种获取 App 图标的方法，得到的图片都可以称为<strong>位图</strong>，位图的优点在于色彩丰富，细节清晰，但它也存在一个弊端：<strong>放大后容易失真</strong>。</p><p>与位图相对的图像格式，被称为<strong>矢量图</strong>，它是一种经过多倍放大后，仍能保持原有清晰度的图形格式，广泛应用于 logo 或插画设计中，常见的矢量格式有 svg、eps 和 ai。  </p><p>前几天整理了 13 个下载图标的网站（<strong>主要为矢量图标</strong>），制作成了下面的思维导图。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/16/tu-biao-wang-zhan-shi-liang-tu-biao.png" alt="图标网站 矢量图标"></p><p>获取上面的思维导图链接 🔗，可点击下方的公众号卡片「效率工具指南」，在后台回复【图标】即可。  </p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><h3 id="字体下载"><a href="#字体下载" class="headerlink" title="字体下载"></a>字体下载</h3><p>优先推荐各位使用免费可商用的字体，不管是自己的个人项目，还是公司内做的事情，以免之后引来不必要的纠纷。   </p><p>免费可商用的字体：  </p><ul><li>思源黑体/思源宋体     </li><li>阿里巴巴普惠体（推荐）</li><li>优设标题黑体   </li><li>江西拙楷    </li></ul><p>下载免费字体，可以去下图的网站「<strong>猫啃网</strong>」，网站提供了<strong>单个字体的下载链接</strong>，没有把所有免费字体打包在一起，节约下载时间。    </p><p>更重要的是，下载字体没套路，不需要关注公众号，不需要转发文章在后台返截图。     </p><p>猫啃网：<br><a href="https://www.maoken.com/all-fonts">https://www.maoken.com/all-fonts</a>   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/16/16449817535106.jpg"></p><h3 id="识别字体"><a href="#识别字体" class="headerlink" title="识别字体"></a>识别字体</h3><p>除了下载字体，有时我们在海报上看到一个好看的字体，想知道字体的名称，但又联系不上设计师，该怎么办呢？  </p><p>介绍两款识别字体的工具，用起来非常简单：将想要识别的字体截图保存下来，再上传到下面的网站，一般就能找到字体的名称。   </p><p>求字体网：识别中文字体<br><a href="https://www.qiuziti.com/">https://www.qiuziti.com/</a></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/16/16449827148956.jpg"></p><p>WhatTheFont：识别英文字体<br><a href="https://www.myfonts.com/WhatTheFont/">https://www.myfonts.com/WhatTheFont/</a></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/16/16449826661344.jpg"></p><h3 id="字体版权查询"><a href="#字体版权查询" class="headerlink" title="字体版权查询"></a>字体版权查询</h3><p>不确定想使用的字体是否可商用，可以使用下面的字体版权查询工具，输入字体名称，看网站返回的结果是否为「免费可商用」？   </p><p>360 查字体：<br><a href="https://fonts.safe.360.cn/">https://fonts.safe.360.cn/</a>      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/16/16449828927180.jpg"></p><p>如果这个网站的数据库不包含你想查询的字体，最稳妥的办法，还是去到字体的官网查看相关文档，或者通过社交平台私信字体的作者。   </p><p>还有一点需要说明的是，有些字体网站虽然把某款字体归为「免费可商用」，但在实际使用还是存在一些坑的：  </p><p>以「锐字潮牌真言体」为例，它确实可以免费商用，但在未经书面授权的情况下，字体不能用于软件、游戏、数字出版物、拍照、视频剪辑、图片编辑等场景中。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/16/16449838473752.jpg"></p><p>关于免费字体隐藏的一些坑，还可以参考 B 站 Up 主 @doyoudo 出的一期视频：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/16/img1827.PNG" alt="IMG_1827"></p><p>今天的分享暂时就到这里，下次有时间且了解了更多东西之后，再看看能不能出第二篇吧。    </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>下载</tag>
      
      <tag>设计</tag>
      
      <tag>字体</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将 Notion 打造成 RSS 阅读器｜Notion 新鲜玩法 + 2</title>
    <link href="/2022/02/14/2022-2-14-notion/"/>
    <url>/2022/02/14/2022-2-14-notion/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于「效率工具指南」<br>文/彭宏豪</p><p>Hello 各位好，这里是效率工具指南。<br>我是小豪。  </p><p>距离上一次分享 Notion 相关的内容，已经过去两个多月了。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/14/16448284903084.jpg"></p><p>老实说现在对 Notion 的关注大不如前了，没有及时去跟进 Notion 更新了哪些功能。  </p><p>但 Notion 依旧还是有不少吸引人的地方，譬如今天要介绍的这两个 Notion 玩法（案例）：  </p><ul><li>将 Twitter 动态保存到 Notion   </li><li>将 Notion 变成 RSS 阅读器   </li></ul><h2 id="将-Twitter-动态保存到-Notion"><a href="#将-Twitter-动态保存到-Notion" class="headerlink" title="将 Twitter 动态保存到 Notion"></a>将 Twitter 动态保存到 Notion</h2><p>说这个话题之前，还要提另外一件事情：  </p><p>用过微博的人，可能都有这么一种经历，在一条精彩微博的评论区，会看见许多人都在评论「@我的印象笔记」。  </p><p>不懂这种行为含义的人，第一次见到评论区整齐划一地都在评论相同的内容，搞不好还以为他们在进行某种行为艺术。   </p><p>实际上评论 @我的印象笔记，是评论的用户希望把微博内容保存到自己的笔记账户中，可能是收藏就等于看了，或者后期在查找内容的时候，方便随时调出。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/14/16448294930761.jpg"></p><p>如果你和我一样，已经弃用了印象笔记，换到了 Notion，但还是有「剪藏」网络内容的需求，可以使用之前介绍过的插件：  </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649918366&idx=1&sn=5c1c25ce464c3d84b02a9833c406c3b4&chksm=83a88fb3b4df06a5e9b48059e82b4f785015427abd337b66c0c7a72315e9906da44dfff329da&token=2093409823&lang=zh_CN#rd">Notion搭配这2个剪藏插件，才是真正All in one</a>     </p><p>上文介绍的两款插件，对剪藏长文章来说，非常方便，但如果是剪藏社交媒体上的内容，例如 Twitter，就有点大材小用了。  </p><p>在 Twitter 上有一位开发者 @Abdulhade Ahmad 开发了将 Twitter 动态保存到 Notion 的机器人 @SaveToNotion，它的用法和 @我的印象笔记 非常相似：  </p><p>在想保存的 Twitter 动态下方，评论 @SaveToNotion，并带上标签 #tweet 或者 #thread，程序就会自动将 Twitter 动态保存到你的 Notion 中。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/14/16448307156606.jpg"></p><p>配置方法：  </p><p>关注推特账号 @SaveToNotion</p><p>在浏览器打开 Notion 页面 <a href="https://t.co/lqgK7KQ9BA">https://t.co/lqgK7KQ9BA</a> ，将页面复制(Duplicate)到自己的 Notion 账户中</p><p>向推特账号 SaveToNotion 私信 <code>/connect</code> ，机器人会返回一个链接，点击链接进行授权   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/14/16448308818074.jpg"></p><p>授权时选择我们刚复制的 Notion 页面「Tweets」  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/14/16448309198519.jpg"></p><p>完成授权后，推特账号 SavetoNotion 会给我们发送一条「连接成功」的消息   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/14/16448310121365.jpg"></p><p>完成上面操作后，你就可以将你喜欢的 Twitter 动态保存到 Notion 中啦。  </p><p>Twitter 动态保存到 Notion 的效果如下，会带有动态内容、作者名称、剪藏的时间、推特动态原始链接。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/14/16448312639194.jpg"></p><h2 id="将-Notion-变成-RSS-阅读器"><a href="#将-Notion-变成-RSS-阅读器" class="headerlink" title="将 Notion 变成 RSS 阅读器"></a>将 Notion 变成 RSS 阅读器</h2><p>有些朋友可能对 RSS 并不熟悉，了解 RSS 可以参考我之前写过的一篇文章：</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649904885&idx=1&sn=4cf0407adfa94e0e855ca3a5bc3bda20&chksm=83a852d8b4dfdbce023212961dfb446fc4fd8a8e595ea762ad8711602dd9c551811cdff19ca6&token=2093409823&lang=zh_CN#rd">算法当道，我们只能被动接收算法投喂的内容吗? | RSS</a>    </p><p>简言之，通过 <strong>RSS 订阅链接 + RSS 阅读器</strong>，我们可以很方便地在一个软件中获取来自多个作者、多个博客甚至是多个平台的内容，减少我们在多个应用或平台间来回切换的时间。   </p><p>将 Notion 变成 RSS 阅读器，需要用到一个项目 <strong>NotionFeed</strong>。  </p><p>NotionFeed 官网：<br><a href="https://notion-feed.com/">https://notion-feed.com/</a>   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/14/16448320315656.jpg"></p><p>NotionFeed 提供的 Notion 模板中有两个数据库：  </p><ul><li>订阅源管理：添加或管理 RSS 订阅链接   </li><li>文章：查看 RSS 订阅链接获取到的内容</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/14/16448321494245.jpg"></p><p>目前我在订阅源管理中添加了 4 个 RSS 链接，每当它们更新了内容，就可以在「文章」数据库查看更新的内容，如下图所示。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/14/16448325609065.jpg"></p><p>我将自己的 Hexo 博客的 RSS 订阅链接(<a href="https://www.penghh.fun/atom.xml)%E4%B9%9F%E6%B7%BB%E5%8A%A0%E5%88%B0%E4%BA%86%E5%85%B6%E4%B8%AD%EF%BC%8C%E8%BF%99%E6%A0%B7%E6%AF%8F%E5%BD%93%E6%88%91%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2%EF%BC%8C%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%86%85%E5%AE%B9%E4%B9%9F%E4%BC%9A%E8%A2%AB%E6%8A%93%E5%8F%96%E5%88%B0">https://www.penghh.fun/atom.xml)也添加到了其中，这样每当我更新博客，博客的内容也会被抓取到</a> Notion 的数据库中，相当于在 Notion 也做了多一重的备份。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/14/16448327065723.jpg"></p><p>NotionFeed 的使用方法，可以参考项目作者写的配置教程，配置起来不会有难度，这里就不展开了。   </p><p>初次在 Notion 中添加 RSS 订阅链接，要多等一点时间，才能看到程序抓取到足够多的内容。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/14/16448321041786.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>Notion</tag>
      
      <tag>RSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>图片管理+截图+图片编辑+图片格式转换，这个神器让我直呼内行｜Picsee</title>
    <link href="/2022/02/13/2022-2-13-picsee/"/>
    <url>/2022/02/13/2022-2-13-picsee/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于我的公众号「<a href="https://mp.weixin.qq.com/s/JeS3ergTmhGknZACv0b61w">效率工具指南</a>」<br>文/彭宏豪</p><p>Hello 各位好，这里是效率工具指南。<br>我是小豪。  </p><p>很久之前介绍过一款电脑上的图片管理工具 Eagle（说起来我也很久没用过这个工具了），功能很强大，可以将本地图片、网络图片（截图）、字体、视频、音频集中到一处，通过文件夹、标签、创建筛选条件等进行分类管理。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446619958775.jpg"></p><p>唯一不足的地方在于，这款软件是付费应用——买断制 199 元，如果你日常对图片管理的需求不高，可能不一定下得了手👋。   </p><p>但是别急，有需求的产品就会有替代品。  </p><p>国内的开发者 @chitaner 开发了一款可称作 Eagle 替代品的软件——<strong>Picsee</strong>。</p><p>它并没有完全复刻 Eagle，而是在 Eagle 管理图片的基础上，增加了差异化的设计，例如：  </p><ul><li>增加了截图功能，可作为系统级别的截图工具，免去安装其他的截图工具   </li><li>简单的图片编辑 &amp; 标注功能  </li><li>增加了智能筛选的功能，可以自动找出电脑上重复的照片，节省宝贵的磁盘空间  </li><li>将图片上传到图床，方便在博客或其他平台引入图片  </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446642617690.jpg"></p><p>Picsee 官网：<br><a href="https://picsee.chitaner.com/">https://picsee.chitaner.com/</a></p><h2 id="管理的图片来源"><a href="#管理的图片来源" class="headerlink" title="管理的图片来源"></a>管理的图片来源</h2><p>Picsee 管理的图片主要有 3 种来源：  </p><ul><li>电脑本地的图片，在 Mac 上图片来自于照片 App</li><li>浏览器插件捕获的「整页截图」</li><li>Picsee 截图功能截取的图片</li></ul><p>和 Eagle 一样，Picsee 提供了可保存浏览器图片的剪藏插件，插件有两个选项：批量收藏和整页截图。  </p><p>整页截图类似于截图软件的「滚动截图」，可以将整个页面以长图的形式保存到 Picsee 中。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446660402452.jpg"></p><p>目前这个插件未上架到应用商店，可以从软件官网提供的链接下载。  </p><p>Picsee Extension 插件下载地址：<br><a href="https://picsee.chitaner.com/webExtension/">https://picsee.chitaner.com/webExtension/</a></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446690459364.jpg"></p><p>对比 Eagle 剪藏插件，Picsee 插件少了「选择区域截图」和「可视区域截图」的选项。  </p><p>表面上看 Picsee 无法自由截取保存局部区域，但实际上它把这个功能<strong>单独做成了截图功能</strong>，可在多个场景下使用，并不局限于浏览器中。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446712647750.jpg"></p><p>点击状态栏的 Picsee 图标，或者使用快捷键 Shift + Command + X，可以触发 Picsee 的截图功能。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446717747414.jpg"></p><p>下图是 Picsee 截图界面，选取截取的区域后，右下角提供了简单的标注工具、滚动截图、贴图和复制到剪贴板等选项。  </p><p>这与 Mac 上的第三方截图软件，例如 iShot 或者 Xnip 大同小异，如果你还没安装这些截图工具，可以<strong>考虑使用 Picsee 作为截图工具</strong>，管理图片和截图两不误。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446719885771.jpg"></p><p>截取的图片复制到剪贴板，切换到 Picsee 客户端，使用 Cmd + V 粘贴图片，可以将剪贴板的图片保存到 Picsee 中，这样就能实现类似 Eagle 插件「选择区域截图」的效果啦。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446749265477.jpg"></p><h2 id="预览图片-视频"><a href="#预览图片-视频" class="headerlink" title="预览图片/视频"></a>预览图片/视频</h2><p>保存在 Picsee 中的视频，左上角会显示视频格式，例如下图中的多个 mp4 的小字。  </p><p><strong>将鼠标移动到视频上方，会自动播放视频</strong>，且会播放声音，如果是在办公室使用，且电脑带有扬声器，预览视频之前，请记得先关闭声音。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446598488239.jpg"></p><p>视频可以用鼠标快速预览，此外还有一种预览图片/视频的方法：选中图片/视频，按下<strong>空格键</strong>。  </p><p>下图是一张图片的预览页面，电脑上安装过第三方「图片浏览器」的朋友，会不会觉得似曾相识呢？  </p><p>点击预览界面底部的编辑按钮，可以对图片进行简单的编辑。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446762567731.jpg"></p><p>在 Picsee 中可以对图片进行简单的编辑，也是它区别于 Eagle 的一个优点，想得真周到，在此为开发者点个赞👍。  </p><h2 id="图片导出"><a href="#图片导出" class="headerlink" title="图片导出"></a>图片导出</h2><p>在图片预览状态下，点击下方的「导出」按钮，可以打开导出面板。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446607599471.jpg"></p><p>不同于一些软件的导出功能就是单纯的导出，Picsee 的导出面板提供了一些额外的选项：  </p><ul><li>导出时转换为其他图片格式，包含 bmp、jpeg、png 和 tiff </li><li>若导出格式为 JPG，可以调整图片质量（即压缩强度） </li><li>清除图片的 EXIF 信息，这可以去除图片包含的位置信息，保护个人隐私  </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446605621218.jpg"></p><h2 id="智能筛选"><a href="#智能筛选" class="headerlink" title="智能筛选"></a>智能筛选</h2><p>除了图片编辑和格式转换，Picsee 中还有一个实用的功能：<strong>找出电脑上重复的照片</strong>，为磁盘腾出空间。  </p><p>点击左侧栏「智能任务」右侧的 + ，选择「创建智能任务」。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446770770282.jpg"></p><p>这里的「智能任务」，就是借助软件内置的程序，帮我们自动找出相似的照片。  </p><p>下图的「范围」是选定要查找可能存在重复照片的位置，勾选的位置越多，程序查找起来，花费的时间也会增加。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446809012846.jpg"></p><p>创建好智能任务后，等待程序运行完毕，就能看到相册中存在的重复照片。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446812247859.jpg"></p><p>由于苹果自带照片 App 的限制，无法直接在 Picsee 中删除重复的照片。  </p><p>这里提供一个删除重复照片的小技巧：选中两种重复的照片，右击鼠标，选择「<strong>在 Finder 中显示</strong>」，在 Finder 中就可以删除重复的照片啦。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446813310018.jpg"></p><h2 id="导入素材包"><a href="#导入素材包" class="headerlink" title="导入素材包"></a>导入素材包</h2><p>最后，还要给各位安利一下 Picsee 的作者 @chitaner 为用户整理的<strong>必应壁纸</strong>素材包，共计 7000 多张高清壁纸。   </p><blockquote><p>软件作者的话：偶尔上Bing搜索，经常被它的背景页，惊讶到，太美了！从网上搜索发现，有搜集这些图片，拿来做桌面壁纸的，也专门有人利用Bing作源做壁纸应用，壁纸网站的，微软也围绕这一点自己单独出了个壁纸应用。这次，从网络上搜集了Bing2009年到目前为止的，7000多张的壁纸，共6G左右大小，做成了Picsee素材包，方便分享下载研究学习使用，公开使用注意版权。  </p></blockquote><p>想要的朋友，可以从 Picsee 官网下载：<br><a href="https://sourl.cn/5iZvEg">https://sourl.cn/5iZvEg</a>  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446818322269.jpg"></p><p>将素材包下载到本地后，点击顶部工具栏的按钮，选择「导入素材包」，导入后就可以看到所有的必应壁纸啦。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/13/16446822477006.jpg"></p><p>写完真累，还没有夜宵，有帮助的话，请多多点赞或分享～   </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>图片管理</tag>
      
      <tag>截图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何将b站上的视频下载到本地？5个下载B站视频的好用工具！</title>
    <link href="/2022/02/11/2022-2-11-bilibili/"/>
    <url>/2022/02/11/2022-2-11-bilibili/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于微信公众号「效率工具指南」<br>文/彭宏豪     </p><h2 id="贝贝BiliBili"><a href="#贝贝BiliBili" class="headerlink" title="贝贝BiliBili"></a>贝贝BiliBili</h2><p>这是一个在线下载 B 站视频的工具，只要有网就可以使用，不限制特定的平台。 </p><p>在网站顶部粘贴要下载的视频链接，输入验证码，点击右侧的「解析视频」。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/11/16445897825726.jpg"></p><p>解析得到视频后，将鼠标移动到视频上方右击，选择「视频存储为」，确定保存视频的位置，等待视频完成下载。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/11/16445898557084.jpg"></p><p>贝贝BiliBili 网址：<br><a href="https://xbeibeix.com/api/bilibili/">https://xbeibeix.com/api/bilibili/</a></p><h2 id="MikuTools"><a href="#MikuTools" class="headerlink" title="MikuTools"></a>MikuTools</h2><p>除了贝贝BiliBili，还有另外一个好用的多功能在线网站——<strong>MikuTools</strong>，这个网站聚合了多种常用的小工具，包含我们这里要用到的 B 站视频下载工具。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/11/16445905220528.jpg"></p><p>MikuTools 网址：<br><a href="https://tools.miku.ac/bilibili_video_downloader/">https://tools.miku.ac/bilibili_video_downloader/</a>  </p><p>这个工具有一个不太好的地方在于，<strong>下载的视频格式为 flv</strong>，在导入一些剪辑软件之前，可能要先转换为 mp4 格式。  </p><p>如果你需要转换视频格式，可以使用之前介绍过的另外一款工具 QuickCut：  </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649919194&idx=1&sn=d51a53be3d5bdcb2f1c520800d55810e&chksm=83a88af7b4df03e137de5e218348c7f0cf34408d502605574b7ef859b28e4530b4c0dc8d37c4&token=855337760&lang=zh_CN#rd">多功能视频工具箱，免费良心还好用｜Quick Cut</a>       </p><h2 id="浏览器插件「B站下载助手」"><a href="#浏览器插件「B站下载助手」" class="headerlink" title="浏览器插件「B站下载助手」"></a>浏览器插件「B站下载助手」</h2><p>插件名称：B站下载助手</p><p>这是我一直以来使用的方法，到目前为止还未失效。</p><p>安装插件之后，在视频页面右下角会多出一个和小破站主色调相同的按钮。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/11/16445814939730.jpg"></p><p>点击按钮，会打开一个面板，下载的视频清晰度取决于播放时选择的清晰度。</p><p>其他的两个选项「下载模式」和「合并下载」保持默认即可，点击底部的「<strong>合并下载</strong>」，就可以下载视频啦。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/11/16445850605450.jpg"></p><p>目前这款浏览器插件已从应用商店下架，无法直接安装，有需要的朋友，可以扫描下方的二维码，在公众号「效率工具指南」后台回复「B站」，获取插件安装包。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p><h2 id="Downie"><a href="#Downie" class="headerlink" title="Downie"></a>Downie</h2><p>Downie，可能是 Mac 上最强大的视频下载工具，可以下载多个视频网站的内容。  </p><p>它使用起来也非常简单：复制想要下载的视频链接，切换到 Downie，按下 Command + V 粘贴链接，就可以下载视频啦。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/02/11/16445865620008.jpg"></p><p>Downie 用起来非常方便，省时又省力，是一个非常值得购入的工具，软件为买断制，79 元，一次付费可长期使用。  </p><p>Downie 官网：<br><a href="https://software.charliemonroe.net/downie/">https://software.charliemonroe.net/downie/</a></p><h2 id="其他的工具"><a href="#其他的工具" class="headerlink" title="其他的工具"></a>其他的工具</h2><p>除了本文介绍的工具，我之前在另外一篇文章中，还介绍其他的下载 B 站视频的方法，感兴趣的可以戳下方👇的链接：</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649908756&idx=1&sn=3b0d554a0cb7e228adb3b21fdc2eab1d&chksm=83a86239b4dfeb2f2a9aa85501bd61ed373070a802baee26f51d92faa2e963b21a9189b114a5&token=855337760&lang=zh_CN#rd">以为是使用浏览器的高手，看了这些才知道我是个弟弟</a>    </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>B站</tag>
      
      <tag>下载</tag>
      
      <tag>Downie</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>flomo 为何与众不同？</title>
    <link href="/2022/01/29/2022-1-29-flomo/"/>
    <url>/2022/01/29/2022-1-29-flomo/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>文/彭宏豪   </p><p>flomo，是一个类似于私密版微博的轻量笔记工具，可以在多种设备、平台上使用。  </p><p>如果你对 flomo 还不了解，可以查看我之前写过的一些文章：  </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649910143&idx=1&sn=41dd71db6a5892735694bbb2deef53ff&chksm=83a86f52b4dfe644df026cd7c7fdfcd1e00269e8a4b44af95c8776fd61ad22934d07bae49f63&scene=21#wechat_redirect">轻量好看的笔记工具，虽然小但操作真的骚｜flomo</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649917151&idx=1&sn=4f4625cf29530f35b0cb9a21c5db523c&chksm=83a882f2b4df0be42df6a4e0df12a1e5c277ef6a8a81fa20a75745688c4c4f01e0346e56603b&token=1635685711&lang=zh_CN#rd">flomo 好用玩法</a>    </p><p>使用一个产品，除了关注产品本身的功能、界面设计，对比它和其他同类产品的差异，有时候更细心的人，可能还会关注到产品背后的人。  </p><p>想起前两天在公众号「乱翻书」看到作者「潘乱」说的一句话：  </p><blockquote><p>产品是产品经理世界观的映射。  </p></blockquote><p>我相信，许多选择使用 flomo 的人，不仅因为它是一款新产品、它的轻量简洁，可能还有一部分原因来自于：  </p><ul><li>产品调性（很虚的东西，但又确实存在），产品给人的「感觉」   </li><li>创始人持续输出内容的加持（创始人气质），具体体现在服务号 flomo weekly 周刊文章中表达的各种观点，他们不仅造了工具，还在一些问题上给我们提供一些思路           </li><li>借助 API，flomo 原来还可以和这么多软件一起使用，flomo 就像是无处不在  </li><li>不少人会主动为 flomo 贡献自己写的代码、插件和用法等   </li><li>flomo 和许多其他软件推出了「弱弱联合」的活动，看到两个自己都在用的产品，有一天居然合作了，某种程度上算是一种惊喜       </li></ul><h2 id="产品-amp-思路"><a href="#产品-amp-思路" class="headerlink" title="产品 &amp; 思路"></a>产品 &amp; 思路</h2><p>做产品可能有两种人：  </p><ul><li>一种是觉得做出来的产品能赚钱，所以我要去做；</li><li>一种是我想做的产品刚好是我要用到的，所以我要去做，做一个产品来取悦自己。   </li></ul><p>看 flomo 的少楠老师写的东西，我会好奇：他是怎么写出那些高质量的内容的，他的思考能力是如何炼成的，他是如何处理自己输入的各种信息的。    </p><p>在做 flomo 之前，少楠老师在 Notion 上维护了一个付费专栏「产品沉思录」，每周向订阅者发送他筛选的有价值的信息。   </p><p>关于如何维护这个付费订阅服务，少楠老师在一期播客节目《“我想用flomo改善一代人的思考方式”》中谈到：  </p><blockquote><p>写产品沉思录，其实不是写，更多像是在「<strong>拼装</strong>」，把日常积累的想法、观点，一周大概 50-70 条左右的内容，在需要用到的时候调出来，再拿格式、语言组织一遍就完了，写作现在更像是拼积木的过程。</p></blockquote><p>播客节目文字稿 ➡️ <a href="https://mp.weixin.qq.com/s/tkgaIp7mQfMJMZuI2igVyQ">AhaClub X 少楠：“我想用flomo改善一代人的思考方式”（附文字版）</a>   </p><p>而他打造的 flomo，正是他用来存放日常产生的想法、观点的工具（容器）。    </p><p>但是，有了工具还不够，工具不是目的，而是达成目的——<strong>更多的记录，以及通过记录引发的思考</strong>——的路径。   </p><p>因此，他不仅提供了工具，还不余遗力地向我们提供用好工具的思路：    </p><blockquote><p>重要的不是记出漂亮的笔记，而是更好地思考。   </p><p>使用 flomo 的最好方法不是丢进去一个链接，或者全文收藏。而是把你需要的内容先标记出来，然后汇总；或者在阅读完成之后，用自己的理解再在 flomo 中写一遍。  </p><p>如果你在获取知识的途中没有做任何的加工（即用自己的话说出来），那么只是一个知识的搬运工。（最初源自卢曼）  </p><p>一个事实：任何漂亮的输出工具，都不能帮你解决输入过少的问题。而多数时候，难以输出的问题往往是后者。</p><p>所谓的「知识管理」只是一种手段，而不是目的。如果你本身没有需要解决的问题（或者说专注研究的领域），那么知识管理只是个伪命题。</p></blockquote><h2 id="弱弱联合"><a href="#弱弱联合" class="headerlink" title="弱弱联合"></a>弱弱联合</h2><p>与 flomo 合作过的软件名单：  </p><ul><li>轻芒  </li><li>白描 </li><li>滴答清单 </li><li>有知有行  </li><li>看理想  </li><li>简悦  </li><li>幕布  </li><li>得到</li></ul><p>弱弱联合，本质上是一种合作，像是「抱团取暖」，合作的基础可能是彼此气质相投，合作也是产品之间交换用户的过程：  </p><blockquote><p>用户可能本身就很喜欢自己在用的产品了，突然有一天，看到官方推荐了另外一个产品，基于此前的信任，可能会更倾向于尝试一下这个新产品。   </p></blockquote><h2 id="flomo-101"><a href="#flomo-101" class="headerlink" title="flomo 101"></a>flomo 101</h2><p>除了这些，flomo 的帮助文档「<strong>flomo 101</strong>」，也是一个比较特殊的存在：   </p><p>帮助文档名称包含的数字 101，来自于：</p><blockquote><p>「101课程」，通常是指 XXXX 的入门级课程。许多教程的第一章或者导论部分都会用「101」做标注，这个词汇渐渐的就被引申了出来，用来表示基础入门级课程，变成了一个代号，也就是<strong>基础课程的同义词</strong>。</p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/29/16432694521229.jpg"></p><p>为了让你更清晰地了解 flomo 101 的内容，我在幕布中梳理了首页的框架：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/29/16432695938219.jpg"></p><p>帮助文档中介绍产品是什么、能解决你的什么问题、产品从哪里来，这些都没毛病，但唯独有一个——<strong>flomo 不擅长什么</strong>，让人眼前一亮。  </p><p>不少产品在宣传的时候，都会扬长避短，往自己好的方面说，对做不来的事情避而不谈。</p><p>flomo 却明确列出了自己「不擅长」的地方，并附上链接，推荐了相应的工具。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/29/16432709591199.jpg"></p><p>列出自己的不擅长这种做法，一方面可能是在提醒自己明确产品的边界，只把当前的「小事」做好就够了，不要想着 All in one，一方面是让用户不要对 flomo 未来的迭代方向抱有过高的预期。   </p><h2 id="互动一下"><a href="#互动一下" class="headerlink" title="互动一下"></a>互动一下</h2><p>你有在用 flomo 吗？你使用 flomo 的原因是什么呢？</p><p>如果还没使用过，可以扫描下方的二维码注册，注册后可获得 28 天的 Pro 会员： </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/29/qrcodea--a1.jpg" alt="QRcode_A — a1"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>flomo</tag>
      
      <tag>产品</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用 FCPX 给视频加字幕 | MacBook</title>
    <link href="/2022/01/24/2022-1-24-fcpx/"/>
    <url>/2022/01/24/2022-1-24-fcpx/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于「<a href="https://mp.weixin.qq.com/s/8VCrqI_pDRlRDTFJZwOQtw">效率工具指南</a>」<br>文/彭宏豪</p><p>Hello 各位好，我是小豪。</p><p>今天的文章，想来聊一下，如何给视频添加「观看体验更好」的字幕。  </p><p>👉 温馨提示：本文配合之前发过的一期视频食用更佳</p><p><a href="https://www.bilibili.com/video/BV1hS4y1M7ye">剪辑软件的隐藏用法，给视频加字幕真的太爽啦！</a>   </p><p>剪映电脑版出来之前，给视频添加字幕，不少人可能会使用 <strong>Arctime</strong>，一款免费的跨平台字幕软件，支持 Windows、macOS 和 Linux 系统。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16429905484613.jpg"></p><p>剪映出来后，对于简单的视频剪辑、给视频加字幕，用剪映都可以完成。  </p><p>以「加字幕」为例：</p><ul><li>内置的「识别字幕」和「识别歌词」功能，识别准确率很高，且完全免费</li><li>识别得到的字幕，还可以套用右侧栏的「预设样式」，让字幕更好看一些，或是让字幕与视频画面对比更明显、观众更容易看清</li></ul><p>当然，内置的字幕样式用起来是很方便，但不一定能满足所有人的需求。</p><p>因为它只是一个模板，只能满足需求的最大公约数——快、容易出效果、最好不要让「我」调整参数。   </p><p>譬如下面的「黑底白字」字幕样式，第一次使用可能会觉得没有什么问题，字幕下方的黑色背景，让字幕与画面可以很好地分隔开来。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16429903700576.jpg"></p><p>不过后来看了一些 Up 主的视频，会发现这个字幕样式还是会有一些问题：</p><p>白色的文字和黑色的背景挨得太近，左右和上下的间距很小，看起来有点拥挤。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16429963050436.jpg"></p><p>剪映目前只提供了更改黑色背景<strong>透明度</strong>的功能，暂不支持调节黑色背景的宽度。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16429984254858.jpg"></p><p>我觉得更理想的字幕样式，应该如下图所示，字幕文本和后面的黑色背景的四周留有一定的宽度，保持呼吸感。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16429985968994.jpg"></p><p>要实现这种字幕效果，目前我知道的两种方式，或者两个工具：</p><ul><li>Arctime</li><li>FCPX</li></ul><p>Arctime 的实现方法我在这里就不展开了，感兴趣的朋友可以去 B 站搜索 Arctime 相关的教程。 </p><p>下面说一下在剪辑软件 FCPX 上的实现方法： </p><h3 id="将-srt-字幕转换为-fcpxml"><a href="#将-srt-字幕转换为-fcpxml" class="headerlink" title="将 srt 字幕转换为 fcpxml"></a>将 srt 字幕转换为 fcpxml</h3><p>开始操作之前，请先准备好视频字幕文件 srt，接着打开网站 crossub，点击「去转换 .srt」。</p><p>crossub 网址：<br><em><a href="https://crossub.xiaowude.com/">https://crossub.xiaowude.com/</a></em></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16430016643361.jpg"></p><p>上传字幕文件后，调整下方的参数： </p><ul><li>目标输出：选择 FCPX 可用的「fcpxml」</li><li>帧速率：根据剪辑工程设置的帧率，选择相应的帧率</li><li>字幕风格：选择「自适应背景字幕」   </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16430017925080.jpg"></p><p>这里的「自适应背景字幕」中的<strong>自适应</strong>，说的是字幕文本后面<strong>黑色背景的宽度</strong>，会随文本字数的变化而变化，而不是一直保持不变。 </p><p>调节下面的两个参数，可以调整字幕文本与黑色背景四周的间距——</p><ul><li>X 轴边距比例：数值越大，字幕文本与黑色背景左右两侧的宽度越大</li><li>Y 轴边距比例：数值越大，字幕文本与黑色背景上下边缘的高度越大</li></ul><p>网站也提供了调整参数后的<strong>预览效果</strong>，你可以实时查看设置不同参数的效果。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16430022239308.jpg"></p><p>经过测试后，我觉得 <strong>X 设置为 0.5，Y 设置为 0.3</strong>，得到的字幕文本与黑色背景四周的边距，是我比较满意的，供你参考。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16430029084299.jpg"></p><p>调整好参数后，点击页面最下方的「导出文件」，下载转换后的 fcpxml 字幕文件。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16430030173186.jpg"></p><p>下载得到的 fcpxml 文件，它的文件名多了一段后缀「.删除此后缀」，需要对文件进行<strong>重命名</strong>，删除后缀多余的文本，之后才能导入 FCPX。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16143501796977.jpg" alt="-w1560"></p><h3 id="FCPX-添加插件"><a href="#FCPX-添加插件" class="headerlink" title="FCPX 添加插件"></a>FCPX 添加插件</h3><p>在 FCPX 导入 fcpxml 字幕前，我们还需要给 FCPX 安装一个「自适应背景字幕」的插件。  </p><p>这个插件最初来自 B 站 Up 主 @少年广志，不过目前他的账号已经注销了，还好有另外一位 Up 主 @偷偷不偷懒 在经过授权后，将这个插件上传到了自己的网站上。  </p><p>插件下载地址：<br><em><a href="https://crossub.xiaowude.com/plugins">https://crossub.xiaowude.com/plugins</a></em></p><p>在有些浏览器中，点击插件「下载」按钮可能会遇到无法下载的情况。</p><p>如果你无法顺利下载，可以在我的公众号「效率工具指南」后台回复【<strong>自适应</strong>】，获取插件的备用下载链接。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16430035793342.jpg"></p><p>解压下载的插件，会得到一个文件夹，将这个文件夹移动到 <code>影片/Motion Templates/Titles</code> 路径下。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16430039412090.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16430040095351.jpg"></p><h3 id="03-将-fcpxml-字幕导入-FCPX"><a href="#03-将-fcpxml-字幕导入-FCPX" class="headerlink" title="03. 将 fcpxml 字幕导入 FCPX"></a>03. 将 fcpxml 字幕导入 FCPX</h3><p>安装好插件后，就可以导入 fcpxml 字幕了。</p><p>选择「文件 &gt;&gt; 导入」，选择 <strong>XML</strong>，导入 fcpxml 文件。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16430046199831.jpg"></p><p>导入 fcpxml 文件后，它会在 FCP 中创建一个<strong>新的事件</strong>「crossub」，切换到新事件，再点击右侧的剪辑工程。  </p><p>在剪辑工程下方的<strong>时间轴</strong>上，就能看到所有的字幕文本，Cmd + A 全选所有字幕文本，再按下 Cmd + C 复制。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16143506613307.jpg" alt="-w1252"></p><p>点击时间轴中部的<strong>向左的箭头</strong>，切换到原来的剪辑工程中。   </p><p>将时间线移动到字幕开始的位置，再按下 Cmd + V 粘贴，操作无误的话，字幕与视频此时应该是刚好能对上的。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16143508723977.jpg" alt="-w1414"></p><p>下图就是在 FCPX 中的字幕效果，导入的字幕如果发现有错别字，<strong>双击字幕，就可以直接修改</strong>，不需要重新折腾一遍字幕格式转换。  </p><p>FCPX 中的字幕默认使用的是苹果的「苹方」字体，保险起见，建议将字体更改为<strong>免费可商用的字体</strong>，例如阿里巴巴普惠体或思源黑体。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16430048942170.jpg"></p><p>在 FCPX 中调整字幕的字号大小，可能还会遇到一个问题：调整后的字幕文本偏离了原来的位置，无法居中显示。  </p><p>这个问题也很好解决，只需要全选所有字幕，调整右侧的「<strong>基线</strong>」参数，将字幕恢复到看起来<strong>垂直居中</strong>的位置即可。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/24/16430057071332.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>视频剪辑</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VSCode 添加 Vue 模板</title>
    <link href="/2022/01/23/2022-1-23-vuetemplate/"/>
    <url>/2022/01/23/2022-1-23-vuetemplate/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 大家好，我是小豪。  </p><p>昨晚在看 coderwhy 老师的 Vue 视频，其中有一小节讲到，<a href="https://www.bilibili.com/video/BV15741177Eh?p=12">如何在 WebStorm 里添加 Vue 模板</a>。</p><p>但我用的编辑器是 VS Code，且视频中没有讲到「<strong>如何在 VS Code 中添加 Vue 模板</strong>」，后来在网上搜了一下，找到了解决方法，写下这篇短文章作为记录。</p><p>本文想实现的需求是，在 HTML 中输入 <code>vue</code>，再按下 Tab 键，就可以快速添加下面👇的 <strong>Vue 模板（代码片段）</strong>。  </p><pre><code class="hljs handlebars"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span></span><span class="xml">    </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">message</span>&#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="xml">    const app = new Vue(&#123;</span><span class="xml">        el: &#x27;#app&#x27;,</span><span class="xml">        data: &#123;</span><span class="xml">            message: &#x27;你好啊&#x27;</span><span class="xml">        &#125;</span><span class="xml">    &#125;)</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span></code></pre><p>按照下面的路径，打开 VS Code 的<strong>用户片段</strong>。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/23/16429006381714.jpg"></p><p>在打开的窗口搜索 <code>html</code>，点击下方返回的 <code>html.json</code>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/23/16429008140008.jpg"></p><p>如果你之前没有自定义代码片段，打开的 json 文件里，应该只有一个注释的示例。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/23/16429009345746.jpg"></p><p>在注释的代码下方，粘贴代码：  </p><pre><code class="hljs stata"><span class="hljs-string">&quot;Print to console&quot;</span>: &#123;<span class="hljs-string">&quot;prefix&quot;</span>: <span class="hljs-string">&quot;vue&quot;</span>,<span class="hljs-string">&quot;body&quot;</span>: [<span class="hljs-string">&quot;&lt;div id=\&quot;</span><span class="hljs-keyword">app</span>\<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;\t&#123;&#123;message&#125;&#125;&quot;</span>,<span class="hljs-string">&quot;&lt;/div&gt; \n&quot;</span>,<span class="hljs-string">&quot;&lt;script src=\&quot;</span>js/vue.js\<span class="hljs-string">&quot;&gt;&lt;/script&gt;&quot;</span>,<span class="hljs-string">&quot;&lt;script&gt;&quot;</span>,<span class="hljs-string">&quot;\tconst app = new Vue(&#123;&quot;</span>,<span class="hljs-string">&quot;\t\tel: &#x27;#app&#x27;,&quot;</span>,<span class="hljs-string">&quot;\t\tdata: &#123;&quot;</span>,<span class="hljs-string">&quot;\t\t\tmessage: &#x27;你好啊&#x27;&quot;</span>,<span class="hljs-string">&quot;\t\t&#125;&quot;</span>,<span class="hljs-string">&quot;\t&#125;)&quot;</span>,<span class="hljs-string">&quot;&lt;/script&gt;&quot;</span>,],<span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;Log output to console&quot;</span>&#125;&#125;</code></pre><p>粘贴的代码，就是从文章开头的 Vue 模板（代码片段）演变而来的。  </p><p>要点：</p><ul><li>原先的代码片段，每一行开头和结尾都要加上引号，且末尾要加上英文逗号</li><li>两行代码之间有空行的，要在前一行代码末尾加上换行符 <code>\n</code></li><li>设置缩进的，需要在每一行代码的开头加上 <code>\t</code></li><li>html 标签设置的属性值，引号前面要加上转义符 <code>\</code></li><li>“prefix” 的值 “vue”，就是触发插入代码片段的文本，如果你不喜欢这个，可以更改为其他更好记的文本</li></ul><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">        </p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>近期值得关注的修图 App</title>
    <link href="/2022/01/03/2022-1-3-pixelmator/"/>
    <url>/2022/01/03/2022-1-3-pixelmator/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于公众号「<a href="https://mp.weixin.qq.com/s/3NLj0A5vsuepaqQKgVp6uA">效率工具指南</a>」<br>文/彭宏豪  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/03/16411739441002.jpg"><br>☝☝ 扫码加入我的社群   </p><p>Hello 各位早上好，我是小豪。    </p><p>元旦假期出去玩，难免会拍照。  </p><p>今天就给大家介绍一个好用的修图应用——<strong>Pixelmator Photo</strong>。  </p><p>Pixelmator Photo，是 iPad 上一个功能强大的修图应用，可以调整图片的多个参数，如白平衡、色相饱和度、颜色平衡、色阶和曲线等，涵盖了修图会用到的大部分调整命令。</p><p>此外，你还可以通过 App 底部的滤镜预设，一键获得不同效果的图片，若你对添加了滤镜的图片效果不满意，还可以改变右侧栏的参数进行二次调整。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/03/16411327823014.jpg"></p><p>前段时间（去年 12 月），这个软件上线了 iOS 版本，上新价格为 25 元，原价 50 元。   </p><p>如果你之前通过「<strong>限免</strong>」活动下载了 iPadOS 版本，那么恭喜你：<strong>iOS App 也可以免费下载</strong>。 </p><p>打开图片，点击右上角的「调整」按钮，可以在底部调出内置的滤镜，随便应用一下，原本平平无奇的图片，瞬间就变得好看了。   </p><p>点击右下角的「…」图标，选择「<strong>显示调整</strong>」，可以打开 iPad 版本一样的工具栏，进行更精细化地调整。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/03/img1194.PNG" alt="IMG_1194"></p><p>滤镜是许多修图应用的基本操作了，不需要过多描述。  </p><p>Pixelmator Photo 还有两个值得一用的功能：  </p><ul><li>实时对比调整前后的图像</li><li>拷贝/粘贴调整，实现批量修图   </li></ul><p>点击左上角的 &lt;|&gt; 图标，它会在图片中央添加一条<strong>白线</strong>，白色两侧分别是调整前和调整后的对比，拖拽白线，可以实时对比前后的效果。  </p><p>调整好一张图片后，如果你想将调整好的效果，应用到剩下的 8 张图片，不需要手动重复 8 次。</p><p>可使用「更多」菜单中的「<strong>拷贝调整</strong>」，将调整好的效果批量「粘贴」到其他的图片。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/03/img61c6f277febe1.jpeg" alt="IMG_61C6F277FEBE-1"></p><p>第一次了解<strong>手机 App 也能批量修图</strong>，还是从女朋友用 VSCO 修图的时候知道的。</p><p>而这回，Pixelmator Photo 也有了，单纯从提高修图效率的角度而言，它就值得买入了。  </p><p>顺便一提，除了 Pixelmator Photo，这个团队还有另外两个产品：  </p><ul><li>iOS：Pixelmator，需付费 30 元才能下载  </li><li>macOS：Pixelmator Pro，需付费 128 元才能下载 </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/03/16411315712660.jpg"></p><p>关于 Pixelmator Photo 和 Pixelmator Pro 的区别，有网友 @Ye Han 说到：  </p><blockquote><p>Pixelmator Photo 是 Pixelmator 团队在开发 iPadOS 平台的 Pixelmator Pro 时遇到困难，从 macOS 平台的 Pixelmator Pro 中剥离摄影后期功能单独发布的。</p></blockquote><h2 id="新的一年继续坚持分享"><a href="#新的一年继续坚持分享" class="headerlink" title="新的一年继续坚持分享"></a>新的一年继续坚持分享</h2><p>新年刚开始，这两天有在想，新的一年要做什么？要立下什么 flag？</p><p>但还没有很好的头绪，只想到一点——<strong>新的一年继续坚持「分享」</strong>。   </p><p>因为分享，我从网上认识了一些网友：  </p><p>在网上坚持分享，就是一种创造链接的方式，别人通过你写的东西，对你形成初步的印象，刚开始可能不会主动加你微信。</p><p>但由于你长期高价值的分享，他就会觉得你这个人有意思、值得交往，可能就会主动来「撩」你了。  </p><p>原先借由文章创造的弱连接（弱关系），就会变成一种长期、可频繁交流的强关系。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/03/pu-shi-wu-hua-de-zi-mei-ti-jing-li2001.png" alt="朴实无华的自媒体经历2.001"></p><p>也开始收获了一些物质回报： </p><p>2022 年第一天，我统计了去年从知乎和公众号获得的收入——19450 元。   </p><p>对比起别人的月入好几万，虽然不值一提，但它至少让我看到了坚持的回报。    </p><p>如果你在新的一年，也想有所变化，让自己成为更值得交往的人，可以试着<strong>从分享开始</strong>：  </p><ul><li>在朋友圈分享   </li><li>写公众号</li><li>录播客</li></ul><p>等等。</p><p>如果你对写公众号感兴趣，可以加入我的社群，查收我刚写的「公众号写作工具流」👇👇：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/03/image818285884554852.PNG" alt="image_818285884554852"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">        </p>]]></content>
    
    
    
    <tags>
      
      <tag>App</tag>
      
      <tag>工具</tag>
      
      <tag>修图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何美化一个二维码？</title>
    <link href="/2022/01/01/2022-1-1-qrcode/"/>
    <url>/2022/01/01/2022-1-1-qrcode/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于我的公众号「<a href="https://mp.weixin.qq.com/s/6wLSzIZ5YrU0hjX0q3a4RA">效率工具指南</a>」<br>文/彭宏豪</p><p>Hello 各位好，我是小豪。<br>2022 新年第一天，祝各位新年快乐。   </p><p>今天这篇文章，来自于昨天同事在排版文章的时候，遇到的一个问题：<strong>如何更改默认二维码的黑白两色？</strong>    </p><p>想实现的效果如下，将二维码默认的黑色方块更改为红色，默认的白色方块更改为浅黄色。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/01/geng-gai-er-wei-ma-de-yan-se.png" alt="更改二维码的颜色"></p><p>最开始想到一个比较笨的方案：使用 PS 的抠图工具，将二维码黑色的小方块抠出来，再单独改色，但这样操作起来比较麻烦，而且方块太多，容易漏选，可能会导致处理后的二维码用不了。  </p><p>后来，想起了很久之前看过的一个 PS 教程，提到的一个知识点「<strong>渐变映射</strong>」。</p><p>跟着网上的小教程操作，一下就搞定了，不需要像个老实人，用魔棒工具一个一个点选抠图。   </p><p>下面是具体操作过程：   </p><p>将二维码导入 PS，长按 PS 右下角第 4 个「调整」按钮，在弹出的菜单，选择「渐变映射」。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/01/16410314693419.jpg"></p><p>右侧的图层面板会出现一个新的图层——<strong>调整图层</strong>，会改变下方图层的颜色，原先黑白两色的二维码变成了浅黄色。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/01/16410317227519.jpg"></p><p>要实现文章开头说到的效果——二维码默认的黑色方块变为红色，默认的白色方块变为浅黄色，还需要多一步操作。</p><p>单击右上角的渐变缩略图，打开渐变编辑器，点击渐变滑块下方的滑钮，更改颜色，就能影响二维码最终的颜色。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/01/16410320248684.jpg"></p><p>将渐变滑块左侧的浅黄色更改为红色，将滑块右侧的白色更改为浅黄色，就得到了我最终想要的效果，如下图。 </p><p>使用这种方法，真的比老老实实抠图方便多了，每天一个偷懒小技巧，你学会了吗？   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/01/16410323845499.jpg"></p><p>除了这个小技巧，再分享另外两个和「二维码」相关的网站。   </p><h2 id="草料二维码"><a href="#草料二维码" class="headerlink" title="草料二维码"></a>草料二维码</h2><p>草料二维码，可以对默认黑白两色的二维码进行美化。  </p><p>点击右侧的按钮，从本地上传二维码，使用网站顶部的工具栏，可以：  </p><ul><li>套用设计好的二维码样式</li><li>在二维码正中间添加一个 logo  </li><li>更改二维码的前景色和背景色  </li><li>给二维码添加文字   </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/01/16410325552256.jpg"></p><p>提一下其中的「<strong>更改二维码的前景色和背景色</strong>」，可以实现前面用 PS 的「渐变映射」更改二维码颜色的效果。   </p><p>下图的「二维码颜色」，就是二维码的<strong>前景色</strong>，对应默认二维码的黑色。  </p><p>「背景色」就是二维码的<strong>背景色</strong>，对应默认二维码的白色。  </p><p>分别调整这两个颜色，就可以更改默认二维码的黑色两色。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/01/16410330547706.jpg"></p><p>草料二维码的这个功能，好像比 PS 的「渐变映射」更简单了？  </p><p>「草料二维码」网址：<br><em><a href="https://mh.cli.im/">https://mh.cli.im/</a></em></p><h2 id="qrbtf-参数化二维码"><a href="#qrbtf-参数化二维码" class="headerlink" title="qrbtf 参数化二维码"></a>qrbtf 参数化二维码</h2><p>这是一个我之前一直在用的二维码工具，同样可以让黑白两色的二维码变得更漂亮。   </p><p>喜欢极简风格的朋友，推荐使用这个。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/01/16410335259275.jpg"></p><p>qrbtf 网址：<br><em><a href="https://qrbtf.com/">https://qrbtf.com/</a></em>    </p><h2 id="📢-我的社群"><a href="#📢-我的社群" class="headerlink" title="📢 我的社群"></a>📢 我的社群</h2><p>最后，放一下我在知识星球上创建的社群，前 30 名加入 79 元，感兴趣的可以加入。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/01/hai-bao.png" alt="海报"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2022/01/01/image581185158512144.PNG" alt="image_581185158512144"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">        </p>]]></content>
    
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>二维码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的 2021</title>
    <link href="/2021/12/31/2021-12-31-my2021/"/>
    <url>/2021/12/31/2021-12-31-my2021/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>很快，2021 年也要过完了，快到让我感慨：2021 这个数字还没写熟，2022 就要来了。    </p><p>按照往年的惯例，简要写一下 2021 年的个人总结。   </p><h2 id="年度-flag-完成情况"><a href="#年度-flag-完成情况" class="headerlink" title="年度 flag 完成情况"></a>年度 flag 完成情况</h2><p>年初我在得到 App 的一个活动中，立了 3 个 flag：      </p><p>✅ 公众号 1 万关注（目前 1.4 万关注）<br>✅ 换份工作<br>✅ 和女朋友走得长长久久     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/18/img0738.PNG" alt="IMG_0738"></p><h2 id="公众号概况"><a href="#公众号概况" class="headerlink" title="公众号概况"></a>公众号概况</h2><ul><li>关注数  </li></ul><p>从年初的 7038 到今天的 14605，关注净增 7567，一年的关注增长，就超过了好几年的努力，感谢各位读者的支持</p><ul><li>文章数量</li></ul><p>今年我特地在每篇原创文章前面加了一个标签 <strong>#2021</strong> ，标签会自动统计文章数量。</p><p>不包含这一篇，今年已发布 190 篇文章。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/18/16398394195524.jpg"></p><ul><li>公众号广告收入</li></ul><p>今年 5 月，我的公众号接到了第 1 条广告，公众号写了好多年，终于恰上饭了。   </p><p>我统计了一下，从 5 月份到 11 月，广告给我带来了 5550 元的收入，悲惨吧？   </p><p>老老实实、不懂变通搞自媒体，真的没有前💰途。   </p><p>多说一句，不要一看到，打着「轻松教你月入过万」为名的课程，脑子一热就去报名了，报名前请三思。    </p><h2 id="两件比较自豪的小事"><a href="#两件比较自豪的小事" class="headerlink" title="两件比较自豪的小事"></a>两件比较自豪的小事</h2><ul><li>公众号连续 100 天日更，详情见文章：<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649914441&idx=1&sn=5bd3c94f845c03c7c3b0114511078ead&chksm=83a87864b4dff1722f10afce7028d9c65d4022015edf89dc21613a8ccfa634bc014c39328a22&token=1693022434&lang=zh_CN#rd">日更公众号100天，这个flag最终还是没倒</a>        </li><li>即将完成累积 100 次跑步，目前进度：95/100   </li></ul><p>写东西和运动，在我看来，都属于可以做、也可以不做的事，因为没人在背后监督你，做了短期也不会有报酬。      </p><p>陆陆续续坚持运动，最明显的一点体会：9 月份之后到现在，貌似没有感冒过了。     </p><h2 id="2021-看过的书"><a href="#2021-看过的书" class="headerlink" title="2021 看过的书"></a>2021 看过的书</h2><p>今天看过的书，还是很少，看的也有点杂，没有一个集中的主题。  </p><p>写一下其中值得一读的书：   </p><p>《文城》<br>《我们为什么要睡觉？》<br>《绝非偶然：撬动星球的头部效应》<br>《幕后产品：打造突破式产品思维》<br>《稀缺：我们是如何陷入贫穷与忙碌的》<br>《不拘一格：网飞的自由与责任工作法》  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/18/albumtemp1639828664.PNG" alt="album_temp_1639828664"></p><h2 id="今年买过的一件好物"><a href="#今年买过的一件好物" class="headerlink" title="今年买过的一件好物"></a>今年买过的一件好物</h2><p>非 Apple Watch 莫属。</p><p>它有很多使用场景：   </p><ul><li>戴口罩时解锁 iPhone   </li><li>解锁 Mac 电脑   </li><li>电脑下载软件或开启权限时，连按两次侧边按钮，可替代输入电脑密码   </li><li>在公司午休，设置闹钟不会吵到别人    </li><li>手机来电震动提醒，不会错过别人的电话     </li></ul><p>了解更多，可以看我之前写过的一篇文章： </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649918282&idx=1&sn=768b3e70b4b10fbd9db2b41af4360782&chksm=83a88f67b4df0671cc3d4b5c94d1b2c12e563a7b091e1e0336c53031d7286ffcd22c125fe7fb&token=1693022434&lang=zh_CN#rd">Apple Watch 苹果手表的多种妙用</a>     </p><h2 id="今年开心的几件事"><a href="#今年开心的几件事" class="headerlink" title="今年开心的几件事"></a>今年开心的几件事</h2><ul><li>喜欢的歌手李健终于出新专辑💽了——「<strong>不期而遇</strong>」，有 15 首歌。这张新专辑，等了 5 年。  </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/18/img0753.JPG" alt="IMG_0753"></p><ul><li><p>女朋友给了我一个惊喜：偷偷从深圳跑到广州，还来接我下班。        </p></li><li><p>从广州搬到深圳，结束了不到一年的异地恋。    </p></li><li><p>生日那天，同事刘容送了我一个蛋糕🍰。</p></li></ul><p>再透露同事一个很用心❤️的细节：她会把别人的生日添加到微信备注里，这样和别人聊天、或者刷朋友圈，就可以知道谁快生日了。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/18/16398371915371.jpg"></p><ul><li>在知乎发了好几年东西，有好几次想：知乎啥时候给我发盒粽子呢？</li></ul><p>知乎的粽子一直没等到，今年终于等来了第 1 份礼物，想感慨一句：多年的付出，终于被看见了。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/18/16398378682896.jpg"></p><h2 id="最漫长的一段时间"><a href="#最漫长的一段时间" class="headerlink" title="最漫长的一段时间"></a>最漫长的一段时间</h2><p>因为 5 月底的广州疫情，中间有好长一段时间没和女朋友见面（主要是她不想见），见面的频率从 2 周一次变成了 85 天见一次。    </p><p>间隔之长，让原先​每周末最期待的事情都落空了。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/18/16398337928078.jpg"></p><h2 id="2021-年进度条"><a href="#2021-年进度条" class="headerlink" title="2021 年进度条"></a>2021 年进度条</h2><ul><li>元旦凌晨到了何老师的家，她穿着睡衣给我开门     </li><li>5 月劳动节的时候去了惠州，和妈妈、姐姐、弟弟一起在惠州逛  </li><li>5 月底因为广州疫情，和何老师隔了 85 天之后才见面  </li><li>6 月 17 日，我的公众号终于达到 1 万关注了  </li><li>6 月 28 日，收到了在得到上买的机械键盘，人生的第一个机械键盘，可惜后来掉漆了   </li><li>第一次过上七夕情人节</li><li>8 月 2 日，收到了在拼多多买的 Apple Watch  </li><li>8 月 15 日，和何老师去罗湖站旁边的一家狗咖撸狗🐶      </li><li>8 月 31 日，是我在一周进步上的最后一天班，之后裸辞了 56 天</li><li>9 月 21 日，中秋节，和志铭去了清远古龙峡，第一次玩漂流，好刺激  </li><li>9 月 22 日，续费了腾讯云服务器，一次性买了 3 年，总价为 1131 元     </li><li>10 月 25 日，我从广州搬到了深圳</li><li>10 月 27 日，到知识星球上班的第一天    </li><li>11 月 7 日，收到了在拼多多买的 iPhone 13  </li><li>12 月 25 日，累计跑步 100 次达成    </li></ul><h2 id="往年年度总结"><a href="#往年年度总结" class="headerlink" title="往年年度总结"></a>往年年度总结</h2><p>最后，附上我在过去 3 年写的年度总结：     </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649900020&idx=1&sn=ad8ebd361f716aa80e3da93369bd076a&chksm=83a847d9b4dfcecf3686e50154034bd2d6e43520d988e8fbbb9d235e259dc78ff1e43bfe39bb&token=1693022434&lang=zh_CN#rd">我的 2020 年度总结</a>    </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649881076&idx=1&sn=2cf2c3f5ac137f56d18c3fc70a8fa11d&scene=21#wechat_redirect">我的 2019 年简短总结</a>  </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649880133&idx=1&sn=76b4bbe6d989b90e0f2a5ff09f7a4093&chksm=83abf268b4dc7b7e17f40126393083496e4a5e1f2218335afc85f956a21e2122ee9238c3ff1b&scene=21#wechat_redirect">我的2018年简短总结</a>    </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>年终总结</tag>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub 搭配快捷指令，自动记录每天的起床时间</title>
    <link href="/2021/12/26/2021-12-26-githubshortcut/"/>
    <url>/2021/12/26/2021-12-26-githubshortcut/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 各位好。</p><p>今天想和各位分享一个有意思的小项目——用快捷指令 App 和 GitHub，自动记录每天的起床时间。  </p><p>这个项目源于之前介绍过的 <a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649917925&idx=1&sn=08dc018b0d3e65be81c1b5bc8572ce18&chksm=83a88dc8b4df04dee5b2716977fc1dba3b56a4a6952a164198d6c448335a8b4c288568b4a23c&token=1842935800&lang=zh_CN#rd">running_page</a> 作者 @yihong0618 的另外一个项目「早起记录」，它可以实现的效果如下：  </p><p>每天起床关闭闹钟后，触发快捷指令 App 运行程序，在 GitHub issue 下面会生成一段话，包含<strong>今天的气温、起床时间（具体到秒）、随机的一句诗</strong>。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/26/16405091835253.jpg"></p><p>我觉得这个小项目挺有意思的，不仅可以记录每天起床的时间，还能体会到自动化程序在我们日常生活中的应用。 </p><p>在项目作者 @yihong0618 老师的指导下，我也顺利了弄出了相同的程序，从此就可以记录我这只懒猪🐷的起床时间啦：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/26/16405106317511.jpg"></p><p>原作者 @yihong 0618 项目地址：<br><em><a href="https://github.com/yihong0618/2021/blob/main/get_up.py">https://github.com/yihong0618/2021/blob/main/get_up.py</a></em>      </p><p>我的起床时间项目地址：<br><em><a href="https://github.com/phh95/get_up">https://github.com/phh95/get_up</a></em>   </p><p>下面是实现自动记录起床时间的过程：  </p><h2 id="创建一个-GitHub-仓库"><a href="#创建一个-GitHub-仓库" class="headerlink" title="创建一个 GitHub 仓库"></a>创建一个 GitHub 仓库</h2><p>在 GitHub 上创建一个仓库，名字可以随意取，这里我将仓库取名为 get_up。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/26/16405112684921.jpg"></p><h2 id="复制代码"><a href="#复制代码" class="headerlink" title="复制代码"></a>复制代码</h2><p>从我的 get_up 仓库中复制 3 个文件，分别是：   </p><ul><li>.github/workflows 路径下的 <code>get_up.yml</code> 文件</li><li><code>get_up.py</code> 文件</li><li><code>requirements.txt</code> 文件    </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/26/16405113468011.jpg"></p><h2 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a>修改代码</h2><p>打开复制的 <code>get_up.py</code> 文件，定位到第 11 行代码，你可以修改中间的「懒猪🐷起床啦，赶紧去跑步，上班不迟到。」，这里的语句，决定了最终在 issue 中生成的内容，你可以将它改为你喜欢的内容。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/26/16405116523398.jpg"></p><p>定位到第 50 行代码，如果你每天起床的时间早于 6 点，那就需要将 6 更改为更小的数字，例如 4 或 5，这样程序才会正常运行。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/26/16405118489432.jpg"></p><h2 id="创建-issue"><a href="#创建-issue" class="headerlink" title="创建 issue"></a>创建 issue</h2><p>点击切换到 issues 选项卡，接着点击页面右侧的绿色按钮 <strong>New issue</strong>，创建一个 issue。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/26/16405115411040.jpg"></p><p>创建 issue 时，需要填入 issue 标题和内容，填入的内容可参考下图👇：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/26/16405120509132.jpg"></p><h2 id="获取-Token"><a href="#获取-Token" class="headerlink" title="获取 Token"></a>获取 Token</h2><p>首先打开网页 <code>https://github.com/settings/tokens</code>，点击右上角的 Generate new token，生成一个新的 Token。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/26/16327915810978.jpg"></p><p>生成 Token 时，有两个注意点，将 Token 的<strong>有效期 Expiration</strong> 设置为 <strong>No expiration</strong>(长期有效)，<strong>勾选下面的所有复选框</strong>，将所有权限都打开。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/26/16405123026874.jpg"></p><p>生成的 Token，是一长串英文和数字混合的字符串，点击右侧的复制按钮，复制到剪贴板。  </p><p><strong>注意：这个 Token 后面还要用到，最好将 Token 保存到本地的 txt 或 word 文件中。</strong>  </p><p>打开仓库的 Settings 页面，左侧切换到 Secrets 选项卡，点击右上角的 <strong>New repository secret</strong>。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/26/16405124726993.jpg"></p><p>在打开的页面中，Name 输入 <strong>G_T</strong>，Value 粘贴刚复制到剪贴板的 Token。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/26/16405125338000.jpg"></p><h2 id="获取-GitHub-Actions-ID"><a href="#获取-GitHub-Actions-ID" class="headerlink" title="获取 GitHub Actions ID"></a>获取 GitHub Actions ID</h2><p>打开电脑的<strong>终端</strong>（Windows 系统上叫做<strong>cmd</strong> 或者 <strong>Powershell</strong>），在终端中粘贴下方的语句。   </p><p><code>curl https://api.github.com/repos/替换成你的GitHubId/这里替换成GitHub仓库名称/actions/workflows -H &quot;Authorization: token 这里的中文替换成GitHub仓库的Token&quot;</code></p><p>粘贴之前，这个语句有 3 处需要替换：  </p><ul><li>你的 GitHub ID</li><li>你的 GitHub 仓库名称  </li><li>你在前面操作中获得的 Token   </li></ul><p>粘贴修改好的语句，按下 Enter 键，下方会返回 ID，这个 ID 可以复制到本地的 txt 或者 word 中，等下会用到。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/26/16405151424900.jpg"></p><h2 id="在手机上添加快捷指令"><a href="#在手机上添加快捷指令" class="headerlink" title="在手机上添加快捷指令"></a>在手机上添加快捷指令</h2><p>前面说到，让程序自动运行的触发条件是，关闭手机闹钟。  </p><p>因此，我们还需要在手机上进行配置，如果你的手机是 iPhone，可以使用快捷指令 App，如果是安卓手机，可以使用 tasker。</p><p>关于 tasker 的配置，可以参考下面的文章：</p><p><a href="https://chenzaichun.github.io/post/2021-09-21-github-action-trigger-by-curl-tasker/">https://chenzaichun.github.io/post/2021-09-21-github-action-trigger-by-curl-tasker/</a>    </p><p>下面介绍 iPhone 上快捷指令 App 的配置： </p><p>扫描下方的二维码，将快捷指令添加到 App 中。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/26/qrcodea--a1-1.jpg" alt="QRcode_A — a1 -1-"></p><p>除了扫描二维码，还可以将下面的链接复制到 Safari 浏览器打开。   </p><p>二维码 ➡️ 链接：<a href="https://www.icloud.com/shortcuts/703420fd5f2247a089a849f7849282c5">https://www.icloud.com/shortcuts/703420fd5f2247a089a849f7849282c5</a>  </p><p>添加快捷指令「早起时间 分享版」后，点击快捷指令右上角的三个小点点，进入快捷指令的配置页面。  </p><p>我们需要配置 4 个值： </p><ul><li>GitHub_Name：填入你的 GitHub ID </li><li>Rep_Name：填入你创建的仓库名  </li><li>GitHub_Token：填入前面获取的 Token</li><li>Action_ID：填入前面从终端获得的 ID    </li></ul><p>配置好 4 个参数后，回到「所有快捷指令」的页面，点击快捷指令「早起时间 分享版」，程序就会自动运行。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/26/imga97db46ccffe1.jpeg" alt="IMG_A97DB46CCFFE-1"></p><p>稍等一小会，回到 GitHub 仓库的 issue 选项卡，在评论区就能见到程序运行后的结果。   </p><p>如果想让快捷指令在每次关闭闹钟后自动运行，可以切换到快捷指令的「<strong>自动化</strong>」页面，研究刚添加的快捷指令，在自动化里面创建一个同样的命令。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/26/img4ae19a6d29391.jpeg" alt="IMG_4AE19A6D2939-1"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>快捷指令</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iPad 上非常棒的 6 个应用</title>
    <link href="/2021/12/17/2021-12-17-ipadapps/"/>
    <url>/2021/12/17/2021-12-17-ipadapps/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>文/彭宏豪，本文首发于我的公众号「<a href="https://mp.weixin.qq.com/s/Qu3biF_wRllV0kb8llv-dA">效率工具指南</a>」      </p><p>Hello 各位晚上好。   </p><p>前几天在知乎上看到一个问题，「你认为最棒的前十位 iPad 应用是哪些」？</p><p>稍微想了下，自己在 iPad 上用过的软件也不多，从中选出 6 个，与各位分享。   </p><p>如果还有其他好用的 App，欢迎在留言区告诉我。     </p><h2 id="Procreate"><a href="#Procreate" class="headerlink" title="Procreate"></a>Procreate</h2><p>Procreate，一个非常值得购买的绘画软件。 </p><p>我不会画画，虽然之前用前同事的 Apple ID 账号免费下载了这个软件，但一直没打开过，因此无法分享相关的用法，只能单纯推荐。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/17/16392972050414.jpg"></p><p>软件目前更新到 5.2 版本，增加了一个硬核的功能——支持导入 3D 模型，且可以在 Procreate 给 3D 模型绘图，为模型制作材质/贴图。  </p><p>有玩 3D 的朋友，可以试着把 3D 软件与 Procreate 联动起来。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/17/16394033006725.jpg"></p><h2 id="微软数学"><a href="#微软数学" class="headerlink" title="微软数学"></a>微软数学</h2><p>不像 iPhone，iPad 上没有内置计算器。  </p><p>为了解决这个问题，可以在 iPad 上安装微软推出的 App——微软数学。  </p><p>这款 App 有 3 种模式：<strong>扫描、手写</strong>和<strong>键盘</strong>，键盘就是常见的计算器，输入数字，自动得出结果。   </p><p>我觉得其中的手写最好玩了，在下方的区域手写想要计算的算式，经过软件识别，就可以得到相应的结果。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/17/img0667.JPEG" alt="IMG_0667"></p><h2 id="Picsew"><a href="#Picsew" class="headerlink" title="Picsew"></a>Picsew</h2><p>这是一个多功能的图片处理 App，可用来：  </p><ul><li>图片拼接，例如将多张图片拼接为一张长图，弥补苹果设备无法长截图的不足     </li><li>图片标注，给图片添加文字或马赛克等   </li><li>给图片添加样机，例如给一张普通的截图加上一个 iPad 的外壳，显得更高级，效果如上一张图所示   </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/17/img0668.PNG" alt="IMG_0668"></p><h2 id="ImgPlay"><a href="#ImgPlay" class="headerlink" title="ImgPlay"></a>ImgPlay</h2><p>这是一个制作 Gif 动图的 App，之前写 iPad 相关的文章时，有时会用它来制作 Gif。   </p><p>处理流程也很简单：先用 iPad 自带的录屏录制视频，再将视频导入 ImgPlay，去除无用的片段，就可以导出啦。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/17/img0669.JPEG" alt="IMG_0669"></p><p>值得一提的是，ImgPlay 不仅支持导入视频，还支持导入静态图片、实况照片，导入后支持导出为 Gif 格式。   </p><h2 id="Documents"><a href="#Documents" class="headerlink" title="Documents"></a>Documents</h2><p>这是一个文件管理 App，可以像 iPad 自带的「文件」App 那样，查看 iPad 中存储的文件，这个是它的基本操作。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/17/img674.JPEG" alt="IMG_674"></p><p>重点介绍这个 App 两个好用的功能：  </p><p>一个是<strong>本地视频倍速播放</strong>，最高支持 2 倍速，这解决了 iPad 相册不支持视频倍速播放的问题。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/17/img673.JPEG" alt="IMG_673"></p><p>另一个是<strong>文件传输</strong>，可以很方便地在 Windows 电脑与 iPad 之间传输大文件。  </p><p>传输之前，先确保电脑与 iPad 处在同个局域网下，接着在电脑访问网站 docstransfer.com ，输入 App 生成的连接码，就可以开始传输文件啦。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/17/img0672.JPEG" alt="IMG_0672"></p><h2 id="Goodnotes"><a href="#Goodnotes" class="headerlink" title="Goodnotes"></a>Goodnotes</h2><p>最后，再放一个许多买 iPad 都会用的一类应用——笔记应用，尤其是带有手写功能的笔记应用。  </p><p>这类应用的选择也很多，比如非常知名的 <strong>Goodnotes</strong> 和 <strong>Notability</strong>，也有一些免费的应用，这里就不展开了。  </p><p>之前在一篇文章里写过，感兴趣的戳下方的链接：   </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649882277&idx=1&sn=fc34d4956d5dec0df38b8f10e1be2df3&chksm=83abfa88b4dc739e9e6e4960c0c77c6909cad1e80a58b6906c0d3222502e561661bbdec3fb13&token=1693022434&lang=zh_CN#rd">用iPad做笔记，这8款免费软件其实也挺香的。</a>        </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">             </p>]]></content>
    
    
    
    <tags>
      
      <tag>App</tag>
      
      <tag>iPad</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用苹果电脑，有时也是找罪受。</title>
    <link href="/2021/12/13/2021-12-13-mac/"/>
    <url>/2021/12/13/2021-12-13-mac/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>文/彭宏豪，本文首发于我的公众号「<a href="https://mp.weixin.qq.com/s/_q6n1vL3ta8IXS0duABsOw">效率工具指南</a>」     </p><p>Hello 各位好。   </p><p>今天这篇文章，想来唱一下反调，讲讲使用苹果电脑 💻 一些不方便的地方。  </p><h2 id="PPT-中矢量文件无法取消组合"><a href="#PPT-中矢量文件无法取消组合" class="headerlink" title="PPT 中矢量文件无法取消组合"></a>PPT 中矢量文件无法取消组合</h2><p>有些我们会往 PPT 中插入公司或品牌的 logo，但同样是 logo，有些人的 logo 就高清无码，有些人的面目模糊、惨不忍睹。   </p><p>这两者的差别，很可能就是，一个用的是矢量格式的 logo 文件，一个用的是普通的 jpg/png 位图文件。</p><p>矢量格式的优点在于，可以无限放大倍数，不会模糊失真。  </p><p><img src="media/16394047144419/16394055312059.jpg"></p><p>你可以从 iconfont 下载 svg 格式的矢量文件，在较新版本的 Office 中，svg 文件可以直接插入 PPT 中，而不需要借助矢量软件 Adobe illustrator。  </p><p><img src="media/16394047144419/16394059628897.jpg"></p><p>导入 svg 之后，如果你对矢量文件的配色不满意、或是想删除多余的元素，在 Windows 系统的 PPT，可以通过右键菜单的「组合 &gt;&gt; 取消组合」，将文件拆分，单独调整每个元素。   </p><p>但很遗憾，这一步在 Mac 上无法做到，如下图所示，「取消组合」的按钮是灰色的，处于不可用的状态。    </p><p><img src="media/16394047144419/16394061290352.jpg"></p><p>对于这个问题，目前我找到了一种比较简单的方法——在 Mac 上安装多一个类似于 Office 的软件，例如下面要介绍的 <strong>OpenOffice</strong>。 </p><p>OpenOffice，是一个开源免费的办公软件，支持 Windows、macOS 和 Linux 系统。     </p><p><img src="media/16394047144419/16394063642513.jpg"></p><p>OpenOffice 下载地址：<br><em><a href="https://sourceforge.net/projects/openofficeorg.mirror/">https://sourceforge.net/projects/openofficeorg.mirror/</a></em>     </p><p>OpenOffice 的界面如下图，开源软件最大的好处在于免费，但可能也是因为没有商业化，导致软件看起来有点复古，或者说是简陋。   </p><p><img src="media/16394047144419/16394065529116.jpg"></p><p>说回正题，将 svg 文件直接拖拽到 OpenOffice 中，右击选择「中断」。   </p><p>这里的中断，等同于 Windows 系统 PPT 取消组合的操作。   </p><p><img src="media/16394047144419/16394066740379.jpg"></p><p>接着点击左上角的保存按钮，将文件保存为 ppt 文件。   </p><p>在 Mac Office 上打开从 OpenOffice 导出的 ppt 文件，用鼠标框选图标，就可以看到图标拆分的所有元素了。     </p><p><img src="media/16394047144419/16394079872452.jpg"></p><p>虽然解决方法的路径有点曲折，但庆幸还是解决了。。。   </p><h2 id="一个能打的-Gif-录制软件都没有"><a href="#一个能打的-Gif-录制软件都没有" class="headerlink" title="一个能打的 Gif 录制软件都没有"></a>一个能打的 Gif 录制软件都没有</h2><p>在 Windows 系统，录制 Gif 有比较多的选择：   </p><ul><li>开源免费的 ScreentoGif</li><li>GifCam   </li><li>Honeycam：收费的 Gif 录制软件，超好用，很值得入手。<strong>遗憾的是，它没有 Mac 版本</strong>。       </li></ul><p>但在 Mac 上，试过几款 Gif 录制软件：</p><ul><li>GIF Brewery</li><li>Gifox</li><li>GIPHY CAPTURE</li></ul><p>对比在 Windows 上用的 Honeycam，Mac 上的这几款真的是小弟弟，没有一款可以打的。   </p><p>以 GIF Brewery 为例，录制之前，需要事先调整好 GIF Brewery 和下方要录制的内容的位置。  </p><p>但这里有个智障设计，如果临时要调整下方录制内容的位置或大小，即便 GIF Brewery 中间的窗口看起来是镂空的，你也无法直接越过镂空的区域，去拖拽或改变下方的内容，操作起来很不方便。     </p><p>（这里用文字描述起来有点难理解，只有对比过这两款软件，才会知道 Honeycam 有多好用） </p><p><img src="media/16394047144419/16394087620347.jpg"></p><h2 id="软件快捷键，对不上号"><a href="#软件快捷键，对不上号" class="headerlink" title="软件快捷键，对不上号"></a>软件快捷键，对不上号</h2><p>软件快捷键，只想说说 PPT 和 PS 这两款软件。   </p><p>PPT 中的「组合」操作，在两个系统的对比：   </p><ul><li>Windows：Ctrl + G</li><li>macOS：Option + Command + G  </li></ul><p>PS 中的「等比缩放」操作：   </p><ul><li>Windows：Alt + Shift  </li><li>macOS：Command + T，接着直接拖动控件，就是等比缩放    </li></ul><p><img src="media/16394047144419/16394095863268.jpg"></p><p>因为这些，如果从使用了多年的 Windows 换到 Mac 上，我觉得刚开始的作图效率，真的是大大下降。。。原先用熟产生的「肌肉记忆」，在 Mac 面前彻底无效。    </p><p>所以哇，买 Mac 之前，最好还是先三思一下吧。     </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">          </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>你可以用 RSS 订阅 GitHub 博客了</title>
    <link href="/2021/12/06/2021-12-6-gitblog/"/>
    <url>/2021/12/06/2021-12-6-gitblog/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 各位晚上好。   </p><p>之前写过一篇<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649917076&idx=1&sn=d20090e8fc66cd31cd93e0b978d071a6&chksm=83a882b9b4df0bafae78793b2e0b541e6fb4c5c122d8f0b315c8a24e06ad18c6ea755bf96139&token=730756799&lang=zh_CN#rd">用 GitHub Issues 来写博客</a>的文章，后来看到有一位名为 @航大 的网友，跟着我写的文章，也在 GitHub 弄了一个同样的博客。   </p><p>看到自己写的文章能影响到他人，这对我来说是一种非常大的激励。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/06/16387948080498.jpg"></p><p>不过有点遗憾的是，这位网友后来停止更新了，最新的一篇文章停在了 9 月 17 日，不知道是他比较忙、没时间写东西，抑或是忘了博客这件事。    </p><p>对比公众号，GitHub 博客没法知道阅读文章的人、阅读数，缺少反馈。   </p><p>还有更致命的一点，GitHub 博客没有很好的 Push 机制，不能很好地把新文章推送给读者。  </p><p>世界上最远的距离，莫过于，作者辛勤更新博客，读者却没有收到更新通知，以至于完全忘了这个博客。    </p><p>但是，幸好我们还有 RSS。    </p><p>上周看到一位网友 @frostming 给 gitblog 项目提交了一个<strong>增加 RSS 订阅</strong>的请求，项目作者 @yihong0618 将请求合并到项目中，实现了<strong>用 RSS 订阅 GitHub 博客</strong>的目的。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/06/16387959181623.jpg"></p><p>以我在 GitHub 创建的博客 gitblog 为例，RSS 订阅链接 🔗：   </p><p><a href="https://raw.githubusercontent.com/phh95/gitblog/master/feed.xml">https://raw.githubusercontent.com/phh95/gitblog/master/feed.xml</a>       </p><p>将 RSS 链接添加到 RSS 阅读器中，就可以看到发布在 GitHub 的博客了。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/06/16387963248007.jpg"></p><p>相比最初只能在 GitHub 上阅读博客，增加 RSS 订阅链接后，获取博客更新又多了一个渠道。   </p><p>整个流程下来，感觉：没有 RSS 订阅链接的博客，真的没有灵魂啊。     </p><p>本来现在就没多少人喜欢阅读文章，没了 RSS，岂不是更惨。     </p><p>最后，简单写一下，给 GitHub Issues 博客增加 RSS 订阅链接的方法—— </p><p>修改项目中的 4 个文件：   </p><ul><li>generate_readme.yml   </li><li>.gitignore</li><li>main.py   </li><li>requirements.txt     </li></ul><p>具体修改了哪些地方？可以参考下图及对应的链接：<br><em><a href="https://github.com/yihong0618/gitblog/commit/c8eb186406acff31a1353590770bd130ffa47359">https://github.com/yihong0618/gitblog/commit/c8eb186406acff31a1353590770bd130ffa47359</a></em>    </p><p>下图红色背景的代码行，代表修改前；绿色背景的代码行，代表修改后，上下两行对比着修改自己的文件，耐心一点就可以了。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/06/16387966420177.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">          </p>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>GitHub</tag>
      
      <tag>RSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将网页内容保存到 Notion 的两个浏览器插件</title>
    <link href="/2021/12/04/2021-12-4-notion/"/>
    <url>/2021/12/04/2021-12-4-notion/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>文/彭宏豪，本文首发于我的公众号「<a href="https://mp.weixin.qq.com/s/bdtVoL6dh4Vtru4eE1Tfxg">效率工具指南</a>」      </p><p>Hello 各位好。   </p><p>之前一篇文章介绍过一款<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649918192&idx=1&sn=d2e4083599d625b419abf62e97af9dee&chksm=83a88eddb4df07cb914cd71bad11816bb2fe02b393e7e01dbc0a93d32bd823e0691613a84e1a&token=2008602560&lang=zh_CN#rd">剪藏工具 Cubox</a>，可以很方便地保存公众号文章或网页内容，但这款工具有个不足的地方：收藏超过 200 篇内容，就需要开通会员。   </p><p>除了充钱，Cubox 还有一个不太令我满意的地方，它与我正在使用的 Notion 是两个独立的软件，收藏与记录的东西不能放在同个软件，搜索东西比较麻烦。   </p><p>基于此，我找到了 2 个可以将网页内容保存到 Notion 的工具，让收藏的内容也能汇总到 Notion，方便后续的检索。   </p><h2 id="Notion-Pro-Clipper"><a href="#Notion-Pro-Clipper" class="headerlink" title="Notion Pro Clipper"></a>Notion Pro Clipper</h2><p>Notion Pro Clipper，是一个第三方的 Notion 剪藏插件，比 Notion 官方的剪藏插件好用太多。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/04/16386117880556.jpg"></p><p>插件支持 Chrome 和火狐浏览器，安装插件并授权账号后，点击右上角的插件按钮，弹出的面板如下。</p><p>它支持 4 种剪藏方式：网页链接、整个页面、选中的区域以及截图，其中截图还细分为 3 种——区域截图、可视区域和整个页面。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/04/16386188357978.jpg"></p><p>将内容保存到 Notion 后，最好在 Notion 中预览一下剪藏后的内容，因为可能会出现部分图片丢失的情况。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/04/16386200557700.jpg"></p><p>这里着重说一下，使用插件保存公众号文章，如果想将原文保存到 Notion，需要选择 <strong>Section</strong>。</p><p>如果你选 Full page，它还是会和 Notion 官方的剪藏插件一样，把文章链接而非原文保存到 Notion，后续公众号原文被删除，即便保存了链接也是徒劳。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/04/16386195621906.jpg"></p><p>Notion Pro Clipper 官网：<br><em><a href="https://notionproclipper.com/">https://notionproclipper.com/</a></em></p><h2 id="简悦"><a href="#简悦" class="headerlink" title="简悦"></a>简悦</h2><p>除了前面的插件，这里还有另外一个可供选择的插件——<strong>简悦</strong>。  </p><p>安装插件后，回到想剪藏到 Notion 的页面，右击鼠标，选择「简悦 &gt;&gt; 阅读模式」。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/04/16386203296574.jpg"></p><p>进入阅读模式后，点击右下方的「…」按钮，切换到「动作」面板，往下滑动面板，可以看到：</p><p>简悦支持将网页内容保存到多个平台或软件，这里我们选择「保存到 Notion」即可。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/04/16386204414841.jpg"></p><p>不更改简悦默认设置的情况下，它会将网页内容保存到 Notion 左侧栏最上方的页面。   </p><p>如果你想更改保存的位置，可以打开简悦的设置页面，切换到「服务」选项卡，找到刚刚授权的 Notion，将默认页面更改为其他 Notion 页面。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/12/04/16386208499081.jpg"></p><p>简悦官网：<br><em><a href="http://ksria.com/simpread/">http://ksria.com/simpread/</a></em>   </p><p>相比前面介绍的 Notion Pro Clipper，简悦插件的功能更为强大。 </p><p>简悦插件还支持将 Notion 中存放的内容导出为 Markdown 文件，解决 Notion 自带导出功能图片丢失的问题，详细操作可参考之前发布的一篇文章：   </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649912854&idx=1&sn=79f16a62d1543a9739b61b92e34effc1&chksm=83a8723bb4dffb2d221e856614b778b102e354c6ca0aa24d691656703ef52f89442ab357517a&token=2008602560&lang=zh_CN#rd">Notion客户端不好看？手把手教你把它变好看。</a>    </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">       </p>]]></content>
    
    
    
    <tags>
      
      <tag>Notion</tag>
      
      <tag>笔记软件</tag>
      
      <tag>插件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>入职新公司 1 个月感悟</title>
    <link href="/2021/11/30/2021-11-30-office/"/>
    <url>/2021/11/30/2021-11-30-office/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>文/彭宏豪，本文首发于我的公众号「<a href="https://mp.weixin.qq.com/s/26zULZQ__6cOjSFUKGO-2Q">效率工具指南</a>」      </p><p>从上次写那篇离开广州的文章《<a href="https://mp.weixin.qq.com/s/pxSLC58oz6sRxw3_jmDUZw">离开待了 7 年的广州，百感交集</a>》，到今天入职新公司有一个月多 3 天了，这个时间包含了周末，真正上班的时间只有 25 天。   </p><p>对比之前的工作，说几个体会：      </p><ul><li><p>真·弹性上下班，早打开早下班，不像网上的「面试黑话」说的——弹性打卡，其实是无限加班的代名词     </p></li><li><p>周末终于迎来了久违的双休        </p></li><li><p>每天下午 4 点到 4 点半，有半个小时的休息时间，这段休息时间，在公司有个另外的名字——<strong>放风</strong>，可以用来吃零食（零食是公司提供的，而不是用惩罚同事上班迟到扣的钱买的）、站起来放松一下或者出去楼下走走      </p></li><li><p>公司虽然是互联网公司，但节奏还不算特别快     </p></li><li><p>会议上会听到一些刚开始听不懂的词汇，称作公司内部的「黑话」也合适，如体外收费、禁精华、黑标签         </p></li><li><p>老板很平和（不确定用这个词准不准确），很接地气，会带饭到公司，会在中午饭点和同事一起吃饭，边吃饭边聊天    </p></li><li><p>对老板的唯一反差是，他在网络上用语音回复别人的问题时，语速比较慢，但第一次开会听他说话的时候，又觉得他说话很快           </p></li></ul><p>25 天下来，推进的工作比较少，有点惭愧，这几天早上的站会有点发愁，同事或者老板每天都听到我汇报一样的事情——修改 XXX 文章，会不会觉得我在摸鱼了？    </p><p>现在的工作是负责一个项目，和之前每天按部就班写文章的模式不太一样：    </p><ul><li><p>完成一篇文章的时间比较短，1-3 天的工期，且文章之间基本独立，不会相互影响   </p></li><li><p>不考虑每周一的选题会，和同事讨论选题的事情，多数文章可以一个人自己完成         </p></li><li><p>项目是一个具有延续性、需要不断推进的工作，做之前可能需要先拟定框架或列好时间轴，确定项目在关键节点的进度   </p></li><li><p>项目的推进，需要多位同事协作，包含直属领导、同部门同事、跨部门同事（如设计师）、支持部门同事（征求其他部门同事对文章的建议或看法）      </p></li></ul><p>还有一个体会是，如果对接下来要做的事情不是很清晰，可以用一个文档或者表格把它们写下来，而不是心里总惦记着这件事。     </p><p>记忆不太靠谱，不写下来，容易丢三落四、考虑不周。    </p><p>下图是同事建议我写的项目进度表，比较简陋，把要做和可能会做的事情写下来，对照着表格，更新事项进度，补充相关的文档链接。    </p><p>项目相关的文档多了之后，放在一张表格里，找起来也比较方便。                </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/30/16382809561384.jpg"></p><p>以上，就是本次想和你分享的内容。               </p>]]></content>
    
    
    
    <tags>
      
      <tag>职场</tag>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>笔记软件 Notion 最近又增加了什么新功能？</title>
    <link href="/2021/11/27/2021-11-27-notionupdate/"/>
    <url>/2021/11/27/2021-11-27-notionupdate/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>文/彭宏豪，本文首发于我的公众号「<a href="https://mp.weixin.qq.com/s/jlbZG8EQuQqxQUjoFw3jfw">效率工具指南</a>」     </p><p>Hello 各位晚上好。  </p><p>很久没写笔记软件 Notion 相关的内容了，这次的这篇文章，简单介绍一下 Notion 最近更新的两个功能。   </p><h2 id="简单表格"><a href="#简单表格" class="headerlink" title="简单表格"></a>简单表格</h2><p>Notion 之前最具特色的一个功能为 database，翻译为「数据库」，这个功能是 Notion 的一大亮点，但对于第一次接触的人来说，还是有点学习成本的。   </p><p>不太了解 database 的设计理念，用起来也会觉得云里雾里，外表看上去像 Excel 的表格，但使用起来又不完全是。  </p><p>如果让我向别人清晰地解释 database 的概念，我也无法做到。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/27/16380176144008.jpg"></p><p>可能是考虑到有些人不需要用到看起来比较复杂的 database，Notion 最近增加了一个更接近于 Excel 表格的功能——<strong>简单表格</strong>。  </p><p>输入 /table 就能呼出插入简单表格的命令，Table 右侧带有一个 NEW 的标识，提示这是 Notion 的新特性。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/27/16380181929904.jpg"></p><p>插入的简单表格默认为 2 行 * 2 列，将鼠标移动到表格的右侧、底部或者是右上角，可以分别添加列、行、同时添加行和列。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/27/16380185352522.jpg"></p><p>如果简单表格不能满足你的需求，还可以通过整个表格的菜单，选择「Turn into database」，将简单表格转换为 database。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/27/16380186768632.jpg"></p><p>同样地，你也可以将之前创建的 database 直接转换为简单表格，两种数据表可以互相转换。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/27/16380188834704.jpg"></p><h2 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h2><p>除了简单表格，最近在使用 database 的过程中，还发现 database 增加了一个新功能——<strong>分组</strong>。   </p><p>点击 Group，下面会弹出一个设置分组标准(Group by)的面板，可选择的分组标准，其实就是 database 中的属性(property)，例如下面从 flomo 创建的 database，可以使用<strong>创建时间、链接、名称/内容、标签</strong>来进行分组。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/27/16380189954479.jpg"></p><p>我使用其中的<strong>标签</strong>进行分组，它就会<strong>通过标签聚合展示相关的内容</strong>，效果如下图所示。</p><p>点击标签左侧的 ▼ 按钮，可以折叠暂时不需要查看的内容，为屏幕内其他内容腾出空间。    </p><p>使用分组功能切换到不同的视图模式，操作起来非常方便，这也是 database 有别于 Excel 的地方——达到同样的效果，Excel 可能还要用到数据透视表呢。。。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/27/16380171825400.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">               </p>]]></content>
    
    
    
    <tags>
      
      <tag>Notion</tag>
      
      <tag>笔记软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>这款免费好用的录屏软件「芦笋」，第一次用就爱上了。</title>
    <link href="/2021/11/19/2021-11-19-lusun/"/>
    <url>/2021/11/19/2021-11-19-lusun/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 各位好。</p><p>之前推荐过不少工具，其中有一个经常被问到的问题，「电脑上有什么好用的录屏软件」。  </p><p>换做是以前，我都会推荐 OBS，因为它真的非常强大，既可以录屏，也可以直播，还能给录制的视频添加各种特效，但唯一的缺点是，使用起来有点麻烦，刚开始可能需要跟着图文或视频学习操作，不太适合不喜欢折腾软件的朋友。 </p><p>而且，如果我们想把录制的视频文件分享给朋友，要么是上传到视频网站，要么是上传到网盘，操作起来都不是非常方便。</p><p>如果你对录屏、以及后续的录屏文件分享存在着需求，那么可以试试我最近刚发现的一款软件——<strong>芦笋</strong>。   </p><p>下图是芦笋的首页，它有 3 种录制模式：</p><ul><li>人像+屏幕   </li><li>仅人像  </li><li>仅屏幕    </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/19/16373318932087.jpg"></p><p>打开软件，默认使用的是「人像+屏幕」的录制模式，桌面左下角会有一个如下图的圆形人像窗口，显示电脑摄像头捕获的人脸。  </p><p>圆形窗口下方有两个小圆点和一个放大的按钮，分别可以调整圆形窗口的大小和形状。点击放大按钮，圆形窗口会变成矩形。</p><p>此外，在录屏的过程中，可以随意拖拽改变圆形窗口的位置，非常灵活，避免圆形窗口遮挡到你想点击的区域。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/19/16373321838308.jpg"></p><p>在开始录制之前，点击下方的「录制设置」，可以设置捕获人像和录制音频的设备。  </p><p>需要注意的是，如果你想同时录制电脑发出的声音和周围的环境音，在 Mac 电脑上需要选择「聚集设备」。     </p><p>如果你的 Mac 电脑没有聚集设备这一选项，可以参考我之前写过的一篇文章，在电脑上安装 Soundflower：《<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649902497&idx=1&sn=27540fffc649aaac6e3a216d600931be&chksm=83a8498cb4dfc09a3dc8bcb40bd0a2c3ed5e1a92a00944f472dc9090f092d741c07853711bfe&token=1263943466&lang=zh_CN&scene=21#wechat_redirect">iPhone 投屏录制无声音？这个免费工具来帮你｜Mac 使用指南</a>》          </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/19/16373329251824.jpg"></p><p>结束录制时，它会在浏览器中打开一个网页，显示我们刚录制的视频内容，即录制的视频文件不会存放在电脑本地，而是会存放在云端的账户中。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/19/16373335357405.jpg"></p><p>如果你想下载录制的视频，那也没有问题，点击右上角的「更多」，选择「下载」，就可以将视频文件下载到本地。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/19/16373336642686.jpg"></p><p>芦笋录制的文件，之所以会放到云端，可能还是考虑到我们后续会<strong>分享视频文件</strong>的需求。</p><p>点击右上角绿色的「分享」按钮，在弹出的菜单中，可以看到快捷分享视频的选项。</p><p>我们可以使用链接或二维码的方式，将录制的文件分享给别人，而且支持他人对视频进行评论。这个设计，有点像是这些年非常流行的各类「在线文档」产品，区别在于这里的文档被替换成了我们录制的视频内容，多人可以就一个视频内容进行讨论或点评。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/19/16373338796140.jpg"></p><p>将视频链接分享给他人时，他人可以在观看的同时进行评论，评论时会附带视频的<strong>时间戳</strong>，方便观看评论的人快速定位到视频对应的画面，这有点像是我们已经非常熟悉的「弹幕」，而且还支持在评论的下方进行回复，就某个点或者话题作进一步的讨论。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/19/16373346166656.jpg"></p><p>体验下来，个人觉得芦苇还是<strong>少了一些基础的「视频编辑」能力</strong>，例如可以让用户对录制得到的视频进行裁剪，去除不必要的片段；或是可以对视频添加贴图或是马赛克，去除一些比较敏感的个人信息，可能会更好，期待这款产品后续能带来更多有意思的特性。</p><p>芦笋目前支持 Windows 和 macOS 系统，从官网看到移动端的产品正在开发中，有录屏和文件分享需求的朋友，可以前去官网下载体验。    </p><p>芦笋下载地址：<br><em><a href="https://lusun.com/download?utm_source=preview">https://lusun.com/download?utm_source=preview</a></em>     </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">               </p>]]></content>
    
    
    
    <tags>
      
      <tag>App</tag>
      
      <tag>录屏软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从一而终，难</title>
    <link href="/2021/11/02/2021-11-2-apps/"/>
    <url>/2021/11/02/2021-11-2-apps/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>这两天和同事沟通，除了工作上的事情，还说到了一些工作中正在使用或曾经用过的工具，例如幕布、石墨文档。    </p><h2 id="幕布"><a href="#幕布" class="headerlink" title="幕布"></a>幕布</h2><p>我跟同事说到，幕布的创始人离开字节去做新的产品了，听说幕布之后会关停。  </p><p>同事感慨到，用得好好的工具，怎么突然间说停就停呢。   </p><p>我：幕布之前不是可以免费薅到很多年的会员吗？    </p><p>同事：也是，但幕布变成今天这样，也是他们团队把好牌给打烂了。我最开始充了幕布会员，但后来看到很多人可以免费薅会员，觉得他们团队采用的这个策略，深深地伤害了我这个付费用户。           </p><h2 id="石墨文档"><a href="#石墨文档" class="headerlink" title="石墨文档"></a>石墨文档</h2><p>我：石墨文档现在分享给他人的文档，需要其中一方开通会员之后，才可以一起协作编辑。     </p><p>同事：石墨文档变成这样了？   </p><p>我：你以前也有用过石墨吧？    </p><p>同事：有用过，我以前很喜欢石墨的，但后来觉得石墨变得很「鸡贼」，右下角会多出一些小广告。   </p><p>我：嗯，我在手机上打开别人分享的石墨链接的时候，也看到了广告。    </p><p>对于石墨文档需要付费后才能参与协作的这个变化，我在社交平台上稍微吐槽了一下，石墨文档的前技术总监 @子骅 看到我的动态后回复说，「主要还是政策方面的原因」，具体是啥原因，我也不清楚。    </p><p>为了能和同事一起编辑同一份石墨文档，我开通了 3 个月的高级会员，总价为 24 元。     </p><h2 id="Notability"><a href="#Notability" class="headerlink" title="Notability"></a>Notability</h2><p>今天 App 届的大新闻，应该当属：笔记应用 Notability 由买断制转向了订阅制。  </p><p>之前 Notability 的价格为 60 元，一次性购买下载之后无需再付费，而新版的 Notability 决定采用现在非常流行的「订阅制」，可免费下载，但需要按年付费。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/02/16358636528959.jpg"></p><p>这个消息一出，相信许多人都会在社交平台上吐槽官方的这种行为，有些人还说，Notability 的这个操作，让自己更加坚定了选择同类应用 GoodNotes 的决心。    </p><h2 id="谜底时钟"><a href="#谜底时钟" class="headerlink" title="谜底时钟"></a>谜底时钟</h2><p>谜底时钟，是我之前推荐过好几次的一款时钟应用，它的出现，让我觉得，好的时钟应用应该就是这个样子的，时钟颜值在线，动画讲究（设备插上电的时候还有小彩蛋），而且不同的时钟还配上了不同的声音。  </p><p>下图是其中的一个「霓虹灯」样式的时钟，在不同的时间段打开这个时钟，它上面的文字和图片也是不同的：         </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/02/img0664.JPEG" alt="IMG_0664"></p><p>原先这款应用也是买断制，我当初买的时候是 18 元，现在的价格是 25 元，接下来会更改为「订阅制 + 买断制」并存的收费机制，但买断制的价格会更高，有需要的朋友，可以前去购买。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/11/02/16358647345674.jpg"></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>列举这些应用的变化，并不是说想控诉什么，也没有要指责谁，只能说无论这些 App 的开发者或团队下一步选择做什么，都是他们的自由。    </p><p>做出某个选择，就意味着选择了某一部分用户，放弃了另外一些对变化感到不满意的用户，选择的同时也是在做取舍。     </p><p>有些人买个大几千的钱，眼都不眨一下的，反而是买个小物件的东西，却很在意价格，说来也奇怪。     </p><p>只能说，从一而终，难。         </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">             </p>]]></content>
    
    
    
    <tags>
      
      <tag>幕布</tag>
      
      <tag>石墨文档</tag>
      
      <tag>订阅制</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>近期值得关注的 App</title>
    <link href="/2021/10/21/2021-10-21-apps/"/>
    <url>/2021/10/21/2021-10-21-apps/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 各位下午好。    </p><p>今天的这篇文章，想和大家分享一些我最近看到的一些新应用、或者好玩的东西，希望能对你有帮助。    </p><h2 id="阿里云盘"><a href="#阿里云盘" class="headerlink" title="阿里云盘"></a>阿里云盘</h2><p>阿里云盘在近期上线了 iPad 版本，在 iOS 移动端的更新说明中，它也提到了「iPad 版上线」，如此一来，阿里云盘可以说是可以在绝大多数设备上运行了。</p><p>根据官网的说法，后续可能还会上线小程序的版本，敬请期待。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/21/16347862403041.jpg"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/21/img0690.JPEG" alt="IMG_0690"></p><h2 id="星空问答"><a href="#星空问答" class="headerlink" title="星空问答"></a>星空问答</h2><p>星空问答，是知识星球 App 推出的一个<strong>问答小程序</strong>，你可免费向他人提出问题，也可以分享自己的「问答主页」，让别人来向你提出问题。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/21/img0691.PNG" alt="IMG_0691"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/21/img0693.PNG" alt="IMG_0693"></p><p>这个问答小程序，让我想起以前朋友圈不少人都在用的一个匿名提问产品 Tape，将你的提问链接发布到朋友圈，别人可以向你匿名提问，回答了之后就会向所有人公开展示，他人可以围观吃瓜。  </p><p>匿名提问的好处在于，一方面可以减轻提问者的压力，另一方面是可以问一些比较私密的问题，比如说你对某个人有意思，但又不知道他有没有对象，这个场景下就很适合用匿名提问。  </p><p>而知识星球推出的星空问答，暂时不支持匿名提问，可能是匿名提问的产品在微信生态下有被下架的风险，而且目前这款产品刚上线不久，满足主要需求即可，不需要弄得太复杂。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/21/img0694.JPEG" alt="IMG_0694"></p><h2 id="微信读书"><a href="#微信读书" class="headerlink" title="微信读书"></a>微信读书</h2><p>微信读书近期上线了一个「勋章体系」，会根据你在 App 内的行为——阅读天数、阅读时长、发布的想法数量、收到的点赞数量、读完的书籍数量，授予相应的虚拟勋章，如下图所示：   </p><p>发现现在挺多产品都会做这种虚拟勋章的功能，比如 QQ、知乎、得到、Keep，还有苹果手表的健身 App。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/21/albumtemp1633999256.PNG" alt="album_temp_1633999256"></p><h2 id="更改外接显示器屏幕亮度"><a href="#更改外接显示器屏幕亮度" class="headerlink" title="更改外接显示器屏幕亮度"></a>更改外接显示器屏幕亮度</h2><p>这里推荐一个 Mac 上用来<strong>更改外接显示器屏幕亮度</strong>的软件——<strong>MonitorControl</strong>，软件支持 M1 和原先 Intel 芯片的 Mac 电脑，因此在使用的时候不用担心兼容性的问题。       </p><p>MonitorControl 下载地址：<br><em><a href="https://github.com/MonitorControl/MonitorControl/releases/tag/v4.0.0-rc1">https://github.com/MonitorControl/MonitorControl/releases/tag/v4.0.0-rc1</a></em>      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/21/16347922773620.jpg"></p><h2 id="实时显示-Twitter-关注增长数据"><a href="#实时显示-Twitter-关注增长数据" class="headerlink" title="实时显示 Twitter 关注增长数据"></a>实时显示 Twitter 关注增长数据</h2><p>这个网站包含了多款与 Twitter 相关的工具，例如在 Twitter 头像显示关注数增长进度、在个人主页顶部的 Banner 图显示最近关注你的人、可视化呈现关注你的人或者你正在关注的人等等。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/21/16347938826165.jpg"></p><p>以第一个工具「在 Twitter 头像显示关注数增长进度」为例，事先设置一个你想达到的关注数目标，通过计算目标与现有关注数量的差异，会在圆形的 Twitter 头像边缘增加一个<strong>环形的进度条</strong>，实时显示现有关注数和目标的百分比。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/21/16347938242649.jpg"></p><p>BlackMagic 官网：<br><em><a href="https://blackmagic.so/">https://blackmagic.so/</a></em>        </p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>除了前面提到的应用，如果你也发现了一些<strong>好玩、有趣</strong>或者<strong>实用</strong>的工具，欢迎在下方的评论区留言，感谢。    </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">             </p>]]></content>
    
    
    
    <tags>
      
      <tag>知识星球</tag>
      
      <tag>微信读书</tag>
      
      <tag>云盘</tag>
      
      <tag>Twitter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>边录屏边看音乐歌词，录屏软件 OBS 的这个用法真的绝了。</title>
    <link href="/2021/10/17/2021-10-17-obs/"/>
    <url>/2021/10/17/2021-10-17-obs/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 各位晚上好，我是安哥。   </p><p>今天来给大家介绍录屏软件 OBS 的一个用法，实现如下图的效果，一边录屏，一边看当前正在播放的音乐《机场雷雨》的歌词。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/17/16344745003758.jpg"></p><p>OBS 是一个开源免费的软件，支持 Windows、macOS 和 Linux 系统的电脑，可从官网下载。</p><p>如果你无法打开 OBS 的官网，也可以点击下方的公众号卡片，在后台回复「<strong>OBS</strong>」，获取我下载好的 Windows 和 macOS 系统的安装包。   </p><p>下面就来说说实现上面那种效果的方法：   </p><p>点击「来源」窗口左下角的加号，添加我们想捕获的窗口或区域，这里选择「<strong>窗口采集</strong>」。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/17/16344748911019.jpg"></p><p>选择窗口采集，它会显示电脑电脑当前运行的所有软件，这里请确保你的电脑运行了任意一个音乐软件，比如我这里用到的「<strong>网易云音乐</strong>」，即窗口采集捕获的是整个音乐软件。   </p><p>接着右击「窗口采集」，选择「<strong>滤镜</strong>」，给我们捕获的音乐窗口添加一些效果。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/17/16344751491162.jpg"></p><p>在滤镜中，我们想要实现两种效果，一个是抠去网易云音乐歌词默认的背景，将其更换我们喜欢的其他颜色；一个是去掉网易云歌词页面左侧旋转的专辑封面等元素，只保留右侧的歌词。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/17/16344753519077.jpg"></p><p>OBS 实现抠图，需要用到内置的「<strong>色值</strong>」滤镜，点击滤镜左下角的加号，选择「色值」。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/17/16344756952568.jpg"></p><p>添加色值滤镜后，右侧面板需要对相关的参数进行调整，首先我们需要选取想抠去的颜色，点击「选择颜色」，在打开的窗口中，选择左下角的「Pick Screen Color」，用拾色器选择网易云歌词背景的颜色。   </p><p>不过需要注意的是，如果你使用的 macOS 版的 OBS，它的拾色器是不支持跨软件拾取颜色的，因此无法直接吸取网易云歌词背景的颜色，此时你可以先用截图软件，例如 Snipaste 或者 iShot 吸取网易云歌词背景的颜色，再将色值粘贴到 OBS 中。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/17/16344761765661.jpg"></p><p>选择要抠去的背景色之后，还需要稍微调整一下下面的参数——<strong>相似度、平滑</strong>和<strong>对比度</strong>，参数的调整没有固定的数值，需要结合实际情况进行调整。</p><p>如下图，调整参数之后，原本的歌词页面视觉发生了变化，最大的变化在于，它<strong>保留了高亮显示的歌词</strong>，而已经播放或者还未播放的歌词，就快看不清了。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/17/16344764723735.jpg"></p><p>经过这番调节之后，暂时关闭滤镜面板，回到 OBS 的录屏窗口，你应该就可以看到一个抠去背景、呈现为<strong>透明背景</strong>的歌词界面。    </p><p>原本的歌词背景是变透明了，但它带来了一个新的问题，白色的歌词与电脑壁纸的对比度不够明显、或是白色歌词与一些软件内部的白色文字重叠在一起，会导致歌词无法看清。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/17/16344767652435.jpg"></p><p>为解决这个问题，我们可以在透明背景的歌词下方<strong>放一个色块</strong>，将色块的颜色设置为高对比、而且是我们喜欢的颜色。   </p><p>再次点击「来源」左下角的加号，选择「<strong>色源</strong>」。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/17/16344771336375.jpg"></p><p>右击色源，选择「属性」，在打开的窗口，点击「<strong>选择颜色</strong>」，从中挑选一个你喜欢的颜色，作为透明歌词的背景色。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/17/16344772311011.jpg"></p><p>这里还需要注意的是，OBS 的「来源」面板中创建的窗口或元素，是存在着<strong>层级关系</strong>的，默认最后创建的「色源」会排在最上层，会挡住我们在最开始创建的「窗口采集」，因此需要调整一下两者的位置，将代表歌词的「窗口采集」拖拽放到作为背景的「色源」上方。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/17/16344773208314.jpg"></p><p>说完了抠去歌词背景的步骤，下面再来说一下，如何裁剪歌词页面不想要的部分。  </p><p>同样右击「窗口采集」，选择「<strong>滤镜</strong>」。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/17/16344751491162.jpg"></p><p>点击左下角的加号，选择「<strong>裁剪/填充</strong>」。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/17/16344777245416.jpg"></p><p>调整裁剪/填充滤镜右侧的四个参数，调整的时候，可以在上方的窗口实现预览到裁剪之后的效果。   </p><p>因为是裁到歌词页面左侧的内容，因此「左」参数的数值需要调得比较大。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/17/16344777837484.jpg"></p><p>值得一提的是，要想在录屏或直播的时候，让捕获的歌词随着音乐的播放<strong>自动滚动</strong>，播放音乐的软件不能最小化到后台运行，而要一直保持在前台运行。          </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">              </p>]]></content>
    
    
    
    <tags>
      
      <tag>直播</tag>
      
      <tag>OBS</tag>
      
      <tag>录屏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>创建知识星球社群 500 天，我有这 3 点心得。</title>
    <link href="/2021/10/16/2021-10-16-zxsq/"/>
    <url>/2021/10/16/2021-10-16-zxsq/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 各位晚上好。      </p><p>去年我写过一篇文章《<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649882126&idx=1&sn=763e1f64a72ad57915e8c532e50126a2&chksm=83abfa23b4dc7335e0be802f04cbce653f6c60dc0fc45b5c778dc89552e652e79c6227c44b32&token=215341684&lang=zh_CN#rd">你的另一个朋友圈「效率工具指北」</a>》，介绍了我创建的一个免费的知识星球「效率工具指北」，现在已更名为与公众号同名的「效率工具指南」。     </p><p>从去年 5 月份创建到今天，这个免费的社群已存在 510 天，在这一年多的时间里，这个星球累计发布了 1233 条动态，大部分动态都是我发布的，少部分是社群内的群友发布的内容，比如他们的运动打卡、对产品的吐槽、或是推荐自己开发的一个产品等等。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/16/16343892328689.jpg"></p><p>加入这个星球的总用户数为 907 人，不过就像公众号一样，过度关注「关注数」这个数据是没有意义的，因为<strong>关注数并不等同于阅读数</strong>，这中间存在着打开率（打开比例）的问题。     </p><p>我统计了一下最近 1 个月所有动态的平均阅读量——133，打开率为 14.7%，我觉得还是能接受的。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/16/16343900248560.jpg"></p><p>除了上面的数据，这里还要夸一下知识星球提供的一个功能「<strong>二维码分析</strong>」，在移动端生成加入知识星球的二维码时，可以为二维码添加「备注」，之后将二维码放到不同的渠道，就可以了解从不同渠道加入的用户数量。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/16/16343906154404.jpg"></p><p>简单说完了数据的问题，接下来我想说一下，运营这个免费星球的一些心得，以及我最近想到的一些东西：   </p><h2 id="运营知识星球的一些心得"><a href="#运营知识星球的一些心得" class="headerlink" title="运营知识星球的一些心得"></a>运营知识星球的一些心得</h2><ul><li>免费的知识星球是廉价的，<strong>人们不会珍惜免费得来的东西</strong>，毕竟有些付费的东西都看不过来了，哪还有时间分配给免费的东西？                   </li><li>如何让星球内的用户活跃起来，有在星球内发布动态的动力，是一个大问题。有些星球使用物质激励的方式，比如现金奖励、星球内流通的虚拟奖励；有些星球采用「知行合一」的方式去影响用户，比如知识星球「辉哥奇谭读者群」的星主 @辉哥 将自己的运动打卡、碎片化想法、每日语音、每周语音发布到星球内，鼓励加入的读者可以采取类似的行为，加入这个星球最大的感受是——这里面不少读者都很活跃，整个星球每日 100+ 动态是家常便饭。     </li><li>知识星球不少用户可能都是这种状态：一开始兴冲冲加入知识星球了，但隔了两三天之后，可能就把加入星球这件事忘光了。原因一方面可能是初次使用知识星球没有下载移动端的 App，不像是放在手机桌面的 App，网页版的产品在大脑中停留的时间太短；另一方面是<strong>没有养成使用知识星球的习惯</strong>，习惯的养成可能涉及多方面的因素：你之前消费的内容形式的偏好（更喜欢看文章，还是更喜欢看视频）、你对自己喜欢的内容创作者发布新内容的期待程度等等。        </li></ul><p>关于使用习惯这一点，有位加入星球的用户是这么看的：  </p><blockquote><p>越难的事越能过滤人。     </p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/16/16343936437865.jpg"></p><p>他说的这个观点，有一点点哲学的意思😂但说实话，多数时候打开知识星球 App 之前，我给打开知识星球这个行为设定的预期是：   </p><blockquote><p>我希望每次打开星球，都能获得一些有价值的东西，而不仅仅是纯粹的图一乐，或者单纯地消磨时间。   </p></blockquote><h2 id="flomo-和知识星球"><a href="#flomo-和知识星球" class="headerlink" title="flomo 和知识星球"></a>flomo 和知识星球</h2><p>之前看到 flomo 的创始人 @少楠 老师说过一句话，没找到原话，大意是：对于许多知识工作者而言，当他们离职的时候，随身带走的东西可能就是他们日积月累下来称之「经验」的东西，这些东西可能是存在于你的脑子，也可能是外化为你的笔记本上的笔记，或者是存放在你 flomo 里面的东西。    </p><p>单纯从<strong>沉淀内容</strong>的用途出发，我觉得 flomo 和知识星球这两款产品有相通之处，唯一的区别在于：   </p><ul><li>flomo 更侧重个人的私密记录      </li><li>知识星球可以是一个人的私密记录（平台存在着内容审核的环节），也可以是一对多的内容分享        </li><li>flomo 支持批量导出内容，知识星球暂不支持批量导出</li></ul><h2 id="社群的一个理想状态"><a href="#社群的一个理想状态" class="headerlink" title="社群的一个理想状态"></a>社群的一个理想状态</h2><p>它能自发运行，不需要社群的管理者刻意引导群内的用户发言，用户会自发、主动地贡献内容。       </p><h2 id="去哪里寻找创作者？"><a href="#去哪里寻找创作者？" class="headerlink" title="去哪里寻找创作者？"></a>去哪里寻找创作者？</h2><p>根据创作者本身的 level 或者说咖位，创作者可以分为：   </p><ul><li>头部创作者</li><li>腰部创作者</li><li>尾部创作者（臀部创作者）   </li></ul><p>还有根据创作的内容，按不同的领域进行细分：   </p><ul><li>健身</li><li>美食  </li><li>科技   </li><li>互联网</li><li>产品</li><li>个人成长   </li><li>读书  </li><li>职场   </li><li>技能学习     </li></ul><p>根据内容的创作形式，将创作者分为：           </p><ul><li>图文内容创作者：知识星球目前大多的创作者应该都属于这一类           </li><li>播客创作者：播客节目「疯投圈」的两位主理人在知识星球上创建了一个买断制的知识星球              </li><li>视频创作者：B 站不少 Up 主都有建立交流群的需求，很多都使用 QQ 群   </li></ul><h2 id="推荐一期播客节目"><a href="#推荐一期播客节目" class="headerlink" title="推荐一期播客节目"></a>推荐一期播客节目</h2><p>最后，给大家推荐一期我刚刚听完的播客节目《<a href="https://www.xiaoyuzhoufm.com/episode/615afe285a518e53b88049ec">寻觅意义：做一些渺小而伟大的事情</a>》，来自前面提到的 flomo 创始人 @少楠 老师最新的一期播客，给你或许有些浮躁的内心降降火：      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/16/16343952861090.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">              </p>]]></content>
    
    
    
    <tags>
      
      <tag>社群</tag>
      
      <tag>知识星球</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>这些App隐藏的小细节，天天在用都不一定知道。</title>
    <link href="/2021/10/09/2021-10-9-appfeatures/"/>
    <url>/2021/10/09/2021-10-9-appfeatures/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 各位晚上好。  </p><p>今天发一点我之前陆陆续续发现或者从别处看来的 App 细节/功能，<strong>发掘 App 中的设计细节，这个过程有点像是在寻宝</strong>，不少时候会让人有意外之喜，这也是我在闲暇时间的一点小癖好，希望下方分享的一些东西，你也会喜欢。   </p><h2 id="滴答清单"><a href="#滴答清单" class="headerlink" title="滴答清单"></a>滴答清单</h2><p>这是我今天看到一个 Telegram 群的消息才知道的功能，得亏我去年一直在安利滴答清单，却一直没有发现这个细节：     </p><p>在添加任务的输入框中，直接粘贴 url 链接、并按下 Enter 键，滴答清单会<strong>解析 url 得到链接的标题</strong>，省去了复制链接之后，可能还要粘贴内容标题的操作。   </p><p>当然，如果你添加的任务中包含了<strong>非 url 链接的文本内容</strong>，那么 url 链接就不会自动解析出标题了。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/09/16337881931614.jpg"></p><h2 id="Day-One"><a href="#Day-One" class="headerlink" title="Day One"></a>Day One</h2><p>Day One，是苹果生态下一款优秀的日记应用，支持 iOS 和 macOS 系统。  </p><p>这款 App 在今年 8 月份的时候，增加了一个和 Notion 非常相似的功能，在空白位置输入<strong>斜杆 /</strong> ，可以<strong>呼出命令列表</strong>。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/09/16337885185371.jpg"></p><p>呼出的命令列表如下，可以快速插入当前的时间、日期、待办事项复选框、分割线、不同字号大小的标题，第一时间看到这个，觉得很 Notion。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/09/16337889365853.jpg"></p><h2 id="智行火车票服务号"><a href="#智行火车票服务号" class="headerlink" title="智行火车票服务号"></a>智行火车票服务号</h2><p>智行火车票，是一个购买高铁票的第三方应用。如果你通过这个 App 买票，并且绑定了微信账号，它会通过服务号向你发送 3 次消息提醒：     </p><ul><li>服务号发车前 2 小时提醒   </li><li>服务号发车前 30 分钟提醒   </li><li>服务号列车即将到站提醒   </li></ul><p>对比官方的 12306，还是得说一句，有些事情啊，民营公司确实做得更好，想得更到位。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/09/img0535-2.JPG" alt="IMG_0535 2"></p><h2 id="Twitter-搜索命令"><a href="#Twitter-搜索命令" class="headerlink" title="Twitter 搜索命令"></a>Twitter 搜索命令</h2><p>微博自带了搜索自己或他人发布过的微博动态的功能，但作为微博祖师爷的 Twitter 却没有这个功能。</p><p>如果我们想在 Twitter 上实现类似微博搜索的效果，需要使用下面的命令：</p><p><strong>关键词(from:推特 ID)</strong></p><p>注意：这里的括号是英文输入法下的括号。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/09/16337895174003.jpg"></p><h2 id="微信读书无限卡帮你省了多少钱"><a href="#微信读书无限卡帮你省了多少钱" class="headerlink" title="微信读书无限卡帮你省了多少钱"></a>微信读书无限卡帮你省了多少钱</h2><p>如果你有用过微信读书或者正在使用微信读书，可能会对它的「无限阅读卡」印象深刻。  </p><p>为了让用户能够对无限卡带来的价值有更直观、具体的感受，无限卡页面给出了累计节省的金额，用一个具体的数字，让虚拟、摸不着的会员服务变得可感知。  </p><p>声明：下面的图片来自网络，不是我自己的截图。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/09/9c8af769f207e26c8786f7e7eeec9ed9.jpeg" alt="9c8af769f207e26c8786f7e7eeec9ed9"></p><p>除了微信读书的无限阅读卡，京东 Plus 会员也有类似的设计：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/09/img0538.jpg" alt="IMG_0538"></p><h2 id="即刻-App-圈子"><a href="#即刻-App-圈子" class="headerlink" title="即刻 App 圈子"></a>即刻 App 圈子</h2><p>除了 Twitter，即刻最近也成了我每天都会刷的一个应用，这里说一个我最近才发现的东西：  </p><p>和豆瓣上的<strong>小组</strong>类似，即刻也划分出了各式各样的<strong>圈子</strong>，譬如下图的「追剧小组」，在追剧小组的顶部，它还列出了与追剧相关的子圈子——美剧、日剧、番剧等，用了即刻挺长时间，头一回在即刻见到这种<strong>圈子套娃</strong>的设计。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/09/img0520.jpg" alt="IMG_0520"></p><p>以上，就是本次想和你分享的内容。   </p><p>如果对你也有帮助的话，别忘了点击下方的<strong>点赞、在看</strong>和<strong>分享</strong>按钮，<strong>你的小小支持，是我持续更新的最大动力</strong>，我们下次再见。         </p>]]></content>
    
    
    
    <tags>
      
      <tag>App</tag>
      
      <tag>产品细节</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>近期值得关注的 App，乔布斯逝世 10 周年</title>
    <link href="/2021/10/05/2021-10-5-apps/"/>
    <url>/2021/10/05/2021-10-5-apps/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 各位假期下午好。<br>最近不知道写点什么，只能再写一篇，我最近收集的一些碎片信息。     </p><h2 id="flomo"><a href="#flomo" class="headerlink" title="flomo"></a>flomo</h2><p>碎片内容记录工具 flomo 最近迎来两个更新，一个是提供「月度记录报告」，它会在 10 月初提供上一个月的记录报告，右上角是一个热力图，显示在 9 月份创建 memo 的具体日期，不过这种把 星期* 放在纵轴的设计，看起来有点别扭。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/05/16334070232919.jpg"></p><p>另外一个更新是，伴随 iOS15 新增的 <strong>Live text</strong> 实况文本识别的特性，flomo 可以<strong>在 App 内调用这个系统级的功能</strong>，让自己增加了识别图片中的文字的功能。  </p><p>不过先不要高兴得太早，想要用上这个功能，除了 iPhone 需要升级到最新的 iOS 15 系统，它对于<strong>手机的芯片（型号）</strong>也存在着限制：必须是<strong>搭载 A12 及之后的设备</strong>，这些设备具体包含：  </p><blockquote><p>iPhone Xs、iPhone Xs Max、iPhone XR、iPhone SE 2、iPhone 11 系列、iPhone 12 系列和 iPhone 13 系列。   </p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/05/img0338.jpg" alt="IMG_0338"></p><p>对于这点，想说，<strong>苹果还是挺鸡贼的</strong>，把 iOS15 新增的 OCR 功能仅对用着更新设备的用户开放，老用户就只能围观看个热闹，不知道是否想通过这个鸡贼的点，来推动老用户换新手机呢？   </p><h2 id="微信通话页面显示最近发布的朋友圈"><a href="#微信通话页面显示最近发布的朋友圈" class="headerlink" title="微信通话页面显示最近发布的朋友圈"></a>微信通话页面显示最近发布的朋友圈</h2><p>使用微信的通话功能打电话给微信好友，发现微信对这个页面进行了重新设计：</p><ul><li>会显示微信好友最近发布的一条朋友圈动态</li><li>下面还增加了一个入口，前往对方的朋友圈查看更多动态   </li></ul><p>这个设计，让我想到以前运营商推出过的一种名为「彩印」的业务，当对方开通了这个业务，你在拨打对方号码等待接听的时候，会在屏幕上显示对方设置的祝福语。  </p><p>现在这个场景变少了，逐渐被微信电话☎️取代了，而我们看到的东西，也从以前的祝福语，变成了现在的朋友圈。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/05/img0391.jpg" alt="IMG_0391"></p><h2 id="支付宝彩蛋"><a href="#支付宝彩蛋" class="headerlink" title="支付宝彩蛋"></a>支付宝彩蛋</h2><p>最近刚发现支付宝内置了一个彩蛋，在支付宝中搜索「<strong>我裂开了</strong>」，你的手机屏幕会裂开，效果如下图：  </p><p>之所以有这个彩蛋，应该也是为了推广支付宝里面的<strong>手机碎屏险</strong>。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/05/img0357.jpg" alt="IMG_0357"></p><h2 id="第三方推特客户端-FetchMee"><a href="#第三方推特客户端-FetchMee" class="headerlink" title="第三方推特客户端 FetchMee"></a>第三方推特客户端 FetchMee</h2><p>FetchMee，这是 Twitter 上一个网友 @jyrnan 开发的第三方 Twitter 客户端，使用这个 App 有个要求：手机系统必须为 iOS 15。  </p><p>由于我没有更新到 iOS 15，只能截取一下开发者在 Twitter 上发布的动态：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/05/16334139827010.jpg"></p><p>软件的首页如下，动态采用了卡片式的设计，每条动态存放在一个单独的卡片中，不像 Twitter 官方版本看起来那么拥挤。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/05/16334139113533.jpg"></p><p>这个第三方客户端的功能如下，而且还<strong>支持将 Twitter 上的视频保存到本地</strong>，保存视频再也不需要借助其他工具。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/05/16334142913005.jpg"></p><h2 id="推荐一个用来煲剧的-Telegram-机器人"><a href="#推荐一个用来煲剧的-Telegram-机器人" class="headerlink" title="推荐一个用来煲剧的 Telegram 机器人"></a>推荐一个用来煲剧的 Telegram 机器人</h2><p>之前发布过一篇文章《<a href="https://mp.weixin.qq.com/s/X5usVBt_8fXbxENnU4O-3w">不到100M的社交软件，分分钟吊打国民级的「小而美」</a>》，介绍了 Telegram 上一些实用的机器人。  </p><p>趁着假期，再给大家推荐一个<strong>煲剧</strong>可能会用到的 Telegram 的机器人 @<strong>YYeTs 资源机器人</strong>。</p><p>输入影视剧名称，会返回来自人人影视的磁力下载链接，用迅雷下载速度还挺给力的。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/05/16334145351065.jpg"></p><h2 id="乔布斯逝世-10-周年"><a href="#乔布斯逝世-10-周年" class="headerlink" title="乔布斯逝世 10 周年"></a>乔布斯逝世 10 周年</h2><p>早上在即刻上看到一条来自 @方可成 老师发布的动态，说到苹果在一个 emoji 表情 📝 中埋下了一个彩蛋，这个 emoji 里面包含的文字并不是无意义、随意生成的文本，而是来自苹果 1997 年「非同凡想」广告中那段让无数人印象深刻的文案：  </p><blockquote><p>致疯狂的人。他们特立独行。他们桀骜不驯。他们惹是生非。他们格格不入。他们用与众不同的眼光看待事物。他们不喜欢墨守成规。他们也不愿安于现状。你可以认同他们，反对他们，颂扬或是诋毁他们。但唯独不能漠视他们。因为他们改变了寻常事物。他们推动人类向前迈进。或许他们是别人眼里的疯子，但他们却是我们眼中的天才。因为只有那些疯狂到以为自己能够改变世界的人……才能真正改变世界。       </p></blockquote><p>10 年过去了，他一直还在。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/10/05/img0508.PNG" alt="IMG_0508"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">           </p>]]></content>
    
    
    
    <tags>
      
      <tag>微信</tag>
      
      <tag>App</tag>
      
      <tag>乔布斯</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在 GitHub 个人主页添加一个有趣的贪吃蛇动画</title>
    <link href="/2021/09/30/2021-9-30-githubprofile/"/>
    <url>/2021/09/30/2021-9-30-githubprofile/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 各位早上好，今天是国庆小长假前的最后一个工作日。</p><p>按照我不成熟的经验，长假前和长假后，不少人可能都会临时患上「<strong>假期综合症</strong>」，具体表现为：无心上班、只想摸鱼，导致工作效率低下。</p><p>假期后回来也是一样，需要一两天作为过渡，从闲散、疲惫中重新找回工作的状态，就像是冬天开车之前，需要先点燃发动机预热一下，才能把你更好地带向远方。    </p><p>反正都是会摸鱼的，不妨来看一点有意思的：      </p><p>这是我前几天在逛 GitHub 发现的有意思的东西，给自己的个人 GitHub 主页添加一个贪吃蛇动画，效果如下：  </p><p>贪吃蛇会吃掉我们在 GitHub 上提交的代码记录，即吃掉那些绿色的格子。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/27/tan-chi-she.gif" alt="贪吃蛇"></p><p>这里稍微提一下，有些朋友可能对下面👇这种类型的图表不熟悉，这种类型的图表称为「<strong>热力图</strong>」，每一个小格子对应每一天，格子默认都是灰色的，其中绿色的格子就表示我们在那一天提交了代码，格子的颜色越深，则说明我们在那一天提交的代码次数越多。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/30/16329663719831.jpg"></p><p>除了 GitHub，<strong>在其他互联网产品上，也可以看到热力图的影子</strong>，例如下面这些产品：   </p><ul><li>豆瓣</li><li>Day One</li><li>flomo  </li><li>幕布  </li><li>极客时间   </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/30/16329667299571.jpg"></p><p>回到前面说的，如何在 GitHub 个人主页，实现贪吃蛇的小动画呢？  </p><p>非常简单，只需要你会复制代码就可以了，这个贪吃蛇小动画的代码来自 GitHub 上的一位用户 @L1cardo 的个人页面：  </p><p><em><a href="https://github.com/L1cardo">https://github.com/L1cardo</a></em>   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/30/16329670167145.jpg"></p><p>实现贪吃蛇动画的代码如下，作者将其做成了一个会自动运行的命令，每天自动运行一次，运行之后会生成两个文件：gif 和 svg。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/30/16329671382752.jpg"></p><p>为方便你使用，我将原作者的代码复制到了下面：     </p><pre><code class="yml">name: Generate Snakeon:  schedule:    - cron: &quot;0 0 * * *&quot;  workflow_dispatch:jobs:  build:    runs-on: ubuntu-latest    steps:      - name: Checkout        uses: actions/checkout@v2.3.4      - name: Generate Snake        uses: Platane/snk@master        id: snake-gif        with:          github_user_name: $&#123;&#123; github.repository_owner &#125;&#125;          gif_out_path: ./assets/github-contribution-grid-snake.gif          svg_out_path: ./assets/github-contribution-grid-snake.svg      - name: Push to GitHub        uses: EndBug/add-and-commit@v7.2.1        with:          branch: main          message: &#39;Generate Contribution Snake&#39;      </code></pre><p>需要注意的是，我们需要将这个代码复制到与自己的 GitHub ID 同名仓库的 <code>.github/workflows</code> 路径下。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/30/16329681948235.jpg"></p><p>同名仓库没有这个路径或文件夹📂的，且<strong>不知道如何创建文件夹</strong>的朋友，可以参考我之前写过的一篇文章：   </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649917461&idx=1&sn=0b56985fa9f5a51e75cc18e569edbb5e&chksm=83a88c38b4df052e9deb1a70428c6f0c2a38cbbbed5457d3e525041921e57afa2387b989ab54&token=80706750&lang=zh_CN#rd">在个人主页展示今年的时间进度 | GitHub</a>         </p><p>复制完代码后，我们还要将代码生成的 svg 文件放在<strong>GitHub ID 同名仓库的 README 文档中</strong>，它才会在个人首页显示。    </p><p>由于 README 文档是用 <strong>Markdown</strong> 格式进行编辑，引入 svg 文件需要使用下面这种格式。      </p><pre><code class="markdown">![](https://raw.githubusercontent.com/这里更换为你的 GitHub ID/这里更换为你的 GitHub ID/main/assets/github-contribution-grid-snake.svg)              </code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/30/16329676198923.jpg"></p><p>完成以上两步操作，就可以在自己的 GitHub 主页看到这个动画啦，还是很酷😎的：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/27/tan-chi-she.gif" alt="贪吃蛇"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">        </p>]]></content>
    
    
    
    <tags>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>回看自己过去 4 年的运动数据，是一种什么样的体验？</title>
    <link href="/2021/09/28/2021-9-28-runningpage/"/>
    <url>/2021/09/28/2021-9-28-runningpage/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 各位早上好。     </p><p>今天想和大家分享一件<strong>在我看来非常酷</strong>的事情，如下图，<strong>将自己过去 4 年的跑步数据放到一个网站上</strong>，数据来自 Keep App，由于在跑步的时候开启了 GPS 定位，因此右侧的地图还会显示我们跑过的路径。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327524532925.jpg"></p><p>我的运动记录 Running Page：<br><em><a href="https://running-page-jet.vercel.app/">https://running-page-jet.vercel.app/</a></em>        </p><p>顺提一提，之前有一段时间我用的是 Apple Watch 的「健身记录」来记录跑步数据，有不少数据无法同步到 Keep 中，导致网站上显示的 2021 年运动记录只有 28 次。  </p><p>苹果推出的 App 都比较封闭，目前暂时无法从「健身」或「健康」App 中导出数据，如果你也要想要制作上面的跑步网站，你平时使用的记录跑步数据的 App，最好是下面这些：    </p><ul><li>Keep</li><li>悦跑圈</li><li>咕咚   </li><li>Garmin</li><li>Garmin-CN</li><li>Nike Run Club  </li><li>Strava</li><li>GPX</li><li>Nike+Strava(Using NRC Run, Strava backup data)</li><li>Strava_to_Garmin(Using Strava Run, Garmin backup data)  </li></ul><p>之所以推荐这些 App，是因为制作网站所用到的 GitHub 项目「<strong>running_page</strong>」，目前也只支持这些 App。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327541414514.jpg"></p><p>GitHub 项目「running_page」地址：<br><em><a href="https://github.com/yihong0618/running_page">https://github.com/yihong0618/running_page</a></em>    </p><p>这个开源项目的作者是 @yihong 老师，在这个时间点介绍这个项目也比较巧，最近刚好是**<a href="https://github.com/yihong0618/gitblog/issues/220">这个项目开源一周年</a>**的节点。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327543418049.jpg"></p><p>作者 @yihong 老师为了让更多的人可以通过这个项目、制作出属于自己的跑步页面，他在 GitHub 的 README 文档中也提供了比较详细的使用说明。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327544938315.jpg"></p><h2 id="使用之前的说明"><a href="#使用之前的说明" class="headerlink" title="使用之前的说明"></a>使用之前的说明</h2><p>在正式使用这个项目之前，你的电脑最好先安装下面这些软件：   </p><ul><li>Python3   </li><li>Git    </li><li>VS Code：代码编辑器，不是必须的，但为了后面更好地编辑项目中的一些代码，推荐安装   </li></ul><h2 id="下载-克隆所有代码文件"><a href="#下载-克隆所有代码文件" class="headerlink" title="下载/克隆所有代码文件"></a>下载/克隆所有代码文件</h2><p>会使用 Git 命令的朋友，可以通过 Git 将远端的代码文件克隆到电脑本地：    </p><pre><code>git clone https://github.com/yihong0618/running_page.git               </code></pre><p>如果你不会使用 Git 命令，可以通过仓库右上角的 <strong>Download</strong> 按钮下载所有文件的压缩包，记得要对文件进行解压。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327553134489.jpg"></p><h2 id="安装及测试"><a href="#安装及测试" class="headerlink" title="安装及测试"></a>安装及测试</h2><p>下载文件之后，我们要<strong>终端</strong>（Windows 上称为 <strong>cmd</strong> 或者 <strong>Powershell</strong>）中逐行运行下面的命令。   </p><pre><code>pip3 install -r requirements.txtyarn installyarn develop</code></pre><p>运行之前，请确保你当前所在的路径，是代码文件夹所在的位置。  </p><p>以我为例，我将下载的代码文件夹 running_page 放在了电脑的 <code>workspace/running_page</code>路径下。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327558932240.jpg"></p><p>因此，在运行前面的 3 个命令之前，我需要先使用 <code>cd</code> 命令，进入到对应的路径下方。  </p><pre><code>cd workspace/running_page/running_page      </code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327559729271.jpg">      </p><p>进到正确的路径下，再逐次运行前面的 3 个命令。     </p><p>不过，由于不同电脑的<strong>环境配置</strong>存在着差异，在运行那 3 个命令的过程中，你可能也会像我一样，遇到命令运行后提示错误的情况。  </p><p>这里给出我在运行这 3 个命令的过程中，遇到的 3 个问题及相应的解决方法：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327561907413.jpg">      </p><h2 id="查看网页的雏形"><a href="#查看网页的雏形" class="headerlink" title="查看网页的雏形"></a>查看网页的雏形</h2><p>前面 3 个命令运行无误的话，最后可以在终端中看到下图的提示：在浏览器中打开网页 <code>http://localhost:8000/</code>，就可以看到网站的雏形。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327562571213.jpg">     </p><p>网站雏形的数据来自项目的原作者，为了得到我们自己专属的网站，还需要修改和删除一些文件。  </p><h2 id="修改代码文件"><a href="#修改代码文件" class="headerlink" title="修改代码文件"></a>修改代码文件</h2><p>修改代码文件时，可以使用电脑自带的<strong>记事本</strong>打开代码文件，也可以使用前面提到的 VS Code。  </p><p>首先打开 <code>.github/workflows</code> 下的 <code>run_data_sync.yml</code> 文件，定位到第 22 行代码的位置。  </p><p><code>RUN_TYPE</code>填入你平时在用的运动 App，例如 keep，下面的 ATHLETE、TITLE、GITHUB_NAME、GITHUB_EMAIL，分别更改为自己的昵称、最终呈现在网站的热力图的标题、GitHub ID 和邮箱。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327569561383.jpg">     </p><p>例如我将 TITLE 设置为 Phh95 Running，最终就会呈现为热力图顶部的标题。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327573662968.jpg">     </p><p>接着定位到代码的 117 行，这里需要<strong>修改一下变量的名称</strong>，将 secrets 后面的 GITHUB_TOKEN 修改为 <strong>G_T</strong>。     </p><p>这里之所以要修改变量的名称，是因为 GitHub 不允许以 GITHUB 为开头来命名密钥。          </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327574744522.jpg"></p><p>打开 <code>gatsby-config.js</code> 文件，修改下图框选出来的部分参数：     </p><ul><li>siteTitle：跑步网站的标题，默认是 Running Page   </li><li>siteUrl：跑步网站的网址，这里先不填，后续我们通过 vercel 部署得到网址之后，再来填写   </li><li>logo：网站 logo 的图床链接     </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327872031973.jpg">    </p><ul><li>navLinks：网站右上角的两个链接，一个是 <strong>Blog</strong>，一个是 <strong>About</strong>。如果你有个人博客的话，可以将 Blog 的 url 替换成自己的博客网站。      </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327875646190.jpg">    </p><p>接着来到 assets 文件夹，只保留其中的 3 个文件：<code>start.svg</code>、<code>end.svg</code>、<code>grid.svg</code>，将其余的 svg 文件删除。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327577134931.jpg">     </p><p>接着来到 scripts 文件夹，删除其中的 <code>data.db</code> 文件。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327578879290.jpg">     </p><p>来到 <code>src/static</code> 文件夹，删除其中的 <code>activities.json</code> 文件。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327579742212.jpg">     </p><h2 id="导出运动数据"><a href="#导出运动数据" class="headerlink" title="导出运动数据"></a>导出运动数据</h2><p>前面删除的文件中，包含了作者原先的运动数据，为了最后可以在网站上看到自己的运动数据，我们还需要<strong>从运动 App 中导出我们的运动数据</strong>。      </p><p>作者在 README 文档中，对不同运动 App 如何导出数据，也进行了相关的说明。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327870690965.jpg">     </p><p>以 <strong>keep</strong> App 为例，在<strong>终端</strong>中运行下方的命令，就会在代码文件夹中的相应位置，生成我们需要的运动数据，具体体现为文件夹中新增了两个文件，分别是 <code>activities.json</code> 和 <code>data.db</code> 文件。      </p><pre><code>python3 scripts/keep_sync.py 注册keep账号的手机号 keep账号的密码           </code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327876319969.jpg"></p><p>到这里，我们就算是完成了代码的修改，接着就是通过 Git，将本地的代码文件夹，上传到远端的 GitHub 仓库。   </p><p>这个过程具体如何操作，可以查看我之前的一篇文章或者参考网上别人写的文章：   </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649912687&idx=1&sn=ebc85258bb1a00b1fdbd4caecd4983db&chksm=83a87142b4dff854cac446e217626dba9f0374a1105351e8f181c5bfdbec4a62bceeeac44702&token=1181644356&lang=zh_CN#rd">将本地文件/文章上传到 GitHub 的流程</a>    </p><h2 id="GitHub-仓库配置密钥和-Token"><a href="#GitHub-仓库配置密钥和-Token" class="headerlink" title="GitHub 仓库配置密钥和 Token"></a>GitHub 仓库配置密钥和 Token</h2><p>项目作者在代码中用到了 GitHub 自带的自动化功能 <strong>Actions</strong>，每天会自动运行一次 Run Data Sync，可以及时地将我们的运动数据更新到网站上。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327904976040.jpg"></p><p>为了让 Actions 可以自动更新数据，我们也要对 GitHub 仓库进行配置：配置密钥和 Token。   </p><p>配置密钥，我们要按照下图进行操作，打开仓库的 Settings 页面，左侧切换到 Secrets 选项卡，点击右上角的 New repository secret，需要我们填入<strong>密钥名称 Name</strong> 和<strong>值 Value</strong>。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327909219319.jpg"></p><p>这里的密钥名称取决于你目前正在使用的运动 App，<strong>不同 App 的密钥名称存在着区别</strong>，查看密钥名称需要打开 <code>.github/workflows/run_data_sync.yml</code> 文件。  </p><p>以我在用的 Keep 为例，它的两个密钥名称分别为 <strong>KEEP_MOBILE</strong> 和 <strong>KEEP_PASSWORD</strong>，它们的 Value 值其实分别对应——注册 Keep 账号的手机号和密码。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327908146049.jpg"></p><p>配好密钥后，我们还需要<strong>配置 Token</strong>，首先打开网页 <code>https://github.com/settings/tokens</code>，点击右上角的 Generate new token，生成一个新的 Token。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327915810978.jpg"></p><p>生成 Token 时，有两个注意点，将 Token 的<strong>有效期 Expiration</strong> 设置为 No expiration(长期有效)，<strong>勾选下面的所有复选框</strong>，将所有权限都打开。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327916589472.jpg"></p><p>生成的 Token，是一长串英文和数字混合的字符串，点击右侧的复制按钮，复制到剪贴板，接着再回到前面的 Secret 页面，添加一个新的密钥，密钥名称为 <strong>G_T</strong>，这个名称是我们在前面修改代码的过程中手动改过的，因此<strong>这个密钥名称是固定了的</strong>，不要再更改了。     </p><p><strong>G_T 的 Value 值就是我们刚生成的 Token</strong>，粘贴到对应位置即可。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327919305327.jpg"></p><p>配好密钥和 Token 之后，打开仓库的 <strong>Actions 页面</strong>，我们来<strong>手动运行一次 Actions</strong>，看看它能否正常工作。   </p><p>左侧切换到 Run Data Sync，接着点击右侧的 <strong>Run workflow</strong>，稍等一会，等待程序运行之后给我们返回的结果。   </p><p>程序可以正常工作的话，Run Data Sync 左侧应该会有一个绿色的✅图标，如下图标注的数字 4 的位置。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327922636698.jpg"></p><h2 id="Vercel-部署得到自己的跑步网站"><a href="#Vercel-部署得到自己的跑步网站" class="headerlink" title="Vercel 部署得到自己的跑步网站"></a>Vercel 部署得到自己的跑步网站</h2><p>完成前面的所有操作之后，我们所有的准备工作就算完成了，就差最后的临门一脚了，<strong>将 GitHub 仓库部署到服务器上</strong>，就能得到<strong>人人都可以访问的网站了</strong>。   </p><p>项目的作者提供了 3 种部署的方案，如下图，这里<strong>最推荐使用 Vercel 部署</strong>，因为最为简单，不需要过多折腾。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327927868831.jpg"></p><p>关于如何 Vercel 部署，可以查看作者写的说明文档，因为比较简单，这里就不过多介绍了：  </p><p><em><a href="https://github.com/yihong0618/running_page/blob/master/README-CN.md">https://github.com/yihong0618/running_page/blob/master/README-CN.md</a></em></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327928379701.jpg"></p><p>通过 Vercel 部署，它会自动返回一个网站链接🔗，点击下图的 DOMAINS 下方的链接，就可以看到自己专属的跑步网站啦。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/28/16327930576052.jpg"></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>为了弄出这个网站，懂技术的人可能花 20 多分钟就搞定了，不懂技术的我，用了 20 多分钟几倍的时间才勉强弄出来，中间还向项目的原作者问了好几个问题，在此要感谢作者的耐心解答❤️。      </p><p>整个过程下来，我游走于 想放弃 与 不放弃 之间，做一会停一会，就像玩自己不擅长的游戏那样，很有挫败感，也总在怀疑自己是不是太辣鸡了。。。不适合搞这个，害。       </p><p>以上，就是本次想和你分享的内容。   </p><p>如果对你也有帮助的话，别忘了点击下方的<strong>点赞、在看</strong>和<strong>分享</strong>按钮，<strong>你的小小支持，是我持续更新的最大动力</strong>，我们下次再见。  </p>]]></content>
    
    
    
    <tags>
      
      <tag>运动</tag>
      
      <tag>Keep</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何下载微博视频 | Maipo</title>
    <link href="/2021/09/24/2021-9-24-weibo/"/>
    <url>/2021/09/24/2021-9-24-weibo/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><script>console.error("Error: [hexo-tag-aplayer] Unrecognized tag argument(2): autoplay=false");</script>    <p>Hello 各位晚上好。  </p><p>很早之前写过一篇文章《<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649880387&idx=1&sn=267ce5c9473d02f57c32b520a2f10a9e&chksm=83abf36eb4dc7a7840ea03c9a389279f8527deb52df4c63862b839bef4564ca63637f6e27e9a&token=2120180942&lang=zh_CN#rd">这10个下载工具，让你成为朋友圈最靓的仔</a>》，介绍了多个下载不同平台视频内容的方法，其中就有一个可用来<strong>下载微博视频</strong>的工具——<strong>iiilab</strong>。  </p><p>原本只要将想下载的微博视频链接🔗粘贴到下方的输入框，就可以很方便地下载视频。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/24/16324900690259.jpg"></p><p>但我前两天想用它来下载视频，意外地发现这个工具已经失效了。  </p><p>失效的原因，我猜测是微博推出了<strong>微博视频号</strong>之后，<strong>故意将视频的原始链接隐藏起来了</strong>，每次点击不同微博动态末尾的视频链接，不管是什么视频，都会跳转到下图的页面。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/24/16324903668917.jpg"></p><p>故意将原始链接隐藏起来，这大概率也是为了阻挡搬运党来搬运微博的视频内容，这对内容平台来说似乎无法厚非。  </p><p>但从我自己的角度出发，考虑到<strong>现在不少内容都会悄无声息地消失</strong>，还有一些内容是只有在微博上首发的，可以找到最高清、没有叠加那么多水印的版本，我有时还是会选择下载下来。  </p><p>因此，这里介绍一个我发现的可用来下载视频的方法，这个方法暂时仅限 Mac 电脑使用：   </p><p>先在电脑上安装第三方微博客户端 <strong>Maipo</strong>，软件免费，可从 Mac App Store 下载。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/24/16324910659160.jpg"></p><p>这个第三方客户端是一位就职于微博的工程师 @Naituw 开发的个人项目，因此在这个软件上登录自己的微博账号，应该还是比较有保障的。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/24/16324913564084.jpg"></p><p>登录账号之后，下载视频的方法也非常简单，鼠标移动到想下载的视频上方，长按左键将视频<strong>拖拽</strong>到电脑桌面或文件夹📂中，就可以将视频保存到本地了。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/24/16324911986304.jpg"></p><p>其实除了这个方法，我之前还尝试过用 Mac 上的一款知名下载工具——<strong>Downie</strong>，不过遗憾的是，也是因为 Downie 无法获取到视频的原始链接，导致下载失败。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/24/16324916993778.jpg"></p><p>如果你在手机上使用一些第三方的微博 App，可以自行查看一下，App 内是否提供了将视频保存到本地的功能，因为我没有使用第三方的 App，这里就无法提供相关信息了，见谅。   </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>下载</tag>
      
      <tag>微博</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我喜欢的歌手李健，生日快乐。</title>
    <link href="/2021/09/23/2021-9-23-lijian/"/>
    <url>/2021/09/23/2021-9-23-lijian/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>今天是 2021 年 9 月 23 日，歌手李健的生日。</p><p>2015 年上大学期间，看了湖南卫视的《我是歌手 3》，一开始对以补位歌手身份加入的李健不太感冒，对他为数不多的印象，停留两年的春晚舞台上，2011 年春晚和方大同、萧敬腾合唱了一首歌，还有 2013 年和孙俪演唱了一首自己的歌《风吹麦浪》。  </p><p>后来真正让我觉得惊艳的，还是他在节目后期的突围赛演唱的一首新歌《假如爱有天意》，这首歌的灵感来自韩国的一部同名电影《假如爱有天意》，凄美的旋律，加上李健填的词，还有他现场的表演、穿的衣服，这一切加起来，让我喜欢上了这个男人。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/23/srchttpww1sinaimgcnlarge8925873bjw1eqg6pbxqj6j21uo.jpeg" alt="src=http___ww1.sinaimg.cn_large_8925873bjw1eqg6pbxqj6j21uo2s0k63.jpg-refer=http___www.sina"></p><p>*扫描下方的二维码，可以观看李健在《我是歌手》演唱的《假如爱有天意》</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/23/qrcodesp--1.jpg" alt="QRcode_SP — 1"></p><p>《假如爱有天意》歌词：       </p><blockquote><p>当天边那颗星出现<br>你可知我又开始想念<br>有多少爱恋只能遥遥相望<br>就像月光洒向海面<br>年少的我们曾以为<br>相爱的人就能到永远<br>当我们相信情到深处在一起<br>听不见风中的叹息<br>谁知道爱是什么<br>短暂的相遇却念念不忘<br>用尽一生的时间<br>竟学不会遗忘<br>如今我们已天各一方<br>生活的像周围人一样<br>眼前人给我最信任的依赖<br>但愿你被温柔对待<br>多少恍惚的时候<br>仿佛看见你在人海川流<br>隐约中你已浮现<br>一转眼又不见<br>短暂的相遇却念念不忘<br>多少恍惚的时候<br>仿佛看见你在人海川流<br>隐约中你已浮现<br>一转眼又不见<br>当天边那颗星出现<br>你可知我又开始想念<br>有多少爱恋今生无处安放<br>冥冥中什么已改变<br>月光如春风拂面     </p></blockquote><p>虽说是喜欢李健，但那时候并没有主动去搜索他唱过的其他歌。</p><p>一直到 2015 年底，看到他要来广州开演唱会，我才动了买演唱会门票的心思。</p><p>为了不花爸妈的钱，我学着隔壁班的同学 @烽 在学校找了一份工作——送外卖。一个中午干 1 个多小时，可以赚 20、30 块钱，相比学校的活 10 元/小时，还是会多一点。    </p><p>最后，钱是攒到了，但最便宜的门票并不好买，去微博评论区捡漏无门。   </p><p>没买到门票，我本来是想放弃的，最终奇迹还是出现了，这还得感觉我的大学室友。在演唱会开场前的 4 个小时，大学室友同乡群的一位师姐，为了备考研究生，忍痛在群里转手演唱会的门票，而且刚好还是我最想要的「山顶票」。   </p><p>自己一个人第一次去看演唱会，那种心情，既兴奋又紧张。在去的路上，我还遇到了一对老爷爷和老奶奶，我下车的时候他们也跟着下车了，我以为他们是住在附近要回家的，后来他们停了下来问旁边的路人，「白云体育馆怎么走」，我一听，就知道他们也是来看李健的演唱会，看到他们年纪这么大了，依然大晚上的从家里赶过来「追星」。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/23/guang-zhou-yan-chang-hui.jpeg" alt="广州演唱会"></p><p>在演唱会上，少数是之前听过的歌，多数都比较陌生，因为来之前也没做啥功课，其中有一首让我印象，就是他为他的听友写的一首歌《谢谢你》。     </p><h2 id="听众有耐心等待我成长"><a href="#听众有耐心等待我成长" class="headerlink" title="听众有耐心等待我成长"></a>听众有耐心等待我成长</h2><p>今天在微博上看到一位听友剪辑的视频，其中有一段 2014 年李健在央视的《艺术人生》节目上说的话：</p><blockquote><p>他们（指他的听众）对我都是有所期待的，也能理解我，就，当别人说我慢的时候，他们能够耐心等待，当我不出名的时候，他们有耐心向别人解释我是谁，他们有耐心等待我成长。——20140320《艺术人生》   </p></blockquote><p>2014 年的李健，还没有 2015 年上了《我是歌手》之后那么为众人所熟悉，在这之前，他人生的一个小高峰，应该是 2010 年王菲在春晚上翻唱了他的一首歌《传奇》。  </p><p>当《传奇》因为王菲的演唱进入大众的视野，不少人才开始注意到这首歌的原唱。可能也是因为这个小高峰，不少节目才开始向李健抛出了橄榄枝，例如撒贝宁主持的《开讲了》、还有 2014 年的《艺术人生》栏目。      </p><h2 id="不用微信的李健"><a href="#不用微信的李健" class="headerlink" title="不用微信的李健"></a>不用微信的李健</h2><p>在 2015 年的歌手节目中，其中有一个片段，胡彦斌和李健交换手机号码的时候，李健拿出了一款“老掉牙”的诺基亚手机，让胡彦斌在上面输入自己的手机，这手机还是功能机而非后来的触屏机，还担心胡彦斌不会用。  </p><p>今天在 QQ 音乐的一档播客节目《无乐不谈》中，听到主持人王东和李健录制的一期节目《中庸之道，在思辨中成长》，其中李健也说到，他现在依然没有微信。</p><p>之所以到现在没有微信，一方面是刻意不用，另一方面是平时交往的朋友也没有那么多，不使用微信也不会造成影响。</p><p>还提到另外一点，现在人们对手机过度依赖，导致<strong>手机像是变成了人体的一个器官</strong>，这个观点，与微信之父张小龙 2011 年在饭否上写的一句话不谋而合：  </p><blockquote><p>手机是人的最重要的人工器官。 2011-01-02 15:33   </p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/23/img0349.JPG" alt="IMG_0349"></p><h2 id="作家余华对李健的评价"><a href="#作家余华对李健的评价" class="headerlink" title="作家余华对李健的评价"></a>作家余华对李健的评价</h2><p>在唱歌之外，李健还有不少的爱好：阅读、健身、收藏吉他，他之前有时还会在微博上推荐自己看过的书。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/23/16324107246171.jpg"></p><p>他私下可能和余华经常往来，今年年初看到他在微博上发布了自己读完余华的新作《文城》的感受：</p><p> <img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/23/16324108609421.jpg"></p><p>2017 年李健二次参加《我是歌手》的时候，节目组请来了余华，他是这么评价李健的（商业互吹环节）：</p><blockquote><p>诗人和歌手，其实在过去就是很难分开的，他们就是合二为一的，作为原创歌手来说，他们基本上都还是诗人……李健我感觉到他是一个诗如其人、歌如其人的这样一个人。他生活中也是一个挺安静的人。在今天这么一个喧哗与骚动的世界里面，他的那种安静的东西，很能打动人。阅读对李健来说的话，我觉得就是他的土壤，通过他生活中的感受，和他写的那个词和歌，包括他的演唱，则是在里边长出来的不同的树木。   </p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/23/yu-hua-ping-jia-li-jian.png" alt="余华评价李健"></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>我认识的一位朋友曾对我说过，李健的歌，感觉听起来都是比较凄惨（哀怨）、缺少快乐的。  </p><p>对这位朋友的评价，我也不知道如何回应，我能做的，好像只有向他放一首《不期而遇》，来向他反驳，他唱的歌也不仅仅只有悲伤的主题。   </p><p>生活已经都这么苦了，为什么还要去听那么悲伤的歌呢？  </p><p>我还没找到答案，我也不知道。   </p>]]></content>
    
    
    
    <tags>
      
      <tag>音乐</tag>
      
      <tag>李健</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>电脑录屏好帮手，在电脑屏幕实时显示键盘操作 | Mac</title>
    <link href="/2021/09/22/2021-9-22-macsoftware/"/>
    <url>/2021/09/22/2021-9-22-macsoftware/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 各位晚上好。</p><p>今天给大家介绍一款在电脑屏幕事实显示键盘操作的软件——<strong>keycastr</strong>，这款软件可以说是一款<strong>录屏的利器</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/22/16323160107136.jpg"></p><p>当你在录屏的过程中使用了键盘，无论是使用输入法输入内容，还是使用了快捷键，它都会在屏幕上实时显示当前按下的按键。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/22/16323176135433.jpg"></p><p>首次运行 keycastr，它默认会在<strong>屏幕的左下角</strong>显示键盘操作，如果你想更改键盘操作显示的位置，将鼠标移动到实时显示的键盘操作上方，直接拖拽到自己想要的位置即可。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/22/16323179338129.jpg"></p><p>这款软件的设置面板也非常简单，Display KeyCastr icon 可设置在哪显示软件图标，默认是在屏幕顶部的<strong>菜单栏</strong>和底部的 <strong>Dock 栏</strong>，都会显示软件图标。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/22/16323180532850.jpg"></p><p>设置面板的第二个选项卡 Display，则可以调整：在屏幕上显示的字体大小、一行可显示的文本长度、上一个文本消失所用的时间、设置背景色和文本的颜色。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/22/16323186839917.jpg"></p><p>在使用输入法输入文本的时候，如果同时开启了这个软件，在你噼里啪啦、尽情码字的同时，它会在屏幕上显示一长串的字母，有点会分散我们的注意力。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/22/16323189341352.jpg"></p><p>对于这个问题，你可以右击菜单栏的软件图标，选择 <strong>Stop Casting</strong>，暂时停用这个软件。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/22/16323186392291.jpg"></p><p>keycastr 下载地址：<br><em><a href="https://github.com/keycastr/keycastr/releases">https://github.com/keycastr/keycastr/releases</a></em> </p><p>如果你无法打开 GitHub 下载这款软件，可以点击下方的卡片，在后台回复「<strong>屏幕快捷键</strong>」，即可获取软件的安装包。  </p><p>这款软件目前仅支持苹果的 macOS 系统，使用 Windows 系统的朋友，如果想在录屏的时候实现类似的效果，可以使用另外一款软件——Carnac。</p><p>关于 Carnac 的具体介绍，可以查看我之前写过的一篇文章：</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649911683&idx=1&sn=cdf3b26ac59231f75c3d1bc4c61767c1&chksm=83a875aeb4dffcb88f8bb695c232100059b5b30181154c7094a781f611673450846aa1ac5d52&token=2120180942&lang=zh_CN#rd">电脑屏幕实时显示快捷键？这款软件也太强了吧。</a>       </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">           </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>录屏</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>近期值得关注的 App</title>
    <link href="/2021/09/20/2021-9-20-apps/"/>
    <url>/2021/09/20/2021-9-20-apps/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>好久没更新这类文章了，今天趁着假期，来更新一篇。</p><h2 id="夸克浏览器"><a href="#夸克浏览器" class="headerlink" title="夸克浏览器"></a>夸克浏览器</h2><p>夸克浏览器，这里不说夸克的缺点，只说我刚发现夸克的一个功能——<strong>夸克网盘</strong>。</p><p>一个浏览器也推出了网盘功能，只能说现在的工具类产品变现太困难了。</p><p>一个免费的浏览器，除了加入更多的广告，现在还试图通过网盘的会员费来增加收入。  </p><p>免费用户有 10GB 的存储空间，但如果你想扩容的话，可以开通一个 3TB 的普通会员，价格为 5 元/月，如果你是学生的话，低至 1 元/月，一整年下来年度会员为 12 元，可以说是非常便宜了。  </p><p>但最终决定是否要使用夸克网盘，我觉得不应该只看价格，更应该<strong>注重网盘长期的稳定性</strong>，当收费用户数量太少、不足以分摊网盘服务的投入时，这种网盘服务大概走不了多远，何况还有免费、更大容量的「阿里云盘」等着你。  </p><p> <img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/20/img6611a6b32bd61.jpeg" alt="IMG_6611A6B32BD6-1"></p><h2 id="Poet-so"><a href="#Poet-so" class="headerlink" title="Poet.so"></a>Poet.so</h2><p>Poet.so 是一个网页版的图片分享工具，它可以图片的形式分享你发布过的 Twitter 动态，效果如下图所示，样式非常好看。它会保留你的推特头像、ID、动态发布时间、回复数、转发数和点赞数。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/20/16320964957472.jpg"></p><p>下图是 Poet.so 的官网，下方的工具栏可更改分享图的背景、深色/浅色模式、是否显示回复数、更改卡片的尺寸。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/20/16320971226964.jpg"></p><p>Poet.so 官网：<br><em><a href="https://poet.so/">https://poet.so/</a></em></p><p>这个产品是 Twitter 上的网友 @Larry 推荐的，他既是一名开发者，也是一名设计师，除了推荐自己做的产品，还会经常分享许多设计相关的资源，感兴趣的可以去推特或者即刻上关注他。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/20/16320975802878.jpg"></p><p>稍微提一嘴，现在很多社交产品的内容都没法看，目前高质量的社交内容平台，我觉得只剩下<strong>即刻</strong>和 <strong>Twitter</strong> 了，Telegram 可能也有，但太花时间了，一不小心就沉迷于看别人的聊天记录了。     </p><h2 id="魔法分享"><a href="#魔法分享" class="headerlink" title="魔法分享"></a>魔法分享</h2><p>如果你使用的是安卓设备，想实现类似上面<strong>以图片的形式分享内容</strong>的目的，可以考虑使用下面这款 App——<strong>魔法分享</strong>。</p><p>在 Google Play 中，这款应用的介绍是这样的：  </p><blockquote><p>在我们每天都使用的 App 和网站中有很多精彩的内容，它们大部分都承载在 Web 中。很多时候，我们如果只是单单分享一个 🔗Web 链接，还需要花很长时间向别人说明我们在分享什么内容。于是我制作了这个 App，让你能轻松地从 Web Link 中获取标题、描述和图片，以分享给朋友。</p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/20/16320978314213.jpg"></p><p>同样是以一条 Twiiter 动态为例，通过魔法分享 App 生成的分享图如下，除了附带动态的原始链接，还提供了二维码，方便你打开内容的原始链接，可以说很有国内特色了。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/20/16320976708806.jpg"></p><p>魔法分享 Google Play 下载链接：<br><em><a href="https://play.google.com/store/apps/details?id=net.atlassc.shinchven.sharemoments">https://play.google.com/store/apps/details?id=net.atlassc.shinchven.sharemoments</a></em>     </p><p>无法打开 Google Play 的朋友，可以通过下面这篇文章，查看另外的下载方法：  </p><p><a href="https://mp.weixin.qq.com/s/SfO62_GI6ETRI2vHisbfqw">手机电脑软件去哪下？看这篇文章就够了！</a>       </p><h2 id="免费领取「爱企查」年度会员"><a href="#免费领取「爱企查」年度会员" class="headerlink" title="免费领取「爱企查」年度会员"></a>免费领取「爱企查」年度会员</h2><p>相信很多人都听过或者用过「<strong>企查查</strong>」，一款用来了解<strong>不知名公司</strong>基础信息的工具，而<strong>爱企查</strong>也是百度推出的类似工具。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/20/16320990784293.jpg"></p><p>在使用这类工具时，我们可以看到企业的基础信息，比如创始人、投资关系，但对于一些我们更为关注的重要信息，譬如<strong>企业的风险信息</strong>，印象中企查查直是需要付费才能查看，而爱企查则是限制了每天查看的企业数量。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/20/16320995438163.jpg"></p><p>企查查的会员费也不便宜，为了一个不是很高频的需求而去开通会员，实在是没这个必要。</p><p>前几天在一个群里看到一个群友分享了「<strong>免费领取爱企查会员</strong>」的链接🔗，<strong>最多可免费领取 3 年会员</strong>。有需要的朋友，可以点击下方的卡片，在后台回复「<strong>爱企查</strong>」三个字，免费领取会员。   </p><h2 id="将微信聊天记录导出为-HTML-格式"><a href="#将微信聊天记录导出为-HTML-格式" class="headerlink" title="将微信聊天记录导出为 HTML 格式"></a>将微信聊天记录导出为 HTML 格式</h2><p>前几天还在吐槽微信占用手机太多内存了，昨天就在 Twitter 上看到一个将聊天记录导出为网页 HTML 格式的方法：  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/20/16321004977050.jpg"></p><p>在项目的 GitHub README 文档中，作者说明了导出的流程：</p><ul><li>先将 iPhone 的全部数据备份到 Mac 上。如果你使用的是 Windows 系统，这一步可通过 iTunes Windows 版本完成。</li><li>使用一款名为 iExplore 的软件，将备份数据中的 Documents 导出到本地系统。</li></ul><p>完成上面两步之后，就需要用到代码啦：</p><ul><li>克隆 GitHub 项目代码，或者将 GitHub 项目的所有代码下载到本地，下载后记得解压缩。   </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/20/16321009784761.jpg"></p><ul><li>编码音频解码器（这一步应该是为了后续导出微信聊天记录中的语音）。打开终端，输入 <code>cd silk/silk &amp;&amp; make &amp;&amp; cd ../../</code> 进入代码文件夹。</li><li>在终端中输入 <code>npm install</code> 安装相关的文件。运行这一步之前，请先确保你的电脑安装了 <code>Node.js</code>，安装了 <code>Node.js</code> 之后，才可以使用 npm 命令。   </li><li>最后一步，在终端中输入 <code>node index.js path_to/Documents/&#123;uid&#125; output_dir</code>，这里的 <code>path_to/Documents</code> 要更换为第 2 步导出的 Documents 文件所在的路径，uid 则是 <code>g3c3814a370neh4dr69uf9f889f6ea7a</code>。</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/20/16321006911184.jpg"></p><p>按照这个操作导出的 HTML 格式的聊天记录，在浏览器中打开的预览图如下：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/20/16321004562537.jpg"></p><p>目前支持导出文本、语音、图片、视频和系统消息，后续可能会支持导出 Emoji 和链接。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/20/16321019075220.jpg"></p><p>wechat-export GitHub 项目地址：<br><em><a href="https://github.com/luin/wechat-export">https://github.com/luin/wechat-export</a></em></p><p>说实话，这个将聊天记录导出为 HTML 的方法，操作起来还是非常麻烦的，不适合大多数人。</p><p>我还是期待传说中的「微信付费云存储」早日上线吧。。。不想折腾了，或者是换新手机来得更快。。。</p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">         </p>]]></content>
    
    
    
    <tags>
      
      <tag>微信</tag>
      
      <tag>Twitter</tag>
      
      <tag>数据备份</tag>
      
      <tag>网盘</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在网页中使用 icon 字体图标 | 前端开发</title>
    <link href="/2021/09/19/2021-9-19-frontend_icon/"/>
    <url>/2021/09/19/2021-9-19-frontend_icon/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/19/html5-wang-ye-gao-su-ni-30-zhong-bin-lin-mie-jue-d.png" alt="HTML5 网页告诉你 30 种濒临灭绝的物种  轻单"></p><p>最近在 B 站上看 Pink 老师的前端视频，简单总结一下在网页中使用 icon 图标的两种方法。   </p><h2 id="直接插入字体图标"><a href="#直接插入字体图标" class="headerlink" title="直接插入字体图标"></a>直接插入字体图标</h2><p>这里说的字体图标，是指既有普通 icon 图标的外观，又带有字体特征的图标，可以像调整字体那样、调整图标的大小和颜色，且图标放大之后不会失真变模糊。  </p><p>我们一般是从网上下载字体图标的，譬如国内的阿里巴巴旗下的矢量素材网站 <strong>iconfont</strong>、国外的 <strong>IcoMoon</strong> 等。 </p><p>去年写过一篇文章《<a href="https://mp.weixin.qq.com/s/yxQ4Rrx8r9An2dqreTkndA">微信小程序开发 | 如何在小程序中使用自定义 icon 图标</a>》，其中介绍了 iconfont 图标的使用，这回介绍一下使用来自 IcoMoon 的图标的方法。  </p><p>打开 IcoMoon 图标官网，从中挑选你想使用的 icon 图标，底部的 Selection 会统计你选中的图标数量，选好图标之后，点击右下角的 <strong>Generate Font</strong>，生成字体图标。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/19/1631932008295.png" alt="1631932008295"></p><p>在打开的页面，会显示我们刚才挑选的所有 icon 图标，并且提供图标的 unicode 编码，这些编码等下要用到，但现在先不管。点击右下角的 <strong>Download</strong>，下载生成的字体图标文件。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/19/1631932359827.png" alt="1631932359827"></p><p>IcoMoon 图标下载：<br><em><a href="https://icomoon.io/app/#/select">https://icomoon.io/app/#/select</a></em></p><p>解压下载的压缩文件，其中包含下面这些文件，我们需要用到其中的 fonts 文件夹。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/19/image20210918214014532.png" alt="image-20210918214014532"></p><p>fonts 文件中包含了 4 个字体文件，这是因为不同浏览器所支持的字体格式是不一样的，考虑到兼容性，fonts 文件夹就包含了主流浏览器支持的字体文件：  </p><ul><li>TrueType 字体(.ttf)：是 Windows 和 Mac 最常见的字体</li><li>Web Open Font Format 字体(.woff)：支持的浏览器有 IE 9+、Firefox 3.5+、Chrome 6+、Safari 3.6+、Opera 11.1+</li><li>Embedded Open Type 字体(.eot)：是 IE 专用的字体，支持的浏览器有 IE 4+     </li><li>SVG 字体(.svg)：是基于 SVG 字体渲染的一种格式，支持的浏览器有 Chrome 4+、Safari 3.1+、Opera 10.0+、iOS Mobile Safari 3.2+</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/19/image20210918215027965.png" alt="image-20210918215027965"></p><p>将 fonts 文件夹复制到网页的项目文件夹📂中，譬如放在与  <code>index.html</code> 文件同级的路径下。 </p><p>打开 HTML 文件，在 <strong>style 标签</strong>中粘贴下方的代码，定义我们等下需要用到的字体 icomoon。需要注意的是，如果 fonts 文件与 html 文件在同个路径下，就不需要修改下方代码中的 url 地址。</p><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">style</span>&gt;  <span class="hljs-keyword">@font-face</span> &#123;              <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;icomoon&#x27;</span>;              <span class="hljs-attribute">src</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;fonts/icomoon.eot?bawtoo&#x27;</span>);              <span class="hljs-attribute">src</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;fonts/icomoon.eot?bawtoo#iefix&#x27;</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;embedded-opentype&#x27;</span>),                  <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;fonts/icomoon.ttf?bawtoo&#x27;</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;truetype&#x27;</span>),                  <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;fonts/icomoon.woff?bawtoo&#x27;</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;woff&#x27;</span>),                  <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;fonts/icomoon.svg?bawtoo#icomoon&#x27;</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;svg&#x27;</span>);              <span class="hljs-attribute">font-weight</span>: normal;              <span class="hljs-attribute">font-style</span>: normal;              <span class="hljs-attribute">font-display</span>: block;          &#125;&lt;/style&gt;</code></pre><p>粘贴代码之后，先来看一下我们最终想要实现的效果，如下图，下方的红色爱心❤️图标，就是前面说到的字体图标。根据最终想要实现的效果，我们要去到 html 文件中书写相应的代码。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/19/image20210918225727566.png" alt="image-20210918225727566"></p><p>在 html 文件的 <strong>body 标签</strong>中输入下方的一行代码，中间的 <strong>span 标签</strong>包含的<strong>方块 </strong>，其实就是爱心图标，只不过它无法在 html 文件中正常显示。</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我 <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> 你<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre><p>这个方块  也不是随意输入的，还得从我们前面下载的压缩文件夹中的 <code>demo.html</code> 查看。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/19/image20210918232918454.png" alt="image-20210918232918454"></p><p>在浏览器中打开 <code>demo.html</code> ，移动到爱心图标右下角的区域，框选有时看得到、有时看不到的<strong>方块字符 </strong>，复制到剪贴板，接着粘贴到 html 文件中。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/19/image20210918233454678.png" alt="image-20210918233454678"></p><p>将方块字符粘贴到 html 中，如果此时在浏览器中预览网页效果的话，还是无法看到刚添加的字体图标的，因为还缺少对字体图标设置 CSS 样式——<strong>声明字体图标所使用的字体</strong>。 </p><p>html：</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>  我<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>你<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre><p>css：</p><pre><code class="hljs css"><span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">span</span> &#123;<span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;icomoon&#x27;</span>;&#125;</code></pre><p>此时在浏览器中重新打开 html 文件，我们所使用的字体图标就会正常显示了。</p><p>如果你还想调整字体图标的<strong>大小</strong>和<strong>颜色</strong>，可以在 CSS 中增加另外两个属性：<strong>font-size</strong> 和 <strong>color</strong>。</p><p>css：</p><pre><code class="hljs css"><span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">span</span> &#123;  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;icomoon&#x27;</span>;  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">50px</span>;  <span class="hljs-attribute">color</span>: red;&#125;</code></pre><p>一番设置之后，重新在浏览器中刷新页面，就可以看到最终的效果啦。</p><h2 id="通过伪类选择器使用字体图标"><a href="#通过伪类选择器使用字体图标" class="headerlink" title="通过伪类选择器使用字体图标"></a>通过伪类选择器使用字体图标</h2><p>前面介绍的第一种方法，需要同时在 body 标签(html) 和 style 标签(css) 中同时书写相关的代码，如果我们想让 html 文件的结构更加简单，我们可以通过第二种方法——在  style 标签(css) 中通过<strong>伪类选择器</strong>使用字体图标，这样就只需要在 style 标签或 css 文件中书写相关的代码。  </p><p>先来看一下我们最终想要实现的效果，如下图所示，给输入框的右侧添加一个<strong>向下的小三角🔽图标</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/19/image20210919001244754.png" alt="image-20210919001244754"></p><p>想制作这个效果，同样是先从前面介绍的 IcoMoon 网站下载字体图标，将解压后的文件中的 fonts 文件夹放到与 <code>index.html</code> 同级的路径下，接着在 html 的 <strong>style 标签</strong>中粘贴下方的代码：</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">  <span class="hljs-keyword">@font-face</span> &#123;</span>              font-family: &#x27;icomoon&#x27;;              src: url(&#x27;fonts/icomoon.eot?bawtoo&#x27;);              src: url(&#x27;fonts/icomoon.eot?bawtoo#iefix&#x27;) format(&#x27;embedded-opentype&#x27;),                  url(&#x27;fonts/icomoon.ttf?bawtoo&#x27;) format(&#x27;truetype&#x27;),                  url(&#x27;fonts/icomoon.woff?bawtoo&#x27;) format(&#x27;woff&#x27;),                  url(&#x27;fonts/icomoon.svg?bawtoo#icomoon&#x27;) format(&#x27;svg&#x27;);              font-weight: normal;              font-style: normal;              font-display: block;          &#125;<span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></code></pre><p>在 html 的 <strong>body 标签</strong>中插入一个空白的盒子 div 标签：</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></code></pre><p>接着在 style 标签中，给 div 盒子设置宽度、高度，并给它设置一个粗细为 1 px 的黑色边框：</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span>  div &#123;    width: 200px;    height: 40px;    border: 1px solid gray;  &#125;<span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></code></pre><p>此时在浏览器中打开 html 文件，就可以看到下图所示的孤零零的输入框。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/19/image20210919002544501.png" alt="image-20210919002544501"></p><p>接着继续给这个输入框「添砖加瓦」——添加一个向下的小三角🔽，继续在 style 标签中书写代码：</p><pre><code class="hljs html">div::after &#123;content: &#x27;&#x27;;font-family: &#x27;icomoon&#x27;;&#125;</code></pre><p>稍微解释一下这个代码，在 div 后面加上<strong>两个英文中的冒号</strong>，并且跟上单词 <strong>after 或者 before</strong>，就是所谓的<strong>伪类选择器</strong>，在我目前的认知范围内，<strong>伪类选择器就是用 css 代码来给 html 页面添加额外的元素</strong>，我们也确实可以在网页中看到添加的小三角，如下图。但这段代码是写在 css 而非 html 文件中，一定程度上可以简化 html 文件的代码。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/19/image20210919003524108.png" alt="image-20210919003524108"></p><p>到这里，我们就顺利地在 html 页面中添加了字体图标，值得一提的是，伪类选择器中 <strong>content 属性</strong>的值，除了可以是字体图标对应的<strong>方块字符</strong>，还可以是<strong>字体图标下方的编号</strong>。</p><p>以下图为例，爱心图标的编号是 e9da，因此 content 属性的值也可以是 <code>\e9da</code> ，通过编号来调用字体图标的时候，需要在编号的最前面加多一个反斜杆 \ 。</p><pre><code class="hljs html">div::after &#123;content: &#x27;\e9da&#x27;;font-family: &#x27;icomoon&#x27;;&#125;</code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/19/image20210919003833891.png" alt="image-20210919003833891"></p><p>引入字体图标之后，字体图标默认位于输入框的左上角，为了将字体图标移动到右侧居中的位置，这里还需要用到另外的知识——<strong>定位</strong>，包含<strong>相对定位</strong>和<strong>绝对定位</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/19/image20210919003524108.png" alt="image-20210919003524108"></p><p>关于定位的知识，这里暂时就不过多展开了，可以记住一个口诀「<strong>子绝父相</strong>」，即子元素设置绝对定位，父元素设置相对定位，就可以达到<strong>自由移动下拉小三角位置</strong>的目的。</p><p>分别给 div 和伪元素选择器 div::after 添加另外的样式：</p><pre><code class="hljs html">div &#123;position: relative;&#125;</code></pre><pre><code class="hljs html">div::after &#123;position: absolute;top: 12px;right: 10px;&#125;</code></pre><p>这里的 top 和 right 属性的值，并不是唯一的，需要根据实际情况，配合浏览器的开发者工具进行调整，最终得到看起来比较舒适的值（主要就是调整到小三角可以位于输入框水平居中的位置），最终效果如下。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/19/image20210919001244754.png" alt="image-20210919001244754"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>icon</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>给个人博客首页添加 GitHub 图标</title>
    <link href="/2021/09/11/2021-9-11-bloggithub/"/>
    <url>/2021/09/11/2021-9-11-bloggithub/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>去年 10 月份我写了一篇搭建 Hexo 博客的文章《<a href="https://mp.weixin.qq.com/s/_izXrRi6eLav8NfLRaD6Mg">我终于拥有自己的独立博客了</a>》，时间很快，将近一年，连搭建博客用到的「腾讯云」这阵子都一直在提醒我：该给你的网站域名和服务器续费了。        </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/11/16313333655408.jpg"></p><p>有了公众号，为啥还要多去折腾一个博客呢？   </p><p>我之前的想法是，希望在数字世界能有一个相对比较独立的家，任凭其他平台如何变化，眼看它们<strong>起高楼、宴宾客、见楼塌</strong>，我的博客还是我的，至少我的博客数据在本地和 GitHub 上各自有一个备份。   </p><p>除了这个，前两天还看到播客节目「捕蛇者说」的主理人 @laike9m 在他的博客文章《<a href="https://laike9m.com/blog/people-die-but-long-live-github,122/">People Die, but Long Live GitHub</a>》中，他提出了一个问题：</p><blockquote><p><strong>如果你希望存储一段信息，让 100 年后的人也能访问，要怎么做？</strong>  </p></blockquote><p>他认为现有的大部分网络服务都不靠谱，连提供这些服务的公司，会不会在接下来的 100 年中消失了，也是个未知数。   </p><p>思来想去之后，他认为<strong>只有 GitHub 是比较靠谱的</strong>，原因是未来世界依旧是离不开<strong>开源</strong>的，开源拥有无穷的魅力和力量，正是因为有许多热心的人选择将自己做的项目开源出来，我们得以站在前人的肩膀上，站得更高、看得更远。             </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/11/16313340996566.jpg"></p><p>想要完整阅读这篇文章《People Die, but Long Live GitHub》，可以扫描下方的二维码：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/11/qrcodea--a1.png" alt="QRcode_A — a1"><br>如果你有一点小追求或者小念想，希望自己公开分享出来的东西，在 100 年后还有机会被别人看到，真的，我推荐你将它们存放到 GitHub 上。  </p><p>关于如何使用 GitHub 来写博客，之前写过了两篇文章，感谢的可以戳下方的链接：   </p><p><a href="https://mp.weixin.qq.com/s/rvcADfzfjFoZlKlHEhKZ6w">使用 GitHub Issues 来写博客</a><br><a href="https://mp.weixin.qq.com/s/cRqTBEfHTmt0TvxCP7PjjA">可能是最最最最简单的搭建博客方法</a>                </p><h2 id="给博客首页添加-GitHub-图标"><a href="#给博客首页添加-GitHub-图标" class="headerlink" title="给博客首页添加 GitHub 图标"></a>给博客首页添加 GitHub 图标</h2><p>不少个人博客或者网站，都会在网站首页的右上角添加一个<strong>如下图的 GitHub 图标</strong>，点击图标可以跳转到 GitHub 主页或者博客所在的仓库。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/11/16313351234309.jpg"></p><p>如果你也想要给自己的博客添加类似的图标，可以参考下面的方法：   </p><p>首先打开网站 GitHub Corners，这个网站专门提供了不同样式的 GitHub 图标，左侧是 GitHub 图标的效果图，右侧是画出图标以及给图标添加动效的代码。    </p><p>从中选择一个你喜欢的 GitHub 图标样式，复制右侧的代码。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/11/16313537087838.jpg"></p><p>GitHub Corners 地址：<br><em><a href="https://tholman.com/github-corners/">https://tholman.com/github-corners/</a></em></p><p>接着打开博客项目的<strong>主题</strong>文件夹，这里以我搭建的 Hexo 博客为例，我所使用的 Hexo 主题是 <strong>Fluid</strong>。</p><p>沿着 Fluid &gt;&gt; layout 路径，打开 <code>layout.ejs</code> 文件。需要注意的是，如果你用的是其他 Hexo 主题，<code>layout</code>文件的后缀可能与这里的 ejs 是不一样的。  </p><p>打开 layout 文件之后，可以搜索 <code>&lt;/header&gt;</code> 导航栏标签，在 <code>&lt;/header&gt;</code> 上面一行，粘贴我们刚刚复制的代码。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/11/16313542645249.jpg"></p><p>接着还要对粘贴的代码进行修改，将最前面的 <strong>href</strong> 属性值更给为自己的 GitHub 个人主页链接🔗或者博客仓库的地址。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/11/16313545431851.jpg"></p><p>修改好文件之后，将本地作出的修改 push 到远端的仓库或服务器，应该就可以看到，博客首页右上角新增了一个 GitHub 图标。   </p><p>但我昨天在测试的时候，还遇到了另外一个问题，添加的 GitHub 图标被左侧的透明导航栏覆盖掉了，如下图所示，导致 GitHub 图标可以点击的区域变得很小，非常影响用户体验。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/11/16313546411434.jpg"></p><p>后来咨询了一位网友 @无声，他通过浏览器的调试工具「开发者工具」，帮我找到了原因：</p><p>我使用的 Fluid 主题中，导航栏的层级 <strong>z-index</strong> 属性值为 1030，而我从 GitHub Corners 网站复制的 GitHub 图标没有设置 z-index 属性，默认为 0，即导航栏的层级比 GitHub 图标高出很多，因此 GitHub 图标就被导航栏覆盖掉了。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/11/16313553489489.jpg"></p><p>解决这个问题的方法是，给我们从 GitHub Corners 网站复制的代码添加额外的一小段代码：  </p><p>在代码中定位到 <code>position: absolute;</code> 的位置，在它的末尾添加 <code>z-index: 1031;</code>，这里的数值只要比默认的 1030 大一点的<strong>整数</strong>即可。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/11/16313556349126.jpg"></p><p>修改之后保存，再次将代码 push 到远端，刷新博客首页，刚遇到的问题就被解决了。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/11/16313558318142.jpg"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">                  </p>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Notion 使用技巧 | Notion 中文版在路上了</title>
    <link href="/2021/09/10/2021-9-10-notiontips/"/>
    <url>/2021/09/10/2021-9-10-notiontips/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于公众号「<a href="https://mp.weixin.qq.com/s/2jafiG79PYM6BvRct0WpHA">效率工具指南</a>」<br>文/彭宏豪</p><p>各位晚上好。</p><p>好久没写笔记软件 Notion 相关的东西了，今天更新一篇小文章，不求长，只希望对你有帮助。   </p><h2 id="Notion-中文版灰度测试中"><a href="#Notion-中文版灰度测试中" class="headerlink" title="Notion 中文版灰度测试中"></a>Notion 中文版灰度测试中</h2><p>首先带来一个好消息，上个月在 Twitter 上看到 Notion 中文社区的负责人 @Linmi 发布了一条动态：Notion 开始灰度测试<strong>简体中文</strong>了。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/10/16312735898635.jpg"></p><p>可能因为他是 Notion 的活跃用户，优先获得了中文版的测试权限。</p><p>直到今天，我还是没有被灰度到（中文版），不过这其实也并不影响使用。   </p><p>想要查看自己是否获得了 Notion 中文版的测试权限？</p><p>路径如下：Setting &amp; Members &gt;&gt; Language &amp; region &gt;&gt; Language。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/10/16312746329920.jpg"></p><h2 id="在页面正文中快速插入-emoji"><a href="#在页面正文中快速插入-emoji" class="headerlink" title="在页面正文中快速插入 emoji"></a>在页面正文中快速插入 emoji</h2><p>在不同系统的电脑上，我们可以通过系统自带的输入法快速插入 emoji——</p><p>Windows 电脑：Win + 英文的句号<br>Mac 电脑：Ctrl + Command + 空格    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/10/16312750102150.jpg" alt="Mac 输入法自带的 emoji"></p><p>除此之外，在 Notion Page 页面的正文中，我们还可以通过另外一种方法快速插入 emoji。  </p><p>先输入<strong>英文的冒号</strong>，在输入一个与 emoji 相关的英文，例如 love，就能呼出 Notion 中自带的 emoji 表情了。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/10/16312752096179.jpg"></p><h2 id="插入同步区块"><a href="#插入同步区块" class="headerlink" title="插入同步区块"></a>插入同步区块</h2><p>这是我在 B 站上看了一个视频《新功能！超多玩法的「Synced Block 全局同步区块」 | Notion 使用教程与教学》才学到的新技巧，视频来自 B 站 Up 主 @方俊皓同学，感兴趣的可以扫描下方的二维码观看视频：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/10/qrcodea--a1.png" alt="QRcode_A — a1"></p><p>同步区块，是指一个可以在多个页面中共享的内容区块，在任意一个页面中对同步区块进行修改，它会将我们作出的修改自动同步到多个页面。</p><p>简言之，同步区块的意义在于：只投入一份劳动时间的产出，就可以同时影响到多个页面，替代了以往的重复劳动。从这个角度而言，它有点像是我们在网上的公开分享，一次写作，可以影响到多个人，ROI 很高。            </p><p>插入同步区块的方法也非常简单，输入<strong>斜杠 /</strong> 呼出命令面板，再输入 sync，就可以看到同步区块 Synced block。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/10/16312753135435.jpg"></p><p>插入的同步区块，外观呈现为一个<strong>输入框</strong>，我们可以往同步区块中插入新的内容区块，简称<strong>套娃</strong>。 </p><p>譬如在同步区块中，输入<strong>斜杠 /H</strong>，为文本内容标题样式。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/10/16312758724418.jpg"></p><p>前面提到的方俊皓同学的视频，给我们的同步区块提供了一个使用场景——<strong>自制 Notion 页面导航栏</strong>，效果如下图所示。  </p><p>我们可能会在一个 Notion 页面中添加多个<strong>子页面</strong>，没有自制的导航栏的情况下，我们只能通过左侧栏来实现页面的跳转。  </p><p>自制导航栏之后，我们就<strong>多了一个在多个页面间跳转的方式</strong>：点击顶部的 emoji 图标，就可以快速跳转到相应的页面，使用起来非常不错。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/10/16312762019206.jpg"></p><p>因为是同步区块，<strong>这个导航栏也会出现在其他子页面的顶部</strong>，点击子页面顶部的小图标，同样可以跳转到其他任意页面。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/10/16312765042256.jpg"></p><p>看到这里，如果你想到了同步区块更多好玩、高能的用法，欢迎在底部的评论区留言。     </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">              </p>]]></content>
    
    
    
    <tags>
      
      <tag>Notion</tag>
      
      <tag>使用技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在 GitHub 个人主页展示今年的时间进度</title>
    <link href="/2021/09/09/2021-9-9-githubprofile/"/>
    <url>/2021/09/09/2021-9-9-githubprofile/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于公众号「效率工具指南」<br>文/彭宏豪   </p><p>今天给大家介绍一个稍微有点意思的小玩意——在 GitHub 个人主页显示今年的时间进度，大概效果如下图所示：   </p><p>今年的时间进度为 68.77%      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/09/16311485821541.jpg"></p><p>值得一提的是，这个时间进度条用到了 GitHub 的 Actions 功能，<strong>每隔 6 个小时会自动更新时间进度</strong>，它就像是个自动报时的<strong>机器人</strong>，全程无需人工干预。    </p><p>下面简单讲一下实现的方法，有 GitHub 账号、且有兴趣的朋友，可以跟着操作一下：   </p><p>先<strong>创建一个和你的 GitHub ID 同名的 GitHub 仓库</strong>，例如我的 GitHub ID 是 phh95，创建的仓库名就为 phh95。  </p><p>创建的同名仓库，它是一个特殊的仓库，会显示在 GitHub 个人主页的顶部。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/09/16311496978928.jpg"></p><p>如果你之前创建了同名的仓库，这里就不需要再创建了。  </p><p>我们需要在同名仓库中添加两个文件，一个是实现自动更新时间进度条的 <strong>workflows</strong> 文件，一个是设置生成的进度条样式的 <code>index.js</code> 文件。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/09/16311636796285.jpg"></p><p>点击仓库右上角的 Add file 按钮，选择 Create new file 创建一个新文件。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/09/16311637035972.jpg"></p><p>首先对新创建的文件进行命名，输入 <code>.github/workflows/main.yml</code>，文件名就包含了文件所在的路径。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/09/16311639061546.jpg"></p><p>接着在 yml 文件中添加如下的代码，</p><pre><code class="hljs"><span class="hljs-attribute">name</span>: Progress Bar CI<span class="hljs-attribute">on:</span>  workflow_dispatch:  schedule:    - cron: &#x27;0 */6 * * *&#x27;<span class="hljs-attribute">jobs:</span>  build:    runs-on: ubuntu-latest    steps:    - uses: actions/checkout@v2    - name: Use Node.js      uses: actions/setup-node@v1      with:        node-version: &#x27;14.x&#x27;    - name: Update README.md      run: node index.js &gt; README.md    - name: Commit change &amp; Push      run: |          git config user.name &#x27;github-actions[bot]&#x27;          git config user.email &#x27;602646761+github-actions[bot]@users.noreply.github.com&#x27;          git commit -am &quot;bot: update README.md automatically&quot;          git push</code></pre><p>其中要将第 24 行代码中的邮箱前缀 <code>602646761</code> 更换为你自己的 GitHub 邮箱前缀。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/09/16311641702282.jpg"></p><p>接着在仓库中创建另外一个文件，文件名为 <code>index.js</code>。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/09/16311642870095.jpg"></p><p>在文件中粘贴下方的代码：  </p><pre><code>const thisYear = new Date().getFullYear()const startTimeOfThisYear = new Date(`$&#123;thisYear&#125;-01-01T00:00:00+00:00`).getTime()const endTimeOfThisYear = new Date(`$&#123;thisYear&#125;-12-31T23:59:59+00:00`).getTime()const progressOfThisYear = (Date.now() - startTimeOfThisYear) / (endTimeOfThisYear - startTimeOfThisYear)const progressBarOfThisYear = generateProgressBar()function generateProgressBar() &#123;    const progressBarCapacity = 30    const passedProgressBarIndex = parseInt(progressOfThisYear * progressBarCapacity)    const progressBar =      &#39;█&#39;.repeat(passedProgressBarIndex) +      &#39;▁&#39;.repeat(progressBarCapacity - passedProgressBarIndex)    return `&#123; $&#123;progressBar&#125; &#125;`&#125;const readme = `\### Hi there 👋⏳ Year progress $&#123;progressBarOfThisYear&#125; $&#123;(progressOfThisYear * 100).toFixed(2)&#125; %---⏰ Updated on $&#123;new Date().toUTCString()&#125;---</code></pre><p>在仓库中创建了这两个文件之后，你应该就可以在你的 GitHub Profile 页面看到今年的时间进度条了。    </p><p>需要说明的是，这里用到的两段代码都不是我写的，这些代码来自 GitHub 上的一位用户 @liununu，作者的 GitHub 主页戳这里👉👉：<em><a href="https://github.com/liununu">https://github.com/liununu</a></em>     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/09/16311645337397.jpg"></p><p>除了本文介绍的「时间进度条」，你还可以在 GitHub 个人主页添加其他的小部件，例如<strong>你常用的编程语言、提交次数的统计</strong>以及<strong>你在使用的生产力工具</strong>，详情可以参考我之前写的一篇文章：  </p><p><a href="https://mp.weixin.qq.com/s/kYx3Txa3mMzpmY8fAj5UkQ">如何美化 GitHub 个人主页？</a>     </p><h2 id="一起捐赠一本书"><a href="#一起捐赠一本书" class="headerlink" title="一起捐赠一本书"></a>一起捐赠一本书</h2><p>今天是 9 月 9 日，其实也是一个普通的日子，但从 2015 年起，腾讯联合了国内多个公益组织发起一场名为「99公益日」的活动。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/09/16311646670237.jpg"></p><p>我是从这两年才开始关注这个活动的，可以看到腾讯在公益上做的一些努力，思考如何让公益与自己的产品、拥有的海量用户结合起来，在产品侧也做了不少有意思的活动，比如今年的<strong>一起组队、向贫困山区的孩子捐赠一本书</strong>，每位用户捐赠 3 元，微信支付会随机配捐一定的金额，把平常我们在一些电商 App 看到的「帮砍一刀」、组团优惠的手法，化用到了公益产品上，我觉得这种微创新非常有意义。  </p><p>我昨天发起了一个一起捐书的组队，目前还差一位朋友就能捐出一本书，少喝一瓶肥宅快乐水，就能给山区的孩子捐赠一本书，有意向的朋友可以扫码加入我的队伍，做一点点小事，<strong>涓涓细流，汇成大海</strong>。      </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/09/img0178.PNG" alt="IMG_0178"></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">            </p>]]></content>
    
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>公益</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新生命来到世界之后</title>
    <link href="/2021/09/06/2021-9-6-visit/"/>
    <url>/2021/09/06/2021-9-6-visit/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于「效率工具指南」<br>文/彭宏豪                </p><p>昨天和一位朋友，去了我们共同认识的一个朋友家里，她前不久生了一个小宝宝，目前在家修产假，正好遇上周末，就去她家看看她的小宝宝。   </p><p>从我为数不多的生活经历出发，在我老家那边，去看别人家的新生儿，不能空手而去，总要带点东西，从我妈那了解到的，普通人家可能都会带上一个<strong>猪肚</strong>。</p><p>为啥是猪肚呢？我能想到的唯一原因是，中医中主张的<strong>以形补形</strong>。   </p><p>而换到了广州，要去拜访的朋友也不是潮汕人，我就有点不知所措了，问了下认识的人，他们给的建议有：  </p><ul><li>带尿片（纸尿裤），第一次听说可以送这个东西的哈哈哈哈    </li><li>布材质的识字玩具，例如下图的「布书」    </li><li>带牛奶</li><li>带水果</li><li>带红包     </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/06/zao-jiao-wan-ju.jpg" alt="早教玩具"></p><p>去到这位朋友家里，最大的变化，大家应该都懂的，以前据说是吃不胖的她，依旧免不了发福，当事人自称变得「妈味十足」，上街买衣服，不太容易找到适合自己的尺码。    </p><p>她家里添置了一个专门用来给宝宝的奶瓶、奶嘴消毒的机器，在我印象中，以前消毒没有这么讲究，图省事的话，用热水烫一下，就像是广东人在外面吃饭之前都要的 lǒng碗（洗碗），最多也是把奶瓶放进锅里，冷水煮沸泡一下。  </p><p>时代变了。   </p><p>还有一个体会是，她好像是一瞬间就学会当妈妈了，看她娴熟的抱孩子的手势，不像我试着抱一下宝宝时两手僵硬；她还懂了好多家里有娃的注意事项：  </p><ul><li>音乐玩具装完电池之后，需要用螺丝刀拧上后盖，预防宝宝在玩的时候把电池拆出来      </li><li>把小螺丝刀收纳到抽屉里，放在宝宝够不着的位置   </li><li>在网上买玩具时，会注意玩具是否和宝宝的年龄相适应，买的玩具可以适当超龄</li><li>宝宝被蚊子叮了，因为还比较小，还不适合涂抹药膏       </li></ul><p>看似很多她一来就知道的育儿要点，可能在之前就做了不少功课。       </p><p>可能是 30+ 才生孩子的缘故，她给同去的女性朋友 S 提了一个建议：早点生孩子好一点。   </p><p>有了孩子之后，原先的生活可能会变成一切「以孩子为中心」，聊天的过程中，S 也举出了自己身边的朋友的经历：  </p><blockquote><p>逛街之前，要先解决一个问题：谁能在家带孩子？  </p><p>出门逛街如果带上孩子，就要额外带上一些东西：保温杯、奶粉、尿片、玩具。  </p><p>吃饭的时候，要挑选带有儿童座椅的餐厅，有时为了图方便，会优先选择海底捞，毕竟别人服务到位。   </p></blockquote><p>S 的观点是，还没考虑生娃的事情，现阶段还是希望把更多的时间留给自己，有了娃之后，很多原本可以自由去浪、旅游的时间，都要放到宝宝身上了。  </p><h2 id="重返职场"><a href="#重返职场" class="headerlink" title="重返职场"></a>重返职场</h2><p>这位朋友坦言，其实她还是希望早点回去工作的，看到工作群或者朋友圈里同事的动态，多少会觉得有点焦虑。  </p><p>我觉得这是一段挺好的职业「修养期」，连续做了很多年的工作，难得有一段时间闲下来，多陪陪自己刚出生的宝宝👶🏻，毕竟接下来还要继续工作好多年呢。。。  </p><p>提前退休？别想太多啦，这辈子是不可能提前退休的。       </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">            </p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
      <tag>育儿</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用了这台新电脑 1 年，终于可以说自己入门了 | Mac</title>
    <link href="/2021/09/01/2021-9-1-mactips/"/>
    <url>/2021/09/01/2021-9-1-mactips/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于「效率工具指南」<br>文/彭宏豪      </p><p>​从去年买入第一台苹果电脑 iMac，到现在已经有 1 年了，用到现在，整体上它还是非常令我满意的，表现在：</p><ul><li>超大的屏幕尺寸，27 寸</li><li>非常清晰的屏幕，5K 分辨率</li><li>放大音量听歌很带劲，省了买音响的钱</li><li>一年下来，卡机的情况不超过 10 次</li><li>没有遇到过类似 Windows 上蓝屏的故障</li><li>再也没有遇到弹窗广告</li></ul><p>因为是新的系统，在操作方面还是有不少需要重新学习和适应的地方，也因为这样，每次遇到自己不懂的地方，或者参考过去使用 Windows 电脑的经历，会去网上找找看，有没有让 macOS 系统恢复原本的操作习惯的方法。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/01/16304917746549.jpg"></p><h2 id="点击-Dock-栏图标隐藏窗口"><a href="#点击-Dock-栏图标隐藏窗口" class="headerlink" title="点击 Dock 栏图标隐藏窗口"></a>点击 Dock 栏图标隐藏窗口</h2><p>在 Windows 系统上，我们已经习惯了点击任务栏的软件图标、隐藏软件窗口的操作。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/01/windows.png" alt="windows"></p><p>而换到 Mac 上，在打开软件的情况下，点击 Dock 栏的软件图标，并不能隐藏当前打开的软件窗口。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/01/16304509350265.jpg"></p><p>每次想隐藏软件窗口，要么点击窗口左上角的最小化按钮，要么使用快捷键 <strong>Command + H/D</strong>，但这两种方法我觉得用起来还是比较麻烦。</p><p>原以为在 Mac 上实现 Windows 系统点击任务栏的软件图标、隐藏软件窗口的操作，需要借助第三方软件，后来发现系统自带了这个功能：只需要在点击 Dock 图标的同时，<strong>按下 Option 键</strong>，就可以隐藏当前打开的窗口了。     </p><h2 id="强制退出未响应的应用"><a href="#强制退出未响应的应用" class="headerlink" title="强制退出未响应的应用"></a>强制退出未响应的应用</h2><p>使用 Windows 的过程中，遇到软件卡住未响应的情况，应该可以说是家常便饭了。每次遇到软件未响应，我都会使用 <strong>Ctrl + Alt + Del</strong> 打开任务管理器，强制关闭未响应的应用。</p><p>在 Mac 上，苹果同样提供了类似任务管理器的工具——<strong>活动监视器</strong>，它可以查看所有软件运行占用的内存，以及强制关闭未响应的软件。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/01/16304517733245.jpg"></p><p>除了使用活动监视器，这里还有另外一种快速关闭未响应的方法：右击 Dock 栏的软件图标，弹出的菜单最底部的选项默认是「退出」，此时按住 Option 键，「退出」就会变成「强制退出」。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/01/16304526050683.jpg"></p><h2 id="远程控制电脑"><a href="#远程控制电脑" class="headerlink" title="远程控制电脑"></a>远程控制电脑</h2><p>Windows 上的 QQ 有一个<strong>远程控制他人电脑</strong>的功能，这个功能有挺多使用场景的，譬如：</p><ul><li>去年在家办公期间，远程控制公司的电脑</li><li>远程帮助朋友或网友解决他们无法解决的问题</li></ul><p>比较遗憾的是，Mac 上的 QQ 缺少了这个功能，只有<strong>屏幕分享</strong>而没有屏幕控制。</p><p>值得一提的是，即便 Windows 版本的 QQ 有远程控制的功能，如果它想控制的是一台 Mac，使用 Mac 的人也是无法接收到对方「请求控制电脑」的消息的。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/01/16304910849324.jpg"></p><p>如果你需要在 Mac 上使用远程控制功能，可以考虑使用一些第三方软件，例如<strong>向日葵</strong>、<strong>RustDesk</strong>。</p><h2 id="隐藏桌面的所有文件"><a href="#隐藏桌面的所有文件" class="headerlink" title="隐藏桌面的所有文件"></a>隐藏桌面的所有文件</h2><p>不像 Windows 系统，通过在桌面空白处右击，选择「隐藏桌面图标」，就可以快速隐藏桌面的所有文件。  </p><p>macOS 系统虽然也提供了隐藏桌面文件的方法，但操作起来比较麻烦，需要用到「终端 + 命令行」。</p><p>如果你想比较方便地隐藏 Mac 桌面的文件，可以考虑使用下面这两个软件——<strong>FreeMyDesktop</strong> 或 <strong>One Switch</strong>。</p><p>FreeMyDesktop，是一个专门用来隐藏 Mac 桌面文件的小工具，软件免费。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/01/16186236678693.jpg" alt="-w320"></p><p>安装之后，点击顶部状态栏的软件图标，选择「Hide the desktop」，就可以一键隐藏桌面图标啦。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/01/16186237635317.jpg" alt="-w301"></p><p>想要用到 FreeMyDesktop 的朋友，可以点击下方的备用链接下载：</p><p><em><a href="https://wwx.lanzoui.com/i6qeBo7d4kd">https://wwx.lanzoui.com/i6qeBo7d4kd</a></em>     </p><p>另外一款软件 <strong>One Switch</strong>，同样可以隐藏桌面的所有文件，运行软件之后，在顶部的状态栏会增加一个开关的小图标。</p><p>点击图标，在下方打开的面板，启用第一个「<strong>隐藏桌面</strong>」，就可以隐藏桌面的所有文件了。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/01/16304924230311.jpg"></p><p>相比前面介绍的 FreeMyDesktop，One Switch 可以做的事情更多，它将一些常用功能的开启或关闭按钮集中放到了一个面板上，例如：  </p><ul><li>切换深色/浅色模式</li><li>设定屏幕常亮的时长   </li><li>打开屏幕保护程序（这个也可以通过系统自带的「<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649896506&idx=1&sn=04cfdcdf560f041bc0ca45a4690b9146&chksm=83a83217b4dfbb01a75de87c17e316514ab34907d86f26143fa85a3235be2e3cc49eeb55f6e2&token=1635790439&lang=zh_CN#rd">触发角</a>」功能来实现）</li><li>打开夜览</li><li>显示电脑默认被隐藏的文件   </li></ul><p>One Switch 是一款收费软件，单设备价格为 30 元，5 台设备价格为 99 元，有需要的朋友可以前往官网购买：</p><p><em><a href="https://fireball.studio/oneswitch">https://fireball.studio/oneswitch</a></em>   </p><h2 id="切换窗口时预览窗口内容"><a href="#切换窗口时预览窗口内容" class="headerlink" title="切换窗口时预览窗口内容"></a>切换窗口时预览窗口内容</h2><p>在 Win10 系统上，使用 Win + Tab 或者 Alt + Tab 这两个快捷键，可以从一个窗口切换到另外一个软件窗口，而且它还提供了软件窗口的缩略图和标签页名称，它让我们可以更准确地切换到我们想去的窗口。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/01/windows-chuang-kou-qie-huan.png" alt="Windows 窗口切换"></p><p>在 Mac 上，其实也有类似的功能，在触控板上<strong>四指上滑</strong>，可以打开下图的「<strong>调度中心</strong>」，顶部可用于切换不同的桌面，中间则是你打开的所有软件窗口的缩略图，点击缩略图就可以切换到对应的软件。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/01/16304960543015.jpg"></p><p>如果你不喜欢这种窗口缩略图大小不一致的布局，可以考虑使用一款第三方的软件——AltTab，使用快捷键 Option + Tab 可以呼出 AltTab 切换软件窗口的面板，同样提供了预览视图，视图效果就比较像是 Windows 上的设计。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/09/01/16304971627851.jpg"></p><p>AltTab 是一款免费的软件，可从下方的官网链接下载：  </p><p><em><a href="https://alt-tab-macos.netlify.app/">https://alt-tab-macos.netlify.app/</a></em></p><p>除了本文介绍的内容，如果你对 Mac 还有其他疑问，可以在下方的评论区留言，与大家一起交流。      </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">          </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>使用技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>可以做一辈子的事情：写作和运动</title>
    <link href="/2021/08/30/2021-8-30-keepon/"/>
    <url>/2021/08/30/2021-8-30-keepon/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 大家好，我是安哥。</p><p>昨天和一个朋友聊天，她问了我一个问题，你的公众号之前就达到 1 万关注了，为啥没写篇文章或者搞搞抽奖呢？  </p><p>我有点敷衍地回复她，不想写，也不想花钱搞抽奖。  </p><p>敷衍的回复，其实是表面原因，但还有一个深层原因是，我觉得写东西好累……</p><p>自从 5 月份同部门的两个同事选择了离职，原先习惯的「工作模式」也变了——周一没了选题会、没人和我讨论某个选题是否合适、少了偷窥同事最近看了什么内容的快乐（说的是下面👇🏻专门用来丢文章的群）……</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210829100139645.png" alt="image-20210829100139645"></p><p>少了前同事帮忙写文章，公司小号每周要发 5 篇文章，就都落到我头上，我基本能应付过来，但它给我的感觉就是<strong>匆忙</strong>和「<strong>把我榨干</strong>」。</p><p>前一天就要想着第二天要发什么文章，没有停歇的空间；有时效率比较低，考虑到第二天要发，要么见好就收、快速收尾，要么回到家加班继续写。  </p><p>至于说榨干，对做新媒体的人来说就是家常便饭，我也没有过多的时间分配在找选题这件事上，以至于对写出来的大多数文章都不满意。</p><h2 id="写东西最有成就感的时刻"><a href="#写东西最有成就感的时刻" class="headerlink" title="写东西最有成就感的时刻"></a>写东西最有成就感的时刻</h2><p>我是 2015 年创建这个公众号的，之所以能把时间记得这么清楚，是因为我的公众号 ID 为 <strong>PengTalk15</strong>，ID 最末尾的 15 指代的就是 2015 年。</p><p>主要是这两年做了<strong>新媒体编辑</strong>的工作（2018.6 开始），才比较稳定地发布文章，一直到今年，自己的公众号才<strong>稍微有了一点起色</strong>——公众号阅读量终于不再是两位数、可以接到一点广告了。</p><p>如果要说，之所以能把写公众号这件事情坚持下来，我觉得有这些原因：</p><ul><li><p>最开始对「<strong>效率工具</strong>」或者「<strong>如何更好地提升效率</strong>」这类话题感兴趣</p></li><li><p>写公众号本身就是我工作的一部分，它能给我带来基本的物质收入</p></li><li><p>我是个内向的人，既然不擅长「抛头露面」讲话，那就<strong>让文字来代替我与别人进行交流</strong>，而且相比于单次的面对面沟通，文字可以突破空间与时间的限制，它可以与你素未谋面的人沟通，它可以一对多沟通，拉长时间维度来看，文字具有更长的生命力，<strong>有可能你人没了，你写的东西还在发光发热</strong></p></li><li><p>从同事和网上的一些博主的例子看到，写东西确实可以赚到钱</p></li><li><p>一些同行者或者读者的鼓励，少部分的人会来跟我说，我写的东西帮到他了，有个读者刚加了我微信不久，就给我发了个超大的红包，感谢你们。于我而言，<strong>写东西最有成就感的时刻，并不是阅读量过 1 万甚至 10 万+，而是我确实影响到了别人，某种程度上促成了他们的改变</strong>。</p></li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/FjdfZwbzPt3nnsMHHxl7bTwU1u8w.png" alt="FjdfZwbzPt3nnsMHHxl7bTwU1u8w"></p><p>如果把我这里说到的，坚持「写东西」这件事情，换成其他的，比如运动、阅读等积极的词汇，其实都可以归为<strong>习惯的养成</strong>。</p><h2 id="改变的开始"><a href="#改变的开始" class="headerlink" title="改变的开始"></a>改变的开始</h2><p>从 6 月初完成<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649914441&idx=1&sn=5bd3c94f845c03c7c3b0114511078ead&chksm=83a87864b4dff1722f10afce7028d9c65d4022015edf89dc21613a8ccfa634bc014c39328a22&token=1458791452&lang=zh_CN#rd">公众号日更 100 天的计划</a>之后，有段时间觉得不是特别习惯，因为<strong>少了一件每天必须要做的事情</strong>。。。内心隐隐觉得自己又开始变颓废了。</p><p>7 月份感冒生了一场病，在医院门口等着检查的时候，看着天空，想起了去年写过的一句话，「健康就像空气，当你年富力强、精力充沛时，你不会感知到它的存在，当你失去健康的时候，才会惦记起它来」，想到自己已经好久没有跑步了，就觉得非常后悔。</p><p>与此同时，看到公众号「辉哥奇谭」的作者 @张辉 每天都在知识星球里发布自己跑步的打卡截图，如下图，他给自己制定的计划是<strong>每天跑步 30 分钟，不中断连续跑步 100 天</strong>，即便早晨下起了雨，他也会打起伞出门，以步行代替跑步。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image_185244821425122.PNG" alt="image_185244821425122"></p><p>这里还要补充另外一个小插曲：感冒好了之后，连续好几天早上上班的时候，我都觉得好困，明明前一天晚上很早睡了，大白天的还是犯困，我都有点怀疑是不是吃了太多药的副作用。。。</p><p>为了增强身体的抵抗力，尽可能降低感冒的概率，以及对抗白天上班的困意，我选择像辉哥学习——每天早上跑步，我给自己定下的目标是<strong>每次只跑 3 公里</strong>，从 7 月底到今天跑了 27 次步，中间有几天偷懒了。</p><p>这些天下来，唯一能感知到的变化，就是我的精神变得更好了，大白天上班也不再犯困了，也无需借助咖啡来给自己提神。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/IMG_0052.jpg" alt="IMG_0052"></p><p>还有一个我比较满意的地方在于<strong>精神层面</strong>，每当想到早上起床没多久就完成了 3 公里的运动，把一天要做的运动早早做完，做完就可以抛之脑后，内心就觉得很满足。</p><p>不出意外的话，我会把每天跑步 3 公里的 flag，坚持做满 100 天，允许中间有偷懒的时候。</p><p>生病促发我选择早上跑步的经历，让我愈发认同下面这两句话：</p><ul><li>每天运动比每周一次的运动容易（这里可以把「运动」替换为「写作」等）</li><li>当你觉得自己没有任何选择、无法改变、甚至是觉得看不到希望的时候，现在、立刻、马上去做你认为对的事情，永远都不晚</li></ul><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和你分享的内容，希望能够对你有一点帮助。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>写作</tag>
      
      <tag>运动</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>提升电脑操作效率的一点心得</title>
    <link href="/2021/08/01/2021-8-1-mactips/"/>
    <url>/2021/08/01/2021-8-1-mactips/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>文/彭宏豪，笔名/安哥拉<br>本文首发于公众号「效率工具指南」    </p><p>Hello 大家好，我是安哥。</p><p>买了 Mac 将近一年，老实说，有点惭愧，我在 Mac 上的操作效率，还是不如用了好多年的 Windows 系统，明明一个在 Windows 上很简单的操作，在 Mac 上可能要多折腾几下，有些甚至到现在还搞不明白。</p><p>有点后悔之前为啥不买一个方便携带和移动的 Macbook 了，至少使用的时间能更多一些，而且体验也不会像现在那么隔裂——在公司用 Windows 系统，在家用 macOS 系统。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210801201429397.png" alt="image-20210801201429397"></p><h2 id="同时打开多个标签页"><a href="#同时打开多个标签页" class="headerlink" title="同时打开多个标签页"></a>同时打开多个标签页</h2><p>我使用电脑上的浏览器，有个习惯，喜欢打开超多的标签页，而且时常因为写文章或者截图的原因，会把某个标签页从众多的标签页中拖拽出来，单独在一个新的浏览器窗口中打开，类似下图右侧的「个人博客」页面。</p><p>当浏览器打开的窗口一多，我就会觉得切换起来有些麻烦，至少不如我在 Windows 系统上操作起来那么溜——Windows 底部的任务栏可以很方便地查看我们打开的浏览器窗口。</p><p>那么 macOS 上如何快速调出类似下图的页面，方便我们在多个浏览器窗口之间切换呢？</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210801202020238.png" alt="image-20210801202020238"></p><p>目前我使用的方法是，使用系统的「桌面与屏幕保护程序」中附带的一个小功能「<strong>触发角</strong>」。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210801202731155.png" alt="image-20210801202731155"></p><p>我将桌面右下角的触发角设置为「应用程序窗口」，这样当我处于任意一个浏览器窗口激活的状态下，将鼠标移动到桌面的右下角，就能快速显示我打开的所有浏览器窗口的缩略图，方便我们在同一个应用中的不同窗口间切换。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210801202840081.png" alt="image-20210801202840081"></p><h2 id="将常用内容添加到置顶列表中"><a href="#将常用内容添加到置顶列表中" class="headerlink" title="将常用内容添加到置顶列表中"></a>将常用内容添加到置顶列表中</h2><p>这是我长期将文章分发到多个平台的过程中，逐渐摸索出来的一点小心得：</p><p>在一些内容平台，为了让更多的人知道，你当前在看的这篇文章，首发于我的公众号「效率工具指南」。我一般会在文章开头添加这段<strong>重复的文本内容</strong>：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210801203847407.png" alt="image-20210801203847407"></p><p>对于常用的文本内容，除了可以使用输入法的「自定义短语」，通过设置快捷键快捷输入，还可以考虑使用「<strong>剪贴板管理</strong>」工具，将常用的文本内容添加到置顶列表中，在需要的时候呼出面板，点击复制，同样可以快速粘贴。</p><p>在 Mac 上，我使用的剪贴板管理工具是之前介绍过的 PasteNow，由国内的开发者 @图拉鼎 开发，真的非常好用。</p><p>PasteNow 中就内置了「<strong>剪贴板内容置顶</strong>」的功能，你可以将你平时经常会用到的重复性内容，添加到软件的置顶列表中。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210801204128263.png" alt="image-20210801204128263"></p><p>这样在你需要用到这段重复性内容的时候，按下 <strong>Command + Shift + V</strong>（选择性粘贴）呼出 PasteNow 的面板，切换到置顶列表，双击要用到的重复性内容，就可以将内容快速添加到指定位置，真的很方便。</p><p>Windows 上通过输入法添加「自定义短语」，达到快速插入重复性内容的方法，可参考我之前发布的文章：</p><p><a href="https://mp.weixin.qq.com/s/BgWZaQ_JK7SxIvJS1p8v2Q">Windows自带的功能这么好用，还装什么第三方软件？</a></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>以上，就是本次想和各位分享的 Mac 上两个高效操作的小心得，希望对你有帮助。    </p><p>如果你也知道一些好用的高效操作技巧，欢迎在下方的评论区留言分享，我们下次再见。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">     </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>使用技巧</tag>
      
      <tag>剪贴板管理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解锁 QQ 音乐/网易云音乐加密格式</title>
    <link href="/2021/07/18/2021-7-18-music/"/>
    <url>/2021/07/18/2021-7-18-music/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>文/彭宏豪，笔名/安哥拉<br>本文首发于「<a href="https://mp.weixin.qq.com/s/mx6D5aBmiR_2odM24_flcw">效率工具指南</a>」    </p><p>Hello 大家好，我是安哥。</p><p>用过 QQ 音乐或网易云音乐的朋友，尤其是充过会员的，可能都遇到过这么一种情况：会员期间下载的音乐，会员过期后就无法正常播放。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210718190828421.png" alt="image-20210718190828421"></p><p>如果你查看 QQ 音乐本地下载的音乐文件，会发现它们的格式比较特殊——qmc3，这种特殊格式是 QQ 音乐弄的<strong>加密格式</strong>，相比常见的 mp3 格式，这种加密格式有两个 bug：只能使用 QQ 音乐播放；会员过期后，就无法正常播放。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210718190936600.png" alt="image-20210718190936600"></p><p>如果换成网易云音乐，对应的加密格式为 ncm。</p><p>此外，如果你想把 qmc3/ncm 格式的音乐上传到公众号后台，它也会提示「不支持该音频格式」。    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210718201117624.png" alt="image-20210718201117624"></p><p>为了解决这个问题，今天给大家介绍两个相关的工具，希望对你有帮助。</p><h2 id="unlock-music"><a href="#unlock-music" class="headerlink" title="unlock-music"></a>unlock-music</h2><p>这是一个<strong>在线解锁加密格式</strong>的工具，将加密过的音乐文件上传到网页，稍等一会，就能得到解密后的 mp3 格式的文件。</p><p>这个工具支持解锁网易云音乐、QQ 音乐、酷狗音乐和酷我音乐。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210718201933235.png" alt="image-20210718201933235"></p><p><strong>unlock-music 网站网址：</strong></p><p><em><a href="https://unlock-music-ix.netlify.app/">https://unlock-music-ix.netlify.app/</a></em></p><p>这个网址后续可能会失效，如果你想得到这个工具的最新地址，可以在 GitHub 收藏这个工具对应的项目，在页面的右侧就可以看到这个工具的网址。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210718202829609.png" alt="image-20210718202829609"></p><p>除了网页版，这个工具还推出了适用于不同浏览器的插件，目前支持 Chrome、微软的 Edge 和火狐浏览器。打开浏览器的应用商店，输入「<strong>音乐解锁</strong>」即可找到。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210718203342218.png" alt="image-20210718203342218"></p><p><strong>unlock-music GitHub 项目地址：</strong></p><p><em><a href="https://github.com/unlock-music/unlock-music">https://github.com/unlock-music/unlock-music</a></em></p><h2 id="一起听音乐呀"><a href="#一起听音乐呀" class="headerlink" title="一起听音乐呀"></a>一起听音乐呀</h2><p>这是一个集合了 QQ 音乐和网易云音乐曲库的在线网站，搜索歌曲无需登录，在搜索框中输入曲目名称或歌手，在下方返回的结果中，点击每首词最右侧的<strong>下载按钮</strong>，就可以得到 mp3 格式的文件。</p><p>相比前面介绍的工具，这个在线网站一步到位，省去了上传转换的步骤。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210718210628700.png" alt="image-20210718210628700"></p><p>这个在线网站之前支持同时登录 QQ 音乐和网易云账号，现在只支持登录网易云账号。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210718211742416.png" alt="image-20210718211742416"></p><p>对于 QQ 音乐，这个工具存在一个限制：下载 VIP 音乐，需要先登录 QQ 音乐账号，但目前无法登录，因此也就无法通过这个工具免费下载会员专享的音乐了。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210718211900971.png" alt="image-20210718211900971"></p><p><strong>一起听音乐呀 在线网址：</strong></p><p><em><a href="http://y.jsososo.com/#/">http://y.jsososo.com/#/</a></em></p><p>这个工具也推出了适用于电脑端的客户端，支持 Windows 和 macOS 系统，感兴趣的朋友可以前去下载，这里就不赘述了。</p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>介绍这两个工具，并不是在鼓励大家不在音乐 App 中充会员，只是希望各位在一些视频或者文章中使用音乐时，可以更方便一些。</p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">   </p><p>以上，希望有帮助。    </p>]]></content>
    
    
    
    <tags>
      
      <tag>音乐</tag>
      
      <tag>下载</tag>
      
      <tag>格式转换</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>吃了没备份数据的亏</title>
    <link href="/2021/07/10/2021-7-10-databackup/"/>
    <url>/2021/07/10/2021-7-10-databackup/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 大家好，我是安哥。</p><p>之前曾介绍过用一种搭建个人博客的方法：<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649880748&idx=1&sn=fb0ff081986dd788107f7bc867fb1853&chksm=83abfc81b4dc75970614ff85e078d47bb012214f0c4002fa2628651f44e416d0ef31d52dbe6f&token=1045425881&lang=zh_CN#rd">不会代码，如何零成本搭建个人博客？</a>  </p><p>这是一种使用 GitHub Pages 来搭建博客的方法，无需租用服务器和域名，完全免费。文章中用到了一款名为 Gridea 的静态博客客户端，以图形化的界面替代了在终端中配置博客、将本地仓库 Push 到 GitHub 的过程，对没有技术基础的人非常友好。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210710174625308.png" alt="image-20210710174625308"></p><p>我很早之前就用这个方法，创建一个域名为 <code>phh95.github.io</code> 的博客，但后来因为它无法在国内正常访问，我就转移到了<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649893670&idx=1&sn=1f3f91248ade0d5f1bbe3c2046990d63&chksm=83a82f0bb4dfa61d463dfe7af7ecafa21ac0cf1bee21b1b147990b83f657f687d3857db40bf8&token=1045425881&lang=zh_CN#rd">现在的博客</a>，于是这个用 GitHub 托管的博客，就被我遗弃了。</p><p>昨天在网上搜东西，突然想起这个被遗弃已久的博客，想着要不要继续往上面发点东西，为了贪图方便，我还是选择使用 Gridea 来发布文章。</p><p>从网上下载 Gridea 客户端，配置好仓库信息之后，点击左下角的「同步」按钮，原以为它会先拉取原先存放在远端 GitHub 仓库的数据，把老文章克隆到本地。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/gridea%E5%90%8C%E6%AD%A5.png" alt="gridea同步"></p><p>但事情出乎我的意料，这个同步操作的意思是，将本地的数据 Push 到远端的 GitHub 仓库，并直接将远端仓库的数据全部覆盖掉。</p><p>哦吼完蛋，就因为这个<strong>误操作</strong>，我以前在这个博客上发布过的几篇旧文章，全部都没了，连过往的提交记录也一并没了，看起来就像是个刚建没多久的新仓库。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210710180154841.png" alt="image-20210710180154841"></p><p>其实不止是我，还有一些用了 Gridea 的人，也同样遇到了这个问题，在 Gridea 的 GitHub 项目页面中，有位网友在 2019 年就提了一个 issue，比较幸运的是，这位网友在同步之前，还留了一手——备份。</p><p>但到了 2021 年，这个遗留已久的问题，还是存在，不过这回我就没那么幸运了，因为没有想到会发生这个问题，也就没有提前将远端仓库的数据备份下来。。。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210710180443962.png" alt="image-20210710180443962"></p><p>唯一一点值得窃喜的是，还好我放在上面的文章不多，也不重要，没了也没了吧。</p><p>经过这件事，也让我想到：有时那么能让我们省去繁琐操作、帮我们避开难题来龙去脉的工具或方法，真的有那么想象中的那么靠谱吗？</p><p>现在如果你来问我，「<strong>有哪些学了就会受用一生的技能</strong>」，我会首先推荐：<strong>Git 和 GitHub</strong>，即便你不是程序员。</p><h2 id="将软件安装包上传到-GitHub-上"><a href="#将软件安装包上传到-GitHub-上" class="headerlink" title="将软件安装包上传到 GitHub 上"></a>将软件安装包上传到 GitHub 上</h2><p>之前我会为介绍的一些软件提供安装包，也就需要经常用到各种网盘，例如蓝奏云或者飞书的云文档。</p><p>但这些网盘的一个缺点在于，每次分享的文件都是独立的，不存在关联，这也导致了你无法查看我之前分享过的其他软件。</p><p>此外，还有一点，因为分享的软件不同，每次我都需要去后台，为每个软件单独设置不同的关键词，操作起来比较繁琐。</p><p>正好看到图床工具 PicGo 的开发者 PiEgg，在少数派上发表了一篇介绍自己使用 GitHub 的心得《<a href="https://sspai.com/post/66131">从开源到应用分发，利用 GitHub 你能做这些事</a>》。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210710182407268.png" alt="image-20210710182407268"></p><p>其中介绍到一个用法，使用 GitHub 的 <strong>release</strong> 功能，将应用作为附件上传到 GitHub，作为一种<strong>分发应用</strong>的方法，省去购买云服务器的费用。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210710182538741.png" alt="image-20210710182538741"></p><p>受他的启发，我想到，这个 release 不就相当于一个云盘吗？于是我创建了一个名为「<strong>Awesome-Efficiency-Software</strong>」的仓库，将两个应用的安装包作为附件上传到 GitHub 中，效果如下图。</p><p>这样做的好处在于，其实前面也说了：你可以看到我过往分享过的软件，而且我也不需要设置多个关键词，每次想要分享软件的时候，可以先上传到这里，再把相同的链接分享给你，就够了。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210710182906878.png" alt="image-20210710182906878"></p><p>Awesome-Efficiency-Software 项目地址：</p><p><em><a href="https://github.com/phh95/Awesome-Efficiency-Software/releases">https://github.com/phh95/Awesome-Efficiency-Software/releases</a></em> </p><p>*附：</p><p>来自 PicGo 开发者 - PiEgg 的文章《从开源到应用分发，利用 GitHub 你能做这些事》，扫描识别下方的二维码即可阅读：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/QRcode_A%20%E2%80%94%20a1.png" alt="QRcode_A — a1">   </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a><strong>欢迎关注</strong></h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">   </p><p>以上就是本次想和你分享的内容。<br>看完文章如果觉得对你有帮助的话，别忘了点击底部的「<strong>点赞/在看</strong>」鼓励一下我，谢谢。</p>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>GitHub</tag>
      
      <tag>数据备份</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>美团《长期有耐心》读书摘录</title>
    <link href="/2021/07/05/2021-7-5-meituan/"/>
    <url>/2021/07/05/2021-7-5-meituan/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>2021-6-23 开始阅读<br>2021-7-5 读完</p><p>以下内容来自电子书《长期有耐心》 </p><h2 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h2><ul><li>每天前进 30 公里（南极探险的故事）   </li><li>think big picture  </li><li>以客户为中心，长期有耐心  </li></ul><p>艾伦·凯说过：预测未来最好的办法就是创造它。</p><p>王兴对环境的容忍度很高，基本不受外界的影响，但他最不能容忍的是数据错误。</p><p>2020 年 8 月 8 日，美团外卖日订单量突破 4000 万单</p><p>微软公司创始人比尔·盖茨有句名言：“每天早晨醒来，一想到所从事的工作和所开发的技术将会给人类生活带来的巨大影响和变化，我就会无比兴奋和激动。”</p><p>美团的定位从最初的社交和商务的交集，转向了移动和商务的交集</p><p>美团在“千团大战”中脱颖而出，很重要的一个因素，是抓住了移动互联网这一波红利。2011年，美团移动端收入占美团总业务比重仅为7%~8%左右，2012年达到了30%，2013年达到了70%，2014年超过了95%，移动端的发展趋势很明显。</p><p>要做到与互联网发展趋势紧密结合，还得有一个潜力巨大的行业来支撑，王兴选择了第三产业，也就是服务业。</p><p>我做一件事的标准是：有益、有趣、有利。</p><p>失败是可以被定义的，王兴说他看到过一个观点：我无法告诉你怎么获得成功，但失败是可以被定义的，你放弃之后就是失败了。如果你还没有放弃，那么你就还没有失败，就走在成功的路上。</p><p>王兴认为，CEO（首席执行官）的职责有三件：第一，设定公司目标和总体战略，并确保传达给相关执行者；第二，招募并留住最优秀的人才；第三，确保公司有足够现金。其他事情都应该找最专业的、最好的人来做。</p><p>传奇的团队：即使是后来饭否被关停的时候，王兴的团队都没有散，只走了两个人：一个独立开发者回老家了；另一个是张一鸣，去寻找其他的创业机会，后来创办了现在赫赫有名的今日头条、抖音。</p><p>两家科技巨头起家的业务：IBM是做磅秤、自动切肉机起家的，三星是做干鱼、蔬菜、水果出口业务的，如果用基因论，很难解释这两家公司未来的基因突变。</p><p>中国互联网商业模式的演变：</p><p>最早的门户展示广告，客户在新浪、搜狐等门户网站投广告，按展示次数付费</p><p>搜索推广，在百度、谷歌投放广告，按照点击率付费</p><p>团购营销，主要的客户是提供本地服务的商家，如餐馆、酒店、卡拉OK、足疗按摩店等。这些本地商家虽然规模比较小，但数量是千万量级的，它们都需要进行推广，按照效果付费</p><p>美团给自己的定位是本地服务的电子商务，跟所有电子商务一样，追求低成本、高效率。</p><p>王慧文在接受媒体采访时多次表达过，<strong>美团的本质，就是用科技来提升服务业的效率</strong>。</p><p>美团现任首席科学家夏华夏说过：我们要把复杂的事情简单化，简单的事情标准化，标准的事情流程化，流程的事情自动化。</p><p><strong>低毛利加上大规模，也会有很高的商业价值</strong>。所有<strong>零售本质</strong>都是这样，沃尔玛是这样的，亚马逊也是这样。</p><p>美团的业务涵盖：</p><ul><li>团购</li><li>外卖</li><li>酒旅</li><li>出行</li><li>充电宝</li><li>社区团购</li></ul><p>干嘉伟加入美团之前有过成体系的思考，从<strong>行业、老板、团队</strong>三个角度进行了综合衡量衡量，“我自己最主要思考了三个问题：</p><p>第一，这事儿大不大？<br>第二，王兴以后能不能排到互联网前十？<br>第三，他们是不是正好缺我？缺我？当时王兴找了我半年，我确实很犹豫。这三个问题思考完毕，我做了决定加入美团”。  </p><p>传统广告渠道：</p><ul><li>电视</li><li>公交</li><li>楼宇</li></ul><p>管理学大师德鲁克说过，企业的目的就是创造顾客。   </p><p>2010—2020年，美团成立的这十年，是中国互联网行业进入<strong>成熟期</strong>的十年。</p><p>在管理方面，王兴认为，管理的精髓不是一种科学，而是一种实践。</p><p>你对未来越有信心，就越有耐心。</p><p>“三高三低”的理念：</p><ul><li>高品质、低价格</li><li>高效率、低成本</li><li>高科技、低毛利</li></ul><p>2012 年 2 月份，美团推出猫眼电影（原名美团电影）<br>2013 年，美团又探索了外卖业务，这是美团的商业模式又一次更为深刻的进化，把美团的业务从消费者的<strong>到店消费</strong>场景，延伸到了<strong>在家消费</strong>的场景。  </p><p>在王兴看来，凡是还没有被互联网改变的行业，都即将被互联网改变。   </p><p>美团是服务业的平台，市场空间很大，但是，面临的困难与挑战也非常大，王兴认为，美团需要每天坚持前进 30 公里。  </p><p>2012年2月6日，美团年会在北大的百年讲堂举办，那天，王兴以“每天坚持前进30公里”为主题，做了一次精彩的演讲。王兴在演讲中以百年前<strong>南极探险</strong>的故事为例，指出美团需要“每天坚持前进30公里”的心态才能做好，只有持续改进的公司才能成为最后的赢家。   </p><h2 id="南极探险队的故事"><a href="#南极探险队的故事" class="headerlink" title="南极探险队的故事"></a>南极探险队的故事</h2><p>南极点是在地球的最南端，就应该是南纬90度的地方，通常探险从南纬82度开始，到了南极点还要顺利回去，这是2200多公里的路。有两个竞争团队，一个是来自挪威的阿蒙森团队，共5人；另一个是英国的斯科特团队，共17人。他们都想率先完成这个从来没有人完成过的事情，到达南极。”</p><p>两支探险队差不多都是1911年10月在南极圈的外围做好了准备，准备进行最后的冲刺。结果阿蒙森团队在两个多月后，也就是1911年12月15日，率先到达了南极点，插上了挪威国旗；而斯科特团队虽然出发时间差不多，而且人数还更多一些，可是他们晚到了一个多月。  </p><p>阿蒙森团队率先到达南极点之后，又顺利地返回了原来的基地。斯科特团队晚到了，他们没有获得荣誉。更糟糕的是，他们因为晚了，回去的路上天气非常差，路上不断有人掉队，最后没有一个人生还。   </p><p>通过阿蒙森团队和斯科特团队南极探险的故事，王兴做了总结，两个团队碰到的环境是差不多的，最后两个团队却有截然不同的结果，<strong>阿蒙森团队的成功经验，最后可以总结成一句话：不管天气好坏，坚持每天前进 30 公里</strong>。  </p><p>每天坚持前进30公里，这也是“长期有耐心”的体现。</p><h2 id="猫眼电影"><a href="#猫眼电影" class="headerlink" title="猫眼电影"></a>猫眼电影</h2><p>猫眼电影的创始人：徐梧。  </p><p>2019年年初，徐梧发了一条朋友圈：“公司对员工付出的最大成本，不是现金，不是Title（头衔），不是股权，而是<strong>机会</strong>。聪明的员工要学会识别这点。”</p><p>猫眼有独立的 App，不仅卖电影票、做团购、做在线选座、能查询影讯，还要让用户发影评、评分、交流。  </p><p>电影行业的单价在所有的行业里比较低，单以品类来看，它的拉新能力是最强的。  </p><p>电影<strong>相对比较标准、规范</strong>，每个影院都有专业的售票系统，IT化程度比较高。  </p><p>在2013年1月，我们发布了当时美团电影的3.0版，直接更名为猫眼电影。在团购的基础上，我们推出了“在线选座”这一新功能，这块的用户体验和沉淀涨势非常快。“在线选座”是猫眼电影很重要的一个功能。  </p><p>为了给新的品牌起名字，王兴还推荐了一本名叫《定位》的书给徐梧研读。经过多次讨论，最后终于定下“猫眼”这个名字。</p><p>徐梧将起名的方法论浓缩为六个字：<strong>好读、好记、独特</strong>。“什么叫好读？没有平翘舌音、前后鼻音这些难读的音，南方人、北方人都能读才算好读；好记，就是我跟你说一遍这个名字，你就能很容易记住；独特，就是要找一个相对低频的词，能够重写它的含义。”  </p><p>在起名字方面，美团的产品顾问马占凯（搜狗输入法之父）一直很有心得。猫眼的起名，马占凯曾重度参与。2018年，美团的生鲜超市“掌鱼生鲜”改名为“小象生鲜”，也是马占凯老师的建议。 </p><h2 id="三层四面分析法"><a href="#三层四面分析法" class="headerlink" title="三层四面分析法"></a>三层四面分析法</h2><p>看生意本身的机会有多大，是战略执行的第一步，可以用“三层四面分析法”。   </p><p>“四面”是所有生意都可以拆分成<strong>客户数、频次、客单价（收入）、货币化率</strong>；“三层”指<strong>市场现状、在线率和市场占有率</strong>。这个思考方向不见得最好，但比较保险，从上到下，没有因素重叠或者漏掉。  </p><p>以团购为例，团购的“四面”，用户数非常大、交易频次高、有一定客单价。当然，这个行业也存在一个问题，就是之前的货币化率非常低。再看“三层”，市场处于初期，在线率和市场占有率都很低，我就觉得那是一个大好的机会。  </p><p>三层，是指一个行业的市场总量、在线率和市场占有率，通俗点儿说，就是三个问题：这个行业总的蛋糕多大？互联网能够在这个蛋糕中获取多大的比率？公司能够在<strong>互联网化</strong>的这块蛋糕中占据多大比率？  </p><p>三层是从<strong>战略</strong>上思考这个市场有多大，从互联网的角度来竞争有多少优势，从而去推算值不值得做，如果做，做到怎样才算赢。  </p><p><strong>战术执行层面</strong>的“四面”，即<strong>用户量、订单量、收入和利润的增长策略</strong>。这四个元素之间存在着必然的联系，有用户量才可能有订单量，有订单量才可能产生收入，有收入的情况下才可能产生利润。  </p><p>在猫眼电影之前，消费者观影的路径是在时光网查影讯，在美团买票，在豆瓣评论。这个过程很痛苦。从用户的角度来说，猫眼电影一个地盘解决所有问题，满足了他们的需求，因此能带来高频使用。   </p><p>美团是做团购起家的，团购也是在线售票中的一种购买方式，虽然购买的过程还算便捷，但消费者还是需要<strong>用美团的团购券到影院现场兑换电影票，可能需要排队，而且选座也不是很方便</strong>。因此，在团购的基础上，猫眼电影推出了“在线选座”这一新功能，提升了用户体验，用户增长趋势非常明显。   </p><p>当<strong>自动取票机</strong>大规模铺开之后，购买热门影片的电影票要排几十米长队的现象彻底成为历史。  </p><p>线上，猫眼电影做好了产品，让用户实现<strong>在一个App实现查影讯、购票、发表评论</strong>的全部过程。线下，猫眼电影与各大影院合作，自动取票终端让用户取票更加方便。  </p><p>选片时有<strong>观影指南</strong>引导，判断时有<strong>社区</strong>交流参考，买票时有<strong>团购影票提供优惠</strong>，选座时有<strong>实时座位图</strong>快捷选定，影迷的基本需求已得到全面满足。  </p><h2 id="美团的价值观"><a href="#美团的价值观" class="headerlink" title="美团的价值观"></a>美团的价值观</h2><p>美团最初的价值观：“消费者第一，商家第二，员工第三，股东第四，王兴第五。”   </p><p>2013 年，美团更新了自己的价值观：以客户为中心、团队合作、拥抱变化、诚信、敬业、勤俭、学习成长。   </p><p>王兴在2011年发过一条微博：开会时一个年轻同事的一句话至今回荡在我耳边，当时大概是晚上12点，讨论接近尾声，需要有人整理会议纪要，涉及流程图的部分用visio画比较好。我问她会用visio吗，她毫不犹豫地说“我可以学”。这四个简单的字里有无穷的力量。   </p><h2 id="美团外卖"><a href="#美团外卖" class="headerlink" title="美团外卖"></a>美团外卖</h2><p>2013年11月，刚上线的美团外卖日订单量只有几单。2014年9月，日订单量峰值才到10万单。但两个月后，美团外卖日订单量峰值突破100万单。</p><p><strong>外卖业务把美团消费者的场景由到店延伸至到家</strong>，这是一个非常大的变化。服务链的延伸需要做好配送业务，这需要高额投入。   </p><p>在互联网上<strong>高频带动低频</strong>是一件比较自然的事情，所以我们会优先把大众高频的事情做好。我们的目标是解决几亿人的吃喝玩乐需求。   </p><p>外卖在<strong>校园</strong>业务基本稳定之后，又重点开拓<strong>白领市场</strong>，后来的事实证明，拿下了白领市场，并开展了配送服务，是美团后来获得成功的关键。  </p><p>2015 年，也是百度外卖形势最好的一年。美团与饿了么在兼顾校园市场与白领市场，但<strong>百度外卖只做白领市场</strong>。    </p><h2 id="美团酒店"><a href="#美团酒店" class="headerlink" title="美团酒店"></a>美团酒店</h2><p>相对来说，高星级酒店是美团的弱项，因为美团酒店的发展路径是<strong>从三、四线城市的同城住宿</strong>开始的，相对来说价位不高。    </p><p>美团采取了侧面进攻的方式。既然高星级酒店客房业务比较难进入，那就先帮高星级酒店的健身、餐饮<strong>周边业务提升营收</strong>。进入，那就先帮高星级酒店的健身、餐饮周边业务提升营收。餐饮也是高星级酒店的重要业务业务，像洲际酒店的餐饮收入占比50%，客房只占 40%。美团的优势在于更为综合全面的服务。      </p><h2 id="鸵鸟原理"><a href="#鸵鸟原理" class="headerlink" title="鸵鸟原理"></a>鸵鸟原理</h2><p>注意：这里是鸵鸟原理，而不是鸵鸟效应。</p><p>鸵鸟原理，即只有比别人有非常明显的优势时才具有竞争优势。  </p><p>当回顾变化的时候，我相信<strong>比尔·盖茨</strong>的话，他说得非常对，“<strong>人们总是倾向于高估两年能发生的变化，但是低估十年能发生的变化</strong>”，十年如此，五年也是如此。  </p><p>战略的核心是敢想，就必须 think big。我觉得很重要的是 think big picture。  </p><p>要定一个大目标，我们的关键是 think big picture，是去看到大格局是什么样的，自己在什么位置，扮演什么角色。    </p><h2 id="美团外卖更换-logo"><a href="#美团外卖更换-logo" class="headerlink" title="美团外卖更换 logo"></a>美团外卖更换 logo</h2><p>2015 年下半年，美团外卖换上了新的 LOGO，从一碗饭变成了一只萌萌的袋鼠，“<strong>美团外卖、送啥都快</strong>”这个口号，为越来越多的人所熟知。   </p><p>之前，美团外卖的LOGO是一碗饭，因为消费者点外卖的基础需求是餐饮，但是，随着消费者需求的增多，在美团外卖上面点水果、甜点饮品、鲜花、药品的消费者也越来越多，一碗饭已经承载不了美团外卖的全部功能。   </p><p>袋鼠“袋子大、囊括物品多、跑得快”的特点，与美团外卖品类丰富、配送速度快的定位一致，能够为消费者提供全面的选择、优质的体验。   </p><p>进行品牌升级之后，美团外卖原来的橙色改为黄色，大街小巷美团外卖骑手的制服颜色也改成了这个色调。   </p><h2 id="合并之年"><a href="#合并之年" class="headerlink" title="合并之年"></a>合并之年</h2><p>2015年是中国互联网的“合并之年”，滴滴和快的、58同城和赶集、美团和大众点评都是这一年合并的。  </p><p>在高速增长的新市场，资金不是最稀缺的，组织力也不是最稀缺的，<strong>最稀缺的是时间</strong>，错过了就不会再来了。   </p><p>2015 年 10 月 8 日，美团点评成立。美团和大众点评联合发布声明，正式宣布达成战略合作，双方共同成立一家新公司——美团点评。   </p><p>美团与大众点评合并之后，消费者<strong>到店消费</strong>这个场景的需求得到基本解决，接下来应该集中精力发展外卖、交通等新型业务。这些新业务的订单量远远超过了到店消费场景。   </p><h2 id="判断服务好坏的标准"><a href="#判断服务好坏的标准" class="headerlink" title="判断服务好坏的标准"></a>判断服务好坏的标准</h2><p>最简单的判断服务好坏的标准：<strong>是否愿意、放心地把它推荐给我们的家人</strong>？   </p><p>少谈一点颠覆，多谈一点创新。   </p><p>我们应该多谈一点创新，创新的最终目标是创造价值，降低行业运作成本，提高行业运作效率，提升用户体验。  </p><h2 id="互联网下半场"><a href="#互联网下半场" class="headerlink" title="互联网下半场"></a>互联网下半场</h2><p>下半场，就是“<strong>互联网+**”，就是要通过互联网和生活服务各垂直行业的</strong>深度融合**，服务于我国现代服务业的升级，以满足人们不断升级的消费需求。  </p><p>王兴认为，中国互联网“下半场”的重要特征，是<strong>人口红利</strong>和<strong>移动互联网红利</strong>的消失。  </p><p>智能手机的红利也已经过去，从小米手机创办的 2010 年开始算起，智能手机的销售数量每年都在急剧增长，最开始是每年翻倍增长，但到了 2016 年，<strong>智能手机的出货量</strong>只有 10% 左右的增长。   </p><p>从用户的角度来看，王兴认为，这个时候只有两条路：第一，去<strong>开拓海外市场</strong>，那里看起来似乎还有更多用户，但是，国际化是非常不容易的事情；第二，<strong>精耕细作</strong>，把现有的用户服务好，提升用户体验、增加用户黏性、提升 <strong>ARPU</strong> 值（<strong>每用户平均收入</strong>），让每个用户尽量创造更多的价值。  </p><p>从产业的角度来看，就需要互联网对产业的连接更加深入。王兴认为，简单的连接并不能创造价值，深度的连接并对产业进行改造，才能创造更大的价值。  </p><p>真正的“互联网+”，要做的是各个行业从上游到下游的产业互联网化，不是仅仅停留在最末端做营销、做交易那一小段，而是真正能够靠互联网和IT技术为各行各业的各个环节提升体验、提高效率、降低成本。    </p><p>美团在商业运营上的一个基本逻辑是高频打低频。  </p><p>高频服务靠补贴，低频服务靠广告。外卖、单车、打车等高频服务都是靠补贴做起来的，低频的服务补贴起不到作用。  </p><p>站在从产业创造价值的方向看，所有的产业与互联网的结合，主要的价值有两个：  </p><p>第一，为产业提供新的服务，带来更多的客户（<strong>我的理解就是连接</strong>）。像美团外卖的出现，就让餐饮商家增加了服务的范围范围，在不需要增加成本的情况下，让不出门的消费者也能享受到餐饮商家的服务。   </p><p>第二，为产业提高效率，降低成本。这里面，有非常大的改进空间。  </p><h2 id="企业最核心和稀缺的资源"><a href="#企业最核心和稀缺的资源" class="headerlink" title="企业最核心和稀缺的资源"></a>企业最核心和稀缺的资源</h2><p>干嘉伟回顾说，做实物团购是一件既轻松又赚钱的事情，但是，在资源和能力都有限的情况下，坚持做本地生活才是对的。<strong>一个企业最核心、最稀缺的资源不是钱，而是创始人的注意力</strong>。   </p><p>如果说，美团新推出的<strong>零售业务</strong>，与之前的商品团购有什么本质的区别，那就是<strong>更聚焦于与外卖业务的结合</strong>。   </p><h2 id="美团的两心"><a href="#美团的两心" class="headerlink" title="美团的两心"></a>美团的两心</h2><p>“以客户为中心”“长期有耐心”被称为美团的“两心”。  </p><p>美团的边界是什么？王兴的观点非常明确：不关注边界，只关注核心。</p><p>什么是核心？<br>——客户的需求就是核心。   </p><p>亚马逊业务无边界，综合来看，就是两个核心：一是增加客户的基数，一是增进与客户的联系。   </p><p>到了2016年之后，进入“下半场”的美团，探索的领域更多，比如实体生鲜超市“掌鱼生鲜”、美团充电宝、榛果民宿、美团打车等等。这些业务的探索，有些是成功的，有些是失败的，给外界的感觉，是“美团什么业务都想做”。但王兴认为，<strong>美团实际上只做一件事情，就是服务好客户</strong>，点外卖的、看电影的、旅游的、租车的，基本上是同一个群体。   </p><p>在媒体沟通会上，王兴回应外界对美团“四处树敌”的评价。王兴认为，竞争分两种：一种是足球的竞争，目标是把球踢进门；一种是拳击的竞争，目的是将对方打倒。美团属于第一种。  </p><h2 id="社会企业"><a href="#社会企业" class="headerlink" title="社会企业"></a>社会企业</h2><p>社会企业，即旨在解决社会问题、增进公众福利，而非追求自身利润最大化的企业。  </p><p>美团将秉承“<strong>帮大家吃得更好、生活更好</strong>”的企业使命，承担更多社会责任，带动就业发展，建设更加开放合作、与全社会协调发展的社会企业。   </p><p>企业有很多驱动的核心，有<strong>需求驱动、竞争驱动、战略驱动</strong>等，但我们认为在新阶段，美团是一个<strong>使命驱动</strong>的公司。   </p><p>在用户隐私保护方面，王兴透露，“预计2018年美团将投入1亿元用于保护用户隐私，比如消费者订外卖，不想让外卖骑手知道你的电话号码，那么有选项可以保护你的隐私，满足你的需求。<strong>隐私保护是我们认为非常重要的一个社会责任</strong>”。   </p><h2 id="美团的使命"><a href="#美团的使命" class="headerlink" title="美团的使命"></a>美团的使命</h2><p>第一版使命：美团的第一版使命，是 2013 年和第二版价值观一起宣布的，当时提出的使命是“连接人与商户”。    </p><p>美团的第二版使命，是 2016 年和第三版价值观一起宣布的，对第一版使命进行了迭代，是“连接人和服务，点亮美好生活”。   </p><p>王兴在2017年10月19日举办的媒体沟通会上宣布了美团的第三版使命是“帮大家吃得更好、生活更好”，英文版为“We help people eat better，live better”。  </p><h2 id="互联网的-A、B-面"><a href="#互联网的-A、B-面" class="headerlink" title="互联网的 A、B 面"></a>互联网的 A、B 面</h2><p>王慧文把整个互联网产业分成两类：A类是供给和履约在线上，B类是供给和履约在线下。  </p><p>王慧文认为，A 类产业如视频网站、直播、在线游戏等，代表性的公司是腾讯、爱奇艺、今日头条等，这类算是<strong>纯粹的互联网公司</strong>；B 类是供给和履约在线下的互联网产业，代表性的公司是淘宝、京东商城、美团、滴滴、携程等，用户可以通过互联网的方式在这些网站下单，但是，接收商品或者享受服务，那就需要用线下的方式来完成。   </p><p>王慧文认为，B 类可以再做一个划分，B1 类是以 SKU 为中心的供给，B2 类是以位置为中心的服务。   </p><p>A 类，供给和履约在线上，企业的核心能力体现在产品设计领域上，体现在用户理解上，体现在对于通信、社交以及内容的把握上。这部分的能力是 A 类企业共有的。  </p><p>B1 类里面，主要体现在对于品类的理解，对于供应链的理解，对于定价的理解，代表公司是淘宝。B2 类里面，如果盘点一下 B2 类的公司，总体来说，它们都有一个共有的特征，就是都有大规模的线下团队。<strong>是否有大规模的线下团队是 B1 类和 B2 类一个很大的差别</strong>。  </p><p>同时，B2 类的定位功能很重要，要把定位的速度做到最快、精准度做到最高。  </p><p>事实上，B2 这个领域是 2012 年到现在为止中国互联网打得最惨烈的圈：单车大战在这里面，打车大战在这里面，外卖大战在这里面。为什么打得这么激烈？这个行业刚刚起步，新的机会刚刚出现，<strong>大家对于机会的认知、产业的认知刚刚形成，核心能力非常相似</strong>。不仅仅核心能力相似，事实上场景也相似。核心能力导致大家场景会有很多交叉，这是没有办法的事情。     </p><p>B2 类还可以细分为四个场景：  </p><p>第一个场景：消费者不动，商家动（或者供应商动，履约动）。这个场景包括外卖、上门服务，典型的代表如美团外卖、饿了么、58 到家。<br>第二个场景：消费者动，商家不动。这是到店服务，典型的代表如美团、链家，以及爱彼迎等民宿供应商。<br>第三个场景：消费者动，供应商也动。这和交通相关，比如打车和共享单车。典型企业是滴滴、摩拜、优步，以及一些分时租车公司，美团也推出了交通的业务。<br>第四个场景：异地服务。比如异地的酒店、旅游、机票与火车票等服务，典型企业如携程、美团旅行等。  </p><h2 id="更大责任，更多耐心"><a href="#更大责任，更多耐心" class="headerlink" title="更大责任，更多耐心"></a>更大责任，更多耐心</h2><p>王兴在上市当天向全体员工发送了一封邮件《更大责任，更多耐心》：  </p><p>各位同学：</p><p>今天早上，公司在香港主板挂牌上市，我们迈入了一个新的发展阶段。</p><p>上市意味着成为一家公众公司，意味着承担更大的责任。作为平台型互联网企业，我们不能仅仅用法律、义务这样的底线来要求自己，而是要更加自觉、更加主动地承担社会责任，创造社会价值，构建一家社会企业。这需要我们每个人从每天的日常工作做起。我们要进一步加强科技创新，促进生活服务业供给侧升级，带动更多的就业，和方方面面一起，构建智慧城市，创造美好生活，践行我们公司的使命“帮大家吃得更好，生活更好”。</p><p>上市后我们需要更多耐心。我们经常说，要“长期有耐心”，对未来越有信心，对现在越有耐心。上市并不意味着耐心的结束，而是真正考验耐心的开始。上市本身从来不是我们的目标，只是公司成长过程中的一个里程碑。资本市场会有起伏，大家不需要太过关心短期的股价涨跌，而要时时刻刻致力于把自己的工作做好，为客户创造更大价值。从长期来看，我们所创造的价值最终会体现在我们的股价上。</p><p>感谢每一位同事，包括曾经为这份事业付出过的老战友；感谢每一位同事的家人；感谢我们的消费者、商户、外卖骑手、生态合作伙伴、投资人以及所有支持美团的人。</p><p><strong>我们每个人每次花钱，都是在为自己想要的生活投票。</strong>让我们一起努力，为了大家的信任，也为了我们自己。<strong>既往不恋，纵情向前</strong>！</p><p>王兴<br>2018年9月20日  </p><h2 id="苦练基本功"><a href="#苦练基本功" class="headerlink" title="苦练基本功"></a>苦练基本功</h2><p>王兴认为，从商业历史来看，绝大多数公司的失败不在于没掌握高难度动作，而是基本功出了问题。基本功就是业务和管理的基本动作，把基本功练好，就能产生巨大价值。  </p><p>通用的基本功：<strong>写备忘录、周报月报的写作、有效沟通技巧</strong></p><p>用备忘录取代 PPT，<strong>备忘录能将工作用严密逻辑表述清楚，是一种很好的回顾方式，也方便阅读者更深刻理解工作的策略和进展</strong>。    </p><h2 id="每个人的三笔钱"><a href="#每个人的三笔钱" class="headerlink" title="每个人的三笔钱"></a>每个人的三笔钱</h2><p>干嘉伟和很多员工分享成长经验的时候，讲过每个人有三笔钱：“一笔是<strong>今天的钱</strong>，也就是大家现在的收入；一笔是<strong>明天的钱</strong>，也就是通过自己的成长可以获得更多的收入；但对于很多20多岁的年轻人而言，最值钱的是<strong>后天的钱</strong>，也就是你在美团的所学所获。学习成长很像零存整取，对美团发展有信心的同事都倾向于在年轻的时候获得更多的成长。”    </p><p>“美团四大名著”：《高效能人士的七个习惯》《金字塔原理》《学会提问》《用图表说话》。</p><h2 id="千亿美元市值"><a href="#千亿美元市值" class="headerlink" title="千亿美元市值"></a>千亿美元市值</h2><p>2010 年 3 月 4 日（美团上线的第一天），王兴在自己的微博写下了：“Every time you spend money, you are casting a votefor what kind of world you want.”（<strong>每次你花钱的时候，你都在为你想要的世界投票</strong>）   </p><p>2019 年第二季度的财报数据显示，美团第二季度营收 227 亿元，同比增长 50.6%，经调整净利润 15 亿元，<strong>首次实现整体盈利</strong>。同时，上半年公司实现营收 418.8 亿元，同比增长 58.9%，经调整净利润 4.53 亿元。也就是说，美团不仅实现了季度盈利，而且还实现了上半年整体盈利。  </p><p>2020 年 3 月 30 日，美团发布了 2019 年全年财报。数据显示，2019年全年，美团收入达到 975 亿元，同比增长 49.5%，经调整净利润达 47 亿元。从全年收入来看，餐饮外卖业务、到店及酒店旅游业务、新业务（包括零售、供应链解决方案、共享单车、网约车等）营收贡献分别约为 548 亿元、223 亿元、204 亿元。  </p><p>2020 年 5 月 26 日，港股开盘后，美团一直大涨，收盘时，股价报 138.9 港元/股。美团港股总市值达到 8093.34 亿港元，突破 1000 亿美元。至此，美团已经跻身国内互联网公司市值前三，并成为继阿里、腾讯之后，国内第三家市值超过千亿美元的互联网公司。   </p><p>2015 年 5 月，王兴在内部管理论坛上交流时，提出要将美团打造成一家超过千亿美元市值的公司。经过整整五年时间的长跑，2020 年 5 月，美团终于成为一家超过千亿美元市值的公司。  </p><p>预测未来，最好的办法就是去实现它。    </p><h2 id="两句美团老话"><a href="#两句美团老话" class="headerlink" title="两句美团老话"></a>两句美团老话</h2><p>第一句：人们往往会高估一两年时间发生的变化，但低估十年时间发生的变化。  </p><p>第二句：坚持做正确的事情，是在一次次的资源投入选择、产品迭代选择、方向选择中兑现的。当然，<strong>如果你坚持做正确的事情，在坚持所带来的正面结果上，其实兑现的周期常常比大家想象的短很多</strong>。</p><p>2020 年 3 月 4 日，美团迎来了十周岁生日。王兴给全体员工发了内部邮件。   </p><p>十年一瞬，以客户为中心、长期有耐心、坚持做正确的事而不是容易的事、拥抱变化、每天前进 30 公里、我不会但我可以学、苦练基本功……这些我们相信的，是十年来我们一路前行的航标，也将继续指引我们远航。   </p><p>新的十年，我不祝大家一帆风顺，我祝大家乘风破浪！<br>新的十年，既往不恋，纵情向前！   </p>]]></content>
    
    
    
    <tags>
      
      <tag>阅读</tag>
      
      <tag>美团</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>近期值得关注的 App 及使用技巧</title>
    <link href="/2021/06/23/2021-6-23-apptips/"/>
    <url>/2021/06/23/2021-6-23-apptips/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 大家好，我是安哥。</p><p>今天发一些比较零散的东西，包含我意外发现的一些 App 功能、软件下载可能会遇到的问题，主题不定，希望对你有帮助。</p><h2 id="奇点：将微博同步到-Twitter"><a href="#奇点：将微博同步到-Twitter" class="headerlink" title="奇点：将微博同步到 Twitter"></a>奇点：将微博同步到 Twitter</h2><p>奇点，是 iOS 上的一个第三方微博客户端，视觉设计看起来有点像是 Twitter，功能不多介绍，这里只想介绍它的一个小功能——<strong>将微博动态同步到 Twitter</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/IMG_E0C109A76AA0-1.jpeg" alt="IMG_E0C109A76AA0-1"></p><p>以前我也折腾过将微博动态同步到 Twitter，不过用的是自动化服务 IFTTT，现在 IFTTT 已经无法实现这一功能了。</p><p>在奇点中使用这一同步功能的时候，需要挂着木弟子，否则就会遇到同步失败的问题。</p><p>奇点是由国内的开发者 @图拉鼎 开发的，关于他的更多作品，可以参考之前发布过的文章：</p><p><a href="https://mp.weixin.qq.com/s/lSVYwt08DmIR3gKSYcCyBw">值得关注的小众软件背后，还有一群可爱的开发者</a></p><h2 id="iPhone-自带的听歌识曲功能"><a href="#iPhone-自带的听歌识曲功能" class="headerlink" title="iPhone 自带的听歌识曲功能"></a>iPhone 自带的听歌识曲功能</h2><p>这是我最近才发现的一个点，原来 iPhone 也自带了听歌识曲的功能，只是我从未发现，也没有将它打开。</p><p>苹果之前收购了一款听歌识曲应用 Shazam，后来它将这个应用的功能<strong>集成到了 iOS 系统中</strong>，让我们可以在无需安装 Shazam 的情况下，就能用上听歌识曲。</p><p>我们有两种方式使用这个功能：一种是呼叫 Siri，「嘿 Siri，听听这是什么歌？」，另一种则是将它添加到<strong>控制中心</strong>中。</p><p>打开系统设置 &gt;&gt; 控制中心，将下方「更多控制」的「音乐识别」拖拽到上方的「包含的控制」中，添加之后，我们就可以在屏幕顶部的下拉菜单中，看到这个音乐识别的按钮啦。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/IMG_9246.PNG" alt="IMG_9246"></p><h2 id="QQ-音乐-for-Mac"><a href="#QQ-音乐-for-Mac" class="headerlink" title="QQ 音乐 for Mac"></a>QQ 音乐 for Mac</h2><p>之前曾简单介绍过，相比 Windows 系统，Mac 版的 QQ 音乐增加了「<a href="https://mp.weixin.qq.com/s/w_W_vhBZM3RwZry8uCs6dA"><strong>歌词动效</strong></a>」的功能，在音乐的歌词页面右下角，就能看到这个按钮。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210623085202303.png" alt="image-20210623085202303"></p><p>前阵子发现它又增加了其他的样式，从最初只有折叠水波、时光隧道两种样式，增加到了现在的 10 种样式，使用动效之前需要先下载，下面👇我截取了其中两种样式，这里就不放录制的动效了。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210623085821611.png" alt="image-20210623085821611"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210623085846710.png" alt="image-20210623085846710"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210623085956877.png" alt="image-20210623085956877"></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210623085056124.png" alt="image-20210623085056124"></p><h2 id="VS-Code-下载速度慢"><a href="#VS-Code-下载速度慢" class="headerlink" title="VS Code 下载速度慢"></a>VS Code 下载速度慢</h2><p>这周写的 <a href="https://mp.weixin.qq.com/s/5dTb1e3qRGf3Jhom6oO1yg">Python 抓取 B 站弹幕</a>的文章，我用到了微软推出的代码编辑器 <strong>VS Code</strong>，可能是因为装了太多插件，影响到 VS Code 的正常运行，软件提示我说「VS Code 已损坏」，让我重装软件。</p><p>于是我照做，打算从 VS Code 官网下载最新版的应用，但却遇到了另外一个问题：下载速度慢得龟速，下到一半还提示下载错误。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210623211331657.png" alt="image-20210623211331657"></p><p>这与我很久之前从官网下载 VS Code 是完全不一样的体会，这回给我的直觉就是：又多了一个给高墙挡住的官网了。</p><p>后来从网上翻了一下，才找到一个经国内 CDN 加速的下载地址，才顺利下载到最新版本的应用：</p><p><em><a href="https://vscode.cdn.azure.cn/stable/507ce72a4466fbb27b715c3722558bb15afa9f48/VSCodeUserSetup-x64-1.57.1.exe">https://vscode.cdn.azure.cn/stable/507ce72a4466fbb27b715c3722558bb15afa9f48/VSCodeUserSetup-x64-1.57.1.exe</a></em></p><p>如果你是 Mac 用户，可以从这个链接下载：</p><p><em><a href="https://vscode.cdn.azure.cn/stable/507ce72a4466fbb27b715c3722558bb15afa9f48/VSCode-darwin.zip">https://vscode.cdn.azure.cn/stable/507ce72a4466fbb27b715c3722558bb15afa9f48/VSCode-darwin.zip</a></em></p><p>关于如何找到最新版 VS Code 在国内 CDN 加速下载的地址，有个网友给我提供了一个网址：</p><p><em><a href="https://update.code.visualstudio.com/api/update/darwin/stable/VERSION">https://update.code.visualstudio.com/api/update/darwin/stable/VERSION</a></em></p><p>在浏览器中打开这个网址，会返回下方的内容：</p><ul><li>url：这个 url 就是 Mac 版 VS Code 的下载链接</li><li>productVersion：这是 VS Code 最新的版本号</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210623210605496.png" alt="image-20210623210605496"></p><p>要想得到 Windows 版 VS Code 的下载链接，我们需要手动更改一下上面的 url，将 url 末尾的 <code>-darwin.zip</code> 替换为 <code>UserSetup-x64-最新的软件版本号.exe</code>，就可以得到前面的 Windows 版下载链接啦。  </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a><strong>欢迎关注</strong></h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">   </p><p>以上就是本次想和你分享的内容。<br>看完文章如果觉得对你有帮助的话，别忘了点击底部的「<strong>点赞/在看</strong>」鼓励一下我，谢谢。</p>]]></content>
    
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>音乐</tag>
      
      <tag>同步</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用 Python 爬取 B 站视频弹幕，生成词云图</title>
    <link href="/2021/06/19/2021-6-19-python_bili/"/>
    <url>/2021/06/19/2021-6-19-python_bili/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 大家好，我是安哥。</p><p>最近 B 站上有一个超火且非常洗脑的视频《蜜雪冰城主题曲MV 中英双语版》，视频中原来的歌词是「<strong>你爱我，我爱你，蜜雪冰城甜蜜蜜</strong>」。</p><p>看到有些网友在弹幕中把它篡改成「<strong>你碍我，我碍你，你学编程天灭你</strong>」，哈哈哈哈哈。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640.png" alt="图片"></p><p>为了弄清这些有趣的网友都在弹幕中说了啥，结合我之前学会的一点 <strong>Python 爬虫</strong>的知识，我用 Python 抓取了这个视频的所有弹幕，并将弹幕做成了如下的<strong>词云图</strong>：</p><p>词云图会自动将比较长的弹幕拆分成单个的词汇，之后根据单个词汇出现的频率来决定字号的大小，<strong>字号越大，说明在弹幕中出现的频率越高</strong>。</p><p>显而易见，出现次数最多的弹幕当属「<strong>哈哈哈哈哈哈</strong>」，即便长大了，听到这可爱的儿歌，看到这萌萌哒雪人，还是会觉得欢乐无穷。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619210847892.png" alt="图片"></p><p>看完上面的词云图，如果你想知道词云图是怎么生成的，可以继续看下面的文章。</p><p>我也将用到的源码放到了 GitHub 上，有需要的朋友可以前往 GitHub 下载或复制代码，跟着我一起「<strong>改代码</strong>」，之后就能<strong>随意抓取任意 B 站视频的弹幕了</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619210858176.png" alt="图片">  </p><p><strong>抓取 B 站视频弹幕 Python 代码</strong>：<br><a href="https://github.com/phh95/pythonProject/tree/main/%E6%8A%93%E5%8F%96B%E7%AB%99%E5%BC%B9%E5%B9%95">https://github.com/phh95/pythonProject/tree/main/%E6%8A%93%E5%8F%96B%E7%AB%99%E5%BC%B9%E5%B9%95</a>       </p><p><strong>制作词云图的流程</strong>是这样的：先使用 <strong>dammu_spider.py</strong> 抓取视频的弹幕，得到一个<strong>包含所有弹幕的 txt 文件</strong>，再用 <strong>词云.py</strong> 将得到的 txt 文件导出为<strong>词云图</strong>。</p><h2 id="01-安装-Python"><a href="#01-安装-Python" class="headerlink" title="01. 安装 Python"></a><strong>01. 安装 Python</strong></h2><p>打开 Python 官网，下载最新版的 Python3.9.5，它支持 Windows、macOS 和 Linux 系统。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619210822844.png" alt="图片"></p><p><strong>Python 官网地址：</strong></p><p><em><a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a></em></p><p>下载之后，打开 Python 安装程序，先勾选安装面板下方的「<strong>Add Python 3.x to PATH</strong>」，再点击「<strong>Install Now</strong>」，一直点下一步等待 Python 完成安装。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619210815165.png" alt="图片来自网络"></p><p>安装好 Python 之后，为了确认我们配置好了 Python 环境，可以按下 <strong>Win + S</strong> 打开 Windows 自带的搜索，输入 <strong>cmd</strong>，打开「<strong>命令提示符</strong>」。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619210914887.png" alt="图片"></p><p>在打开的窗口中，输入 <strong>python</strong> 后按下回车，如果下方<strong>返回 Python 的版本号</strong>，例如我这里返回的版本号是 <strong>Python 3.9.2</strong> ，则说明 Python 已经配置妥当了。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619210922315.png" alt="图片"></p><h2 id="02-安装-Python-开发工具"><a href="#02-安装-Python-开发工具" class="headerlink" title="02. 安装 Python 开发工具"></a><strong>02. 安装 Python 开发工具</strong></h2><p>写 Python 代码有很多工具，如下图所示，这些工具被统称为 <strong>IDE</strong>，这是英文 Integrated Development Environment 的缩写，中文翻译为「<strong>集成开发环境</strong>」。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619210929929.png" alt="图片"></p><p>目前我用过的开发工具有两个，一个是社区版的 <a href="http://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649912923&idx=1&sn=26e8b3b8a7a12983c03781551b67b96f&chksm=83a87276b4dffb60265b4cc75eab2fe6e7992e924ad2577e2ae45af9a0f2ba1202c27f2f4670&scene=21#wechat_redirect"><strong>PyCharm</strong></a>，一个是微软推出的 VS Code。</p><p>如果你贪图方便的话，可以使用 PyCharm，而如果你用的是 VS Code，还需要给 VS Code 安装一个名为「<strong>Python</strong>」的插件。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619210938217.png" alt="图片"></p><p>关于如何让 VS Code 的语言变成<strong>中文</strong>以及<strong>安装插件</strong>的问题，可以看之前我写过的一篇文章：</p><p><a href="http://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649881449&idx=1&sn=56c9016004fb2cb9960d8300c230a079&chksm=83abff44b4dc7652e2957e8dfd63c5bcca8f667731bc3fd1272aa908664695313b5e8ac0c6f7&scene=21#wechat_redirect"><strong>那些排版好看的公众号，都在偷偷用这些神器！</strong></a></p><p><strong>PyCharm 下载地址：</strong></p><p><em><a href="https://www.jetbrains.com/pycharm/download/">https://www.jetbrains.com/pycharm/download/</a></em></p><p><strong>VS Code 下载地址：</strong></p><p><em><a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></em></p><h2 id="03-安装第三方-Python-库"><a href="#03-安装第三方-Python-库" class="headerlink" title="03. 安装第三方 Python 库"></a><strong>03. 安装第三方 Python 库</strong></h2><p>爬取 B 站弹幕的代码中，用到了 Python 没有内置的第三方库，为了不影响后续程序的运行，我们先安装一下这些第三方库：</p><ul><li>requests</li><li>jieba</li><li>wordcloud</li></ul><p>安装这些库也非常简单，先打开 <strong>Windows</strong> 自带的「<strong>命令提示符</strong>」窗口，如果你用的是 Mac 电脑，则打开 <strong>macOS</strong> 系统自带的「<strong>终端</strong>」。</p><p>在命令提示符窗口中分别输入 <strong>pip3 install + 第三方库的名称</strong>，例如安装 wordcloud 库，就输入 <strong>pip3 install wordcloud</strong> 。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619210950937.png" alt="图片"></p><p>如果程序可以顺利安装的话，在末尾会提示「<strong>Successfully installed</strong>」，至于最末尾出现的黄色警告文字「WARNING」，它是警告信息而不是报错，可以忽略它们。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619210956347.png" alt="图片"></p><p>重复上面的操作，分别逐一安装三个第三方库 requests、jieba 和 wordcloud。</p><p>安装好第三方库之后，就可以开始修改代码啦。由于我在 Windows 电脑上用的 IDE 是 <strong>VS Code</strong>，下面就以 VS Code 来演示如何修改 Python 代码：</p><h2 id="04-修改抓取视频弹幕的代码"><a href="#04-修改抓取视频弹幕的代码" class="headerlink" title="04. 修改抓取视频弹幕的代码"></a><strong>04. 修改抓取视频弹幕的代码</strong></h2><p>在 VS Code 中使用快捷键 <strong>Ctrl + N</strong> 新建一份文档，刚开始我们需要确定我们想使用的编程语言。</p><p>点击文档第一行的蓝色文字「<strong>选择语言</strong>」，在弹出的输入框中输入 Python，点击下方返回的 Python。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211003487.png" alt="图片"></p><p>打开 GitHub 上的 danmu_spider.py 文件，用鼠标选中所有代码，右击选择「复制」。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211009372.png" alt="图片"></p><p>将复制的代码粘贴到 VS Code 中，我们最先要更改的代码是 <strong>url 的值</strong>，这个 url 指向的是<strong>视频的弹幕地址</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211014766.png" alt="图片"></p><p>打开你想抓取弹幕的 B 站视频，按下 <strong>F12</strong> 键，打开<strong>浏览器开发者工具</strong>，切换到 <strong>Network</strong> 选项卡，再点击视频右侧弹幕列表的「<strong>展开</strong>」按钮。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211019811.png" alt="图片"></p><p>拖动开发者工具右下角的滑钮，将其拖拽到底部，接着点击弹幕列表底部的「查看历史弹幕」，随意选择一个日期。</p><p>例如我选择查看 <strong>6 月 10 日</strong>的弹幕，下方的开发者工具，会新增一个后缀为 <strong>data=2020-06-10</strong> 的记录。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619210656010-20210619211025852.png" alt="图片"></p><p>点击这条记录，在右侧展开的 General &gt;&gt; <strong>Request URL</strong>，就可以看到获取这一天的所有弹幕的链接地址，<strong>复制 Request URL 后面的 https 链接</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211031366.png" alt="图片"></p><p>将其粘贴到 VS Code 中的 url 处，并**将链接末尾的日期，替换为 {date}**，这是为了后面更灵活地指定抓取的弹幕所在的日期。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211035945.png" alt="图片"></p><p>url 上方的 range(5,18) 就可以用来指定我们想<strong>抓取哪几天的弹幕</strong>，这里的 (<strong>5,18</strong>) 意思就是我想抓取蜜雪冰城视频，从 6 月 5 号到 6 月 18 号这段时间的所有视频弹幕。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211041265.png" alt="图片"></p><p>至于你需要如何修改这两个参数，可以查看对应视频的<strong>历史弹幕小日历</strong>，来决定你要如何设置这两个参数。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211047607.png" alt="图片"></p><p>接着代码中要修改的参数是 <strong>cookie</strong>，这个参数记录了你的登录信息，因此只有在浏览器中<strong>登录自己的 B 站账号</strong>，才能找到这个我们需要的参数。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211055382.png" alt="图片"></p><p>cookie 同样可以在开发者工具面板中找到，在刚点开的 06-10 记录中，向下滑动右侧的滑动，就可以在 <strong>Request Headers</strong> 中看到 <strong>cookie</strong> 了。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211101597.png" alt="图片"></p><p>将 cookie 的值复制到 VS Code 中进行替换，原本有好几行的 cookie 值会变成一行：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211107753.png" alt="图片"></p><p>这里复制的 cookie 值还有一个<strong>小问题</strong>，cookie 值里面包含了一个<strong>英文的单引号</strong>，这在 Python 中会让程序<strong>误以为 cookie 值到这里就结束了</strong>，实际上并没有。</p><p>为了解决这个问题，我们需要在这个单引号的前面加一个反斜杠 \ ，通过<strong>转义</strong>的方式，让它变成一个<strong>普通的单引号</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211205866.png" alt="图片"></p><p>接着还需要<strong>修改一下保存抓取的弹幕的 txt 文件的名称</strong>，名称可以随你起，可以是中文，也可以是英文，记得名称末尾需要<strong>带上格式后缀 .txt</strong> 。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211215478" alt="图片"></p><p>修改好以上代码之后，右击鼠标，选择「<strong>在终端中运行 Python 文件</strong>」，Python 就会开始运行当前的代码。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211221472.png" alt="图片"></p><p>运行程序没有报错、顺利的话，你就可以得到一个包含有多个弹幕的 <strong>txt 文件</strong>，这个文件位于 <strong>C 盘 &gt;&gt; 用户 &gt;&gt; 用户名</strong> 路径下。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211227217.png" alt="图片"></p><p>如果你在这个路径下找不到 txt 文件，可以使用 Windows 自带的搜索，以 txt 文件名进行搜索，应该就可以找到这个文件。</p><h2 id="05-修改导出词云图的代码"><a href="#05-修改导出词云图的代码" class="headerlink" title="05. 修改导出词云图的代码"></a><strong>05. 修改导出词云图的代码</strong></h2><p>得到所有弹幕文本之后，我们还需要将得到的文本再作进一步的处理，才能得到最终想要的词云图。</p><p>同样在 VS Code 中新建一个文档，将 GitHub 上的 <strong>词云.py</strong> 的代码复制到文档中。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211239037.png" alt="图片"></p><p>首先修改第 6 行的代码，这里需要替换成你在上一步抓取得到的<strong>弹幕 txt 文件的名称</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211244415" alt="图片"></p><p>接着来到第 25、26 行代码，这里需要设置导出的词云图所使用的字体，如果你用的是 Windows 系统，那么就使用第 25 行代码，将 26 行代码删除。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211248486.png" alt="图片"></p><p>如果你的电脑系统是 <strong>macOS</strong>，那么就使用第 26 行代码，将字体设置为苹果系统自带的<strong>苹方字体</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619210703139-20210619211253542.png" alt="图片"></p><p>接着来到文档的最后一行代码，这里用来<strong>设置导出的词云图的名称</strong>，同样图片的名称可以随意设置，最后别忘了加上<strong>格式后缀 .png</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619210703761.png" alt="图片"></p><p>修改好之后，同样右击鼠标，选择「<strong>在终端中运行 Python 文件</strong>」，运行修改好的 Python 程序。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211303730.png" alt="图片"></p><p>程序运行完毕，和之前导出的弹幕文件相同路径下，即 <strong>C 盘 &gt;&gt; 用户 &gt;&gt; 用户名</strong> 路径，就可以看到导出的词云图了。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/640-20210619211309259.png" alt="图片"></p><p>以上，就是使用 Python 抓取 B 站视频弹幕、并导出词云图的过程了，仅说明了如何修改现成的代码，如果要说清代码是如何写出的，那就要花费更多的功夫了。</p><p>本文的代码参考了一个视频和一篇文章，在此也一并列出，感兴趣的朋友可以去看一下：</p><p>[1] 【Python】爬取B站弹幕，看哪个弹幕更有梗？，<a href="https://www.bilibili.com/video/BV1UK4y137Ye">https://www.bilibili.com/video/BV1UK4y137Ye</a>    </p><p>[2] <a href="https://mp.weixin.qq.com/s?__biz=MzIwNDY5OTI2OA==&mid=2247484638&idx=1&sn=262ff53eaafb742387ab6e936cafef9c&scene=21#wechat_redirect"><strong>Python爬取B站弹幕并制作词云图</strong></a></p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a><strong>欢迎关注</strong></h2><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南">   </p><p>以上就是本次想和你分享的内容。<br>看完文章如果觉得对你有帮助的话，别忘了点击底部的「<strong>点赞/在看</strong>」鼓励一下我，谢谢。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>爬虫</tag>
      
      <tag>B站</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>✅连续日更公众号100天完成</title>
    <link href="/2021/06/04/2021-6-4-100flag/"/>
    <url>/2021/06/04/2021-6-4-100flag/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>音乐：<a href="https://y.qq.com/n/ryqq/albumDetail/003IAzUi25muDF">李健 - Marine玛琳娜</a></p><p>Hello 大家好，我是安哥。</p><p>如约而至，今天刚好是我的公众号「效率工具指南」连续日更的第 100 天。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/06/04/16227889661171.jpg" alt="-w636"></p><p>最开始想日更的时候，我写了这么一篇文章：</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649904522&idx=1&sn=fed827fe64310e6cfcc5afb9d06697a0&chksm=83a851a7b4dfd8b1b51e8abeeeeb946a044333135e37343ad063cfb91fb440ea19e0771133b9&token=2050480873&lang=zh_CN#rd">日更公众号的好处</a></p><p>后来觉得，上面这篇文章写得还是有点虚，不够接地气，后来还补写了另外一篇：</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649904906&idx=1&sn=bb9769c4f9aaf80648510b56355f4dc8&chksm=83a85327b4dfda31d3c6a4a95ca7da3be5c01e009a055f4acc6e9af512f38c3d33364c07ccbc&token=2050480873&lang=zh_CN#rd">写公众号能赚多少钱？</a></p><p>不整虚的，想让你看看我从写东西中赚到的钱，数额不多，就像一位朋友在评论区说的：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/06/04/16227910201100.jpg" alt="-w862"></p><p>这些物质激励虽然不多，但对我来说还是挺重要的，因为这是对我能够把写东西这件事坚持下来的一个重要驱动力。</p><p>人性中都有一个弱点，或者说是我们与生俱来受到的一个约束——生命有限、没有耐心，多数人都没有办法长时间做一件反馈周期长、付出了很多时间却看不到回报的事情。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/06/04/16227902471773.jpg" alt="-w747">图片来自书籍《薛兆丰的经济学讲义》</p><p>正因为这样，我们需要及时给自己制造反馈，或者说<strong>打造最小闭环</strong>，常见的例如小时候经常会有的事情：</p><blockquote><p>妈妈答应你，假设你这次考试能拿 85 分，就给你买一个游戏机。</p></blockquote><p>而写东西，其实也可以给自己制造一些比较短的、获取收益的闭环，例如我现在能想到的，就是去知乎上推荐好物，当有人买了你推荐的好物或者通过你的好物链接购买了电台平台的商品，你就可以获得平台返回给你的佣金。</p><p>虽然钱并不太多，但这也算是一种人为打造的写作的最小闭环的方法：</p><blockquote><p>从写东西中赚到钱 ➡️ 会让你坚定「写作能赚到钱」的想法，或者到把赚到的钱再投入于写作中，例如购买一台 Mac，有更舒适地码字体验 ➡️ 有了更多动力，继续写东西，继续赚到钱</p></blockquote><p>以此循环下去。</p><h2 id="到底为什么要日更？"><a href="#到底为什么要日更？" class="headerlink" title="到底为什么要日更？"></a>到底为什么要日更？</h2><p>从心底里说，我们那么辛苦地打拼，为的都是拥有更多的自由、拥有更多的闲暇，不去做那些我们不想做的事。</p><p>当我发现，老老实实打一份工并不会让人有足够的自由时，我就觉得还是得在工作之余干点自己的事情，得到 App 的万维钢老师也把个人在工作之余干的有意义的事情称为「秘密项目」。</p><p>至于想日更，我只是想着在今年做点不一样的事情，做一点之前没有做过的事情，原本只想着日更超过 30 天后就停下来，但后来收到了<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649911131&idx=1&sn=052ccfec34336842339b179f3b7014b5&chksm=83a86b76b4dfe260dbe386ce7136b0845d3db2cd63cc534326b93dd99a5eddefa1ba26a7a0f7&token=2050480873&lang=zh_CN#rd">女票的鼓励、看到一些日更同行者的坚持✊</a>，因此在日更到 45 天的时候，立下了一个新的 flag：要坚持日更到第 100 天。</p><p>很开心，我今天做到了，是时候可以停下来缓一缓了。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/06/04/16228099740580.jpg" alt="-w745"></p><p>此外，日更这件事，在一定程度上也和自己的工作相辅相成，在过去的 100 天里，我写的绝大多数文章都是工具文，这和我在工作中要写的东西是一致的，因此之前写的文章，不少都可以发在公司的号上。</p><h2 id="日更可以链接到更多的人吗？"><a href="#日更可以链接到更多的人吗？" class="headerlink" title="日更可以链接到更多的人吗？"></a>日更可以链接到更多的人吗？</h2><p>我看到一些同在日更的朋友，在谈及日更的好处的时候，会说到可以链接更多的人。</p><p>但 100 天下来，我感觉我并没有借由写东西这件事情，认识到了更多的人，目前就只认识了一个产品经理和一个同是做类似内容的网友。</p><p>一个比较明显的体会是，100 天下来文章的留言数还是那么少，来留言的大部分还是之前认识的朋友，这是我值得反思的一点。</p><p>可能还是因为我写的工具文太多，缺少内心想法的流露、缺少人间烟火味，找不到太多共鸣、可以交流的点，因而就没啥人留言，或者是自己的人设还不够具体、不够突出？</p><p>看到一些同是做工具内容的同行，它们的留言区好像就不会像我这么冷清，这应该还是我的问题。</p><h2 id="日更的意外之喜"><a href="#日更的意外之喜" class="headerlink" title="日更的意外之喜"></a>日更的意外之喜</h2><p>出乎我意料的是，日更期间，我终于接到这个公众号的第一条推广了，这是我之前没有想到的。</p><p>原本我以为只有公众号达到 1 万以上关注、阅读量稳定在 1000 附近，才达到接广告的门槛，没想到这个想法提前实现了。</p><p>感谢还没取关的朋友的理解。</p><h2 id="日更的顾虑"><a href="#日更的顾虑" class="headerlink" title="日更的顾虑"></a>日更的顾虑</h2><p>在做着一份正式工作的同时，还在高频地更新自己的公众号，被人知道了，会不会担心别人在心里嘀咕：你上班是不是在摸鱼了？顾着写自己的公众号了？</p><p>其实这不止是我遇到的问题，还有一些在公司里担任要职、一边同时维护着自己公众号的人也会遇到：</p><p>例如公众号「MacTalk」的池建强老师，但他又不太一样：</p><p>他现在在做一款名为「极客时间」的 App，就职于现在这家公司之前，他的公众号已经做得非常不错了，文章基本都有上万的阅读量，在职的时候，他凭借自己的公众号和以前积攒的影响力，给公司的产品带来了第一批用户，完成了产品的冷启动。</p><p>之前看他写的一篇文章，是这么说的：</p><blockquote><p>写公众号和做视频号并不会占用太多时间，只要管理好自己的精力就可以了。人们不做这些有价值的事情，时间也是白白浪费。而我之所以做这些东西，是因为这些东西和我本身的特质有关，和我做的事情也息息相关，比如<strong>我通过自己的影响力给产品带来冷启动付费用户几万个，是不是很有价值呢？</strong><br>——文章《<a href="https://mp.weixin.qq.com/s/lZ6rd25MAN2vRCxqx9hkIQ">你到底在忙啥呢？</a>》</p></blockquote><p>当然，我自己还没到池老师这种大腕的级别，能做的只有一些小事——把公众号文章转发到朋友圈、向身边的人推荐自家的公众号。</p><p>还有另外一位博主 @张辉，他会在自己的朋友圈高频地分享自己的所思所想，曾经我也对「工作日上班期间要不要发朋友圈」这件事存在着疑惑，对于这个问题，这位博主讲了他和他妈妈的一段对话：</p><blockquote><p>他妈妈问他，你每天在朋友圈发那些信息，你老板看了会不会不高兴，他说我老板要是在意，我早被开除几百回了。他之前换工作，也面临好几个选择，之所以选择现在的公司，是因为能够做自己。<br>做自己很难，但是很重要。其实每个人内心深处都喜欢活生生的，而不是脸谱化的人。</p></blockquote><h2 id="与日更有关的数据"><a href="#与日更有关的数据" class="headerlink" title="与日更有关的数据"></a>与日更有关的数据</h2><p>100 天下来，我的关注数从 2 月 24 日当天的 7814 增长到了现在的 9758，净增 1944</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/06/04/16227888849753.jpg" alt="-w1416"></p><p>为了验证之前一位网友说的一个观点，大意是「相比断断续续地更新，日更可以给公众号带来更多的关注」，我去翻了一下我的公众号 2020 年一年下来的关注净增数据：</p><p>2020 年初的关注数只有 1849，看到这个数字我瞬间被吓到了，原来去年最初的关注数少得可怜。。。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/06/04/16227894553969.jpg" alt="-w1412"></p><p>2020 年末的关注数是 7033</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/06/04/16227894023802.jpg" alt="-w1420"></p><p>2020 年一年下来，我的公众号净增 5184 个关注，花费了 12 个月，中间有比较迅猛的增长，应该还是有些文章受到了微信算法的推荐，感谢微信团队。</p><p>如果按照前面的算法，3 个月可以净增 1944 个关注，如果坚持连续更新一整年，理想的话，应该可以净增 7776 个关注，看起来似乎也还行？？？ </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/06/04/16227896562260.jpg" alt="-w716"></p><p>暂时不想了，还是先停下来休息一下，喘喘气吧，太累了，真不是人干的活。</p><p>看到这里，如果你有什么想要问我的，欢迎在下方的评论区留言，知无不言。</p><p>以上就是本次想和你分享的内容。<br>看完文章如果觉得对你有帮助的话，别忘了点击底部的「<strong>点赞/在看</strong>」鼓励一下我，谢谢。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南"></p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
      <tag>写作</tag>
      
      <tag>公众号</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub 个人主页美化（下）</title>
    <link href="/2021/05/28/2021-5-28-githubbeautify2/"/>
    <url>/2021/05/28/2021-5-28-githubbeautify2/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 大家好，我是安哥。</p><p>虽然我不是程序员，但还是会时不时到世界上最大的代码托管网站 <strong>GitHub</strong> 上去逛一逛，看看自己关注的人是不是 Star（收藏）了一些有意思的项目。</p><p>之前写过一篇为自己的 GitHub 主页添加<strong>个性小标签</strong>的方法，效果见下图：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222128050423.jpg"></p><p>添加个性小标签的方法见👉👉：<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649909962&idx=1&sn=cc1b4341f2940a75214ead8c3c2ccf3d&chksm=83a86ee7b4dfe7f10daef1ceef82005ccc4f5d6c6fb97d57ca297039b54d0ddb4e8d389cc18a&scene=21#wechat_redirect">如何美化 GitHub 个人主页？</a>  </p><p>除了添加小标签，前段时间还在 GitHub 上看到另外一些有意思的 GitHub 个人主页。</p><p>一个是显示自己注册 GitHub 的时间、提交代码的次数、仓库的数量、以及自己最常使用的语言。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222128507232.jpg"></p><p>另一个则是显示自己的项目获得的 Stars 数量、今年提交代码的次数、创建的 issue 的数量、以及一个计算出来的总评分 A+。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222128802152.jpg"></p><p>这些实现起来其实都非常简单，只需要你稍微懂一点 Markdown 的语法。</p><p>和之前介绍过的在 GitHub 主页添加小标签一样，你需要先<strong>创建一个与你 GitHub ID 同名的 GitHub 仓库</strong>。</p><p>点击 GitHub 个人页右上角的加号 + ，在弹出的面板中，选择「<strong>New repository</strong>」，创建一个新的 GitHub 仓库。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222129097996.jpg"></p><p>Repository name 是仓库的名称，这里的仓库名必须与前面的 Owner 下方的 GitHub ID 一样，例如我的 ID 为 phh95，因此这里的仓库名也为 phh95。</p><p>创建时记得勾选从下方的「<strong>Add a README file</strong>」，在仓库中添加一个名为 README 的 Markdown 文件，等会我们就是要在这个文件中添加我们想放在 GitHub 个人主页的内容。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222129328640.jpg"></p><h2 id="01-Metrics"><a href="#01-Metrics" class="headerlink" title="01. Metrics"></a>01. Metrics</h2><p>获得类似下图的 GitHub 数据统计，需要用到一个在线工具「Metrics」，打开网站之后，在左侧输入你的 GitHub ID，稍等一会，就会返回右侧所有和你相关的数据。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222129571049.jpg"></p><p>这里输入阮一峰老师的 ID 进行举例，右侧就是这个网站返回给我们的统计数据。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222129720474.jpg"></p><p>点击右侧的 Markdown code 选项卡，切换到统计视图对应的 Markdown 链接。</p><p>如果这是你的 GitHub 账号统计数据，可以点击下方的<strong>蓝色链接</strong>，它会将这个链接添加到和你 GitHub ID 同名仓库中，这样你就可以在个人首页看到这些统计数据啦。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222130089032.jpg"></p><p>Metrics 网址：<br><em><a href="https://metrics.lecoq.io/">https://metrics.lecoq.io/</a></em></p><h2 id="02-显示常用的编程语言"><a href="#02-显示常用的编程语言" class="headerlink" title="02. 显示常用的编程语言"></a>02. 显示常用的编程语言</h2><p>在 GitHub 个人页显示最常用的编程语言，只需要在与 GitHub ID 同名的仓库的 README.md 文档中添加下面的文本：</p><p><code>![这里写你的昵称&#39;s Most used languages](https://github-readme-stats.vercel.app/api/top-langs?username=这里替换成你的 GitHub ID&amp;show_icons=true&amp;count_private=true&amp;theme=gotham)</code></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222130457996.jpg"></p><p>复制后稍作修改，向下滑动页面，点击绿色的「<strong>Commit changes</strong>」按钮，提交确认刚刚作出的修改。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222130630284.jpg"></p><p>再回到自己的 GitHub 主页，它就会显示<strong>你最常使用的编程语言</strong>，这个统计数据来自于你 Push 到 GitHub 的内容。</p><p>譬如我之前将一些在本地写的 Python 文件 Push 到 GitHub 仓库，它就会显示我最常使用的语言为 Python。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222130817920.jpg"></p><p>如果你觉得这个显示常用语言的样式不好看，还可以更改文本链接末尾的<strong>参数设置</strong>，例如隐藏底部的深色边框。</p><p>下图的效果对应的文本内容为：</p><p><code>![这里写你的昵称&#39;s Most used languages](https://github-readme-stats.vercel.app/api/top-langs/?username=这里替换成你的 GitHub ID&amp;layout=compact&amp;hide_border=true&amp;langs_count=10)</code></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222131079398.jpg"></p><h2 id="03-GitHub-统计卡片"><a href="#03-GitHub-统计卡片" class="headerlink" title="03. GitHub 统计卡片"></a>03. GitHub 统计卡片</h2><p>在 GitHub 上，不少人都会在自己的 GitHub 主页添加下图的 GitHub 统计卡片：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222131263530.jpg"></p><p>这个 GitHub 统计卡片，来源于 GitHub 上的一个名为「<strong>GitHub Readme Stats</strong>」的项目。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222131422494.jpg"></p><p>GitHub Readme Stats 项目地址：<br><em><a href="https://sourl.cn/Sxq854">https://sourl.cn/Sxq854</a></em></p><p>这个项目提供了中文版的说明文档，将其添加到自己的 GitHub 主页也非常简单，将下方的链接复制到 GitHub ID 同名的仓库的 README.md 文档中，稍微修改一下信息就可以了。</p><p><code>[![这里写你的昵称&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=这里替换成你的 GitHub ID)](https://github.com/anuraghazra/github-readme-stats)</code></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222131676869.jpg"></p><p>这个统计卡片还提供了<strong>其他的主题样式</strong>，即不同的配色方案，如果你想使用其他的主题，需要在上方的链接后面增加一些额外的参数。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222131892558.jpg"></p><p>举个例子，我想使用其中的一个名为 <strong>radical</strong> 的主题，我就得原先的链接后面加多两个参数的配置，一个是<strong>显示图标</strong>，一个是<strong>设置所使用的主题名称</strong>。</p><p><code>[![这里写你的昵称&#39;s GitHub stats](https://github-readme-stats.vercel.app/api?username=这里替换成你的 GitHub ID&amp;show_icons=true&amp;theme=radical)](https://github.com/anuraghazra/github-readme-stats)</code></p><p>增加了参数配置之后，原先配色方案为<strong>蓝白黑</strong>的卡片就变成了下图的<strong>粉黑青</strong>配色：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222132210757.jpg"></p><h2 id="04-添加其他平台的统计数据"><a href="#04-添加其他平台的统计数据" class="headerlink" title="04. 添加其他平台的统计数据"></a>04. 添加其他平台的统计数据</h2><p>除了前面介绍的内容，GitHub 上还有一位开发者采用了类似于「GitHub Readme Stats」的思路，写了一个在 GitHub 个人页<strong>显示其他平台统计数据</strong>的工具。</p><p>目前支持统计的网站有：<strong>知乎、B 站、LeetCode、LeetCode 中文站</strong>和<strong>掘金</strong>，下图提供了<strong>知乎统计卡片</strong>的预览效果。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/16222132545884.jpg"></p><p>对这个项目感兴趣的朋友，可以移步开发者的 GitHub 项目页面，查看具体的使用或实现方法：</p><p><em><a href="https://github.com/songquanpeng/stats-cards">https://github.com/songquanpeng/stats-cards</a></em></p><p>以上就是本次想和你分享的内容。<br>看完文章如果觉得对你有帮助的话，别忘了点击底部的「<strong>点赞/在看</strong>」鼓励一下我，谢谢。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/28/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南"></p>]]></content>
    
    
    
    <tags>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>你可以用 RSS 订阅我的博客了</title>
    <link href="/2021/05/18/2021-5-18-blogupdate/"/>
    <url>/2021/05/18/2021-5-18-blogupdate/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 大家好，我是安哥。</p><p>去年写过一篇介绍自己<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649893670&idx=1&sn=1f3f91248ade0d5f1bbe3c2046990d63&chksm=83a82f0bb4dfa61d463dfe7af7ecafa21ac0cf1bee21b1b147990b83f657f687d3857db40bf8&scene=21&token=1051004415&lang=zh_CN#wechat_redirect">创建了一个博客</a>的文章，创建博客之后，陆陆续续上传了一些文章，还不至于把博客完全荒废了。</p><p>博客，可以算是一个个人网站，相比于公众号，博客可以玩或者说可以自定义的地方更多，比如它可以像手机那样，换上各式各样的主题，给人不一样的视觉效果。</p><p>我的博客是用 Hexo 框架搭建的，下面是我收集的一些比较好看的 Hexo 主题（其实也没有收集很多主题，暂时只有三个）：</p><ul><li><a href="https://github.com/iissnan/hexo-theme-next">hexo-theme-next</a> 主题</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210514211522989.png" alt="hexo-theme-next"></p><ul><li><a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a>：最近刚看到博客主题，页面左下角带有播放音乐的控件</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210514215136167.png" alt="image-20210514215136167"></p><ul><li><a href="https://github.com/fluid-dev/hexo-theme-fluid">hexo-theme-fluid</a>：我的博客目前正在使用的 Hexo 主题</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210514215958123.png" alt="image-20210514215958123"></p><h2 id="如何为-Hexo-博客换上不同的主题？"><a href="#如何为-Hexo-博客换上不同的主题？" class="headerlink" title="如何为 Hexo 博客换上不同的主题？"></a>如何为 Hexo 博客换上不同的主题？</h2><p>如果你对前面介绍的 Hexo 主题感兴趣，可以去 GitHub 上搜索主题的名字，就能找到对应主题的代码文件。</p><p>点击绿色的「Code」按钮，选择「Download ZIP」，下载整个项目的源文件。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212610267455.jpg" alt="-w1520"></p><p>将下载的 ZIP 文件解压，将解压后的整个文件放进 Hexo 博客的 themes 文件夹中。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212615371840.jpg" alt="-w1112"></p><p>下载下来的主题一般都会带有主题作者的信息，在应用到自己的博客之前，需要先进行修改。</p><p>如果你不知道如何修改主题中的信息，可以查看主题的作者是否提供了主题的「说明文档」或「使用文档」。</p><p>以我在用的 Hexo 主题「hexo-theme-fluid」为例，主题的作者写了一份详细的「配置指南」，给初次使用第三方主题的人提供了非常详细的指导。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212648922137.jpg" alt="-w1520"></p><p>Hexo 主题「hexo-theme-fluid」配置文档：<br><em><a href="https://hexo.fluid-dev.com/docs/guide/">https://hexo.fluid-dev.com/docs/guide/</a></em></p><p>如果你使用的 Hexo 主题没有提供配置文档，也可以来参考上面的配置文档，因为多数 Hexo 主题的配置，都是大同小异的。</p><h2 id="添加-RSS-订阅链接"><a href="#添加-RSS-订阅链接" class="headerlink" title="添加 RSS 订阅链接"></a>添加 RSS 订阅链接</h2><p>虽然之前写过一篇介绍<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649904885&idx=1&sn=4cf0407adfa94e0e855ca3a5bc3bda20&chksm=83a852d8b4dfdbce023212961dfb446fc4fd8a8e595ea762ad8711602dd9c551811cdff19ca6&token=1051004415&lang=zh_CN#rd">通过 RSS 来订阅多个内容平台</a>的文章，但我自己却没有为自己的博客生成 RSS 订阅链接的意识🤦‍♂️</p><p>想起来要给博客添加 RSS 订阅链接，还是推特上一位网友给我提的。</p><p>为博客添加 RSS 订阅链接，需要安装一个插件「hexo-generator-feed」，具体可以参照 GitHub 上的一个项目「hexo-generator-feed」。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212660487438.jpg" alt="-w1520"></p><p>hexo-generator-feed 项目地址：<br><em><a href="https://github.com/hexojs/hexo-generator-feed">https://github.com/hexojs/hexo-generator-feed</a></em></p><p>这个插件需要在终端中使用 <strong>npm</strong> 命令行工具安装<br>安装之前，需要打开<strong>终端</strong>（终端在 Windows 上叫做「命令行」），使用 <code>cd</code> 命令进入 Hexo 博客项目文件存放的位置。</p><p>例如我将 Hexo 博客项目文件存放在本地磁盘的 /workspace/hexo_blog 路径下，因此 <code>cd</code> 命令输入的内容如下：</p><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> workspace/hexo_blog</code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212663991058.jpg" alt="-w1152"></p><p>进入 Hexo 博客项目文件所在的位置后，输入下方的命令安装「hexo-generator-feed」插件：</p><pre><code class="hljs sql">npm <span class="hljs-keyword">install</span> hexo-generator-feed <span class="hljs-comment">--save</span></code></pre><p>安装了插件后，我们还需要对插件进行配置，插件项目的说明文档也对配置进行了说明：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212667655383.jpg" alt="-w1520"></p><p>说明文档中配置的参数比较多，但其实我们可以偷懒，不需要配置那么多参数。</p><p>打开博客项目文件夹中的配置文件 <code>_config.yml</code>，可以用记事本打开，也可以用代码编辑器，例如微软推出的 VS Code 打开。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212673979375.jpg" alt="-w1112"></p><p>打开配置文件，滑动到文件的最底部，在最底部加上下方的内容：</p><pre><code class="hljs yaml"><span class="hljs-comment"># 订阅 RSS</span><span class="hljs-attr">feed:</span>    <span class="hljs-attr">type:</span> <span class="hljs-string">atom</span>    <span class="hljs-attr">path:</span> <span class="hljs-string">atom.xml</span>    <span class="hljs-attr">limit:</span> <span class="hljs-literal">false</span></code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212674929381.jpg" alt="-w1066"></p><p>修改好 <code>_config.yml</code> 文件后，按下快捷键 Ctrl + S 保存我们的修改。</p><p>接着打开博客项目中存放主题的文件夹 themes，接着再进入博客当前使用的主题中。</p><p>以下图为例，我进入了我使用的 Hexo 主题「fluid」的文件夹中，其中也有一个名为 <code>_config.yml</code> 的配置文件，同样使用记事本或者代码编辑器打开它。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212677314446.jpg" alt="-w1112"></p><p>同样滑动到配置文件的末尾，在空白处加上下面的一行内容：</p><pre><code class="hljs avrasm"><span class="hljs-symbol">rss:</span> /atom.xml</code></pre><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212680030990.jpg" alt="-w1066"></p><p>加入上面的一行代码之后，同样 Ctrl + S 保存文件。</p><p>此时，将所有的修改 Push 到远端的服务器，稍等一会，就可以使用 RSS 来订阅自己的博客了，RSS 链接为：<code>博客域名/atom.xml</code></p><p>举个例子，我的个人博客域名为 <code>penghh.fun</code>，我的博客 RSS 订阅链接相应地就是：<code>penghh.fun/atom.xml</code></p><p>如果你有使用 RSS 阅读器来获取信息的习惯，可以将我博客的 RSS 链接添加到你的 RSS 阅读器中：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212686091065.jpg" alt="-w1400"></p><p>这部分给 Hexo 博客生成 RSS 订阅链接的内容，参考了网友 @千古壹号 写的内容，原文如下，可扫码阅读：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/qrcodea--a1.png" alt="QRcode_A — a1"></p><h2 id="添加单篇博客阅读量统计"><a href="#添加单篇博客阅读量统计" class="headerlink" title="添加单篇博客阅读量统计"></a>添加单篇博客阅读量统计</h2><p>博客不像公众号——会在文章页面的左下角显示阅读数，如果我们想要为博客添加单篇文章阅读量的统计功能，还需要手动进行配置。</p><p>配置之前，最好先查看一下你使用的 Hexo 主题的配置文件 <code>_config.yml</code> 是否已经写好了相关的代码，只是默认暂未开启统计功能。</p><p>打开 Hexo 主题的 <code>_config.yml</code> 文件，按下快捷键 Ctrl + F 打开搜索功能，你可以<strong>试着使用下方这些关键字</strong>进行搜索，查看 Hexo 主题是否写好了统计博客阅读量的代码：</p><ul><li>web analytics</li><li>views</li><li>leancloud</li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212694034937.jpg" alt="-w1066"></p><p>譬如，我使用的 Hexo 主题「fluid」就写好了统计阅读量的代码，只是缺少相应的配置，默认就无法统计单篇文章的阅读量。</p><p>这里我使用一个第三方服务 <strong>Leancloud</strong> 来统计文章的阅读量。</p><p>首先需要打开 Leancloud 的官网，注册一个账号，注册好账号之后，点击左上角的按钮，创建一个应用。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212698785178.jpg" alt="-w1520"></p><p>创建时「应用名称」可以随你自由命名，下方的「应用计价方案」选择「<strong>开发版</strong>」就好，不需要花钱，接着点击右下角的蓝色按钮「创建」。<br><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212699186782.jpg" alt="-w1520"></p><p>创建好应用之后，打开应用的「设置 &gt;&gt; 应用 Keys」，页面中有两个参数，一个是 <strong>AppID</strong>，一个是 <strong>AppKey</strong>。</p><p>这两个参数下方的值等会要用到，暂时不要把网页关掉。<br><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212701931820.jpg" alt="-w1520"></p><p>回到博客主题的配置文件中，搜索 Leancloud，如下图所示，可以看到 leancloud 下方有两个需要配置的参数，一个是 <strong>app_id</strong>，一个是 <strong>app_key</strong>，这两个参数的值就分别对应上面说到的 <strong>AppID</strong> 和 <strong>AppKey</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212704379312.jpg" alt="-w1066"></p><p>接着我们还要开启每篇博客的数据统计的功能，在博客主题配置文件中搜索关键字 view。</p><p>每篇博客的数据统计 views 下方有两个参数，一个是 enable，将其设置为 enable 或 true 都可以；一个是统计的来源 source，设置为 leancloud。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212718906462.jpg" alt="-w1066"></p><p>完成以上配置之后，将所有变更 Push 到服务器，稍等一小会，刷新自己的博客，一般情况下，就可以在每篇博客的顶部看到阅读量的统计数据了。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212721365539.jpg" alt="-w1742"></p><h2 id="交换博客「友情链接」"><a href="#交换博客「友情链接」" class="headerlink" title="交换博客「友情链接」"></a>交换博客「友情链接」</h2><p>不像以前，现在刚起步做博客更难了，因为许多人都不怎么在电脑端阅读内容了，都更倾向于使用手机获取信息，而且人们更喜欢观看视频而非枯燥的文字内容了。</p><p>基于种种原因，从零开始做一个博客，真的难上加难。</p><p>因此，如果你刚好也有自己的博客，且有交换友情链接🔗的想法，不嫌弃的话，可以在评论区留言，我们互相在各自的博客添加彼此的链接。</p><p>你的博客链接的位置，我已经留好了。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/18/16212724879342.jpg" alt="-w1742"></p><p>以上，希望有帮助。</p>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>RSS</tag>
      
      <tag>写作</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows 写作三件套：PicGo + Typora + 腾讯云</title>
    <link href="/2021/05/13/2021-5-13-picgoandtypora/"/>
    <url>/2021/05/13/2021-5-13-picgoandtypora/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 大家好，我是安哥。   </p><p>之前发过的一些排版不太一样的文章，我都是在 Mac 上的 Markdown 写作软件 MWeb 中写的，因为我在 MWeb 中配置了腾讯云图床，每次写好文章后，使用 MWeb 内置的上传服务，将图片上传到腾讯云图床之后返回 Markdown 链接，就可以很方便地将文章分发到多个平台，<strong>不会出现图片丢失</strong>的情况。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512115719307.png" alt="image-20210512115719307"></p><p>但由于 MWeb 是苹果生态独有的软件，没有 Windows 版本，这就导致我得在 Windows 上寻找其他的替代工具，来达到同样的目的。</p><p>先列一下我在 Windows 上写文章用到的工具：</p><ul><li>写作工具：Typora</li><li>图片上传工具：PicGo</li></ul><h2 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h2><p>在 Windows 上使用 Markdown 格式来写文章，首先还是要解决<strong>图床</strong>的问题，这里我同样选择将图片上传到腾讯云。不过不像 MWeb 集成了图片上传功能，在 Windows 上传图片需要用到一个工具：<strong>PicGo</strong>。</p><p>PicGo，是一个开源免费的图片上传 + 管理工具，支持 macOS、Windows 和 Linux 系统。PicGo 配合我们等下要用到的写作工具 Typora，可以很方便地将图片上传到腾讯云图床上。</p><p>PicGo 下载链接：<br><em><a href="https://molunerfinn.com/PicGo/">https://molunerfinn.com/PicGo/</a></em></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512135204123.png" alt="image-20210512135204123"></p><p>看到这里，如果你还是有点稀里糊涂，可以将 PicGo 上传图片的过程，类比成你将本地的图片上传到 QQ 空间相册的操作，只不过我们上传的图片是存放在腾讯云、而非 QQ 空间上。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512135929312.png" alt="image-20210512135929312"></p><p>使用 PicGo 上传本地图片之前，需要先对 PicGo 进行设置：</p><p>点击 PicGo 左侧栏的图床设置，由于我想将图片存放到腾讯云，图床这里就选择「腾讯云 COS」，将 COS 版本的版本切换到 v5。</p><p>下面还有几个必须要配置的参数：</p><ul><li>SecretId</li><li>SecretKey</li><li>APPID</li><li>存储空间名</li><li>存储区域</li></ul><p>获取这些参数，需要在浏览器中打开腾讯云的官网：<a href="https://cloud.tencent.com/">https://cloud.tencent.com/</a>   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512140635868.png" alt="image-20210512140635868"></p><p>打开腾讯云登录账号之后，点击右上角的邮箱账号，选择「<strong>账号信息</strong>」，在打开的页面中，就可以看到 <strong>APPID</strong> 信息。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512141722265.png" alt="image-20210512141722265"></p><p>再次点击右上角的邮箱账号，选择「<strong>访问管理</strong>」，在打开的页面中，点击左侧栏的「访问密钥 &gt;&gt; API 密钥管理」，将页面中「<strong>SecretId</strong>」和「<strong>SecretKey</strong>」的值分别填入 PicGo 中。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512145215009.png" alt="image-20210512145215009"></p><p>接着点击左上角的「云产品」，在弹出的面板中，选择「<strong>对象存储</strong>」，进入腾讯云图床的管理页面。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512142141761.png" alt="image-20210512142141761"></p><p>点击左侧的「存储桶列表」，可以看到自己创建的图床，对于首次使用腾讯云图床的朋友，需要点击「创建存储桶」，创建存放图片的图床。</p><p>创建存储桶时，需要注意的是，我们要将「访问权限」设置为「公有读私有写」，这里的「公有读」是为了之后你将图片链接用于文章中，别人可以看到图片的内容，而不是图片显示为已丢失，「私有写」则是说只有你才有上传图片或管理图床的权限。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512143147439.png" alt="image-20210512143147439"></p><p>创建好存储桶之后，回到存储桶列表的首页，「<strong>存储桶名称</strong>」的值就是 PicGo 中的<strong>存储名</strong>，「所属区域」下的「<strong>ap-地名拼音</strong>」对应 PicGo 就是 PicGo 中的<strong>存储区域</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512142732590.png" alt="image-20210512142732590"></p><p>到这里，我们就完成了 PicGo 的配置，点击下方的「确定」按钮，桌面右下角会弹出「设置成功」的提示。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512145731492.png" alt="image-20210512145731492"></p><p>此时，你可以切换到 PicGo 左侧栏的「上传区」，将桌面的任意一张图片拖拽到中间的「上传区域」，如果桌面右下角弹出「上传成功」的通知，则说明我们已经将 PicGo 配置好了。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512150257700.png" alt="image-20210512150257700"></p><p>PicGo 有两种上传图片的方式：</p><ul><li>拖拽图片到上传区域上传，或者使用「点击上传」打开本地文件夹、上传图片</li><li>读取系统剪贴板图片后上传图片</li></ul><p>第二种上传图片的方式，就是将图片复制到系统剪贴板之后，点击「剪贴板图片」或者使用快捷键 <strong>Ctrl + Shift + P</strong>，就可以将剪贴板的图片上传到腾讯云图床。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/%E5%89%AA%E8%B4%B4%E6%9D%BF%E4%B8%A4%E7%A7%8D%E4%B8%8A%E4%BC%A0%E6%96%B9%E5%BC%8F.png" alt="剪贴板两种上传方式"></p><p>但说实话，使用 PicGo 这两种上传图片的方式，对于想一气呵成写文章的人来说，还不够高效和优雅。</p><p>基于此，我们可以配合写作工具 Typora，借助其内置的「<strong>上传服务</strong>」功能，将添加到 Typora 中的图片<strong>自动上传到腾讯云图床</strong>，替代使用 PicGo 手动上传图片的流程。</p><h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><p>Typora，是一款开源免费的 Markdown 编辑器，支持 Windows、macOS 和 Linux 系统。Typora 的编辑界面非常简洁，就像是一张白纸（我将软件背景设置为了深色）一样。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512161747802.png" alt="image-20210512161747802"> </p><p>Typora 官网：<br><em><a href="https://www.typora.io/">https://www.typora.io/</a></em></p><p>为了将我们在 Typora 编辑器中添加的图片自动上传到图床，我们需要对软件进行设置，点击左上角的「文件」，选择「偏好设置」。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512162922041.png" alt="image-20210512162922041"></p><p>切换到「图像」选项卡，首先将顶部的「插入图片时」的「无特殊操作」更改为「上传图片」，即我们往 Typora 添加图片的同时，自动执行上传图片的操作。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512163837665.png" alt="image-20210512163837665"></p><p>接着勾选下方的两个选项——「对网络位置的图片应用」和「插入时自动转义图片 URL」。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512163753994.png" alt="image-20210512163753994"></p><p>下面的<strong>上传服务</strong>选择「<strong>PicGo（app）</strong>」，PICGo 路径选择 PicGo 应用安装的位置。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512164010827.png" alt="image-20210512164010827"></p><p>完成这些设置之后，回到 Typora 的编辑界面，当你将电脑本地的图片拖拽到 Typora、或者往 Typora 粘贴剪贴板中的图片时，插入图片的同时，它就会自动上传到腾讯云图床，并返回图片对应的 Markdown 链接。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/%E6%B7%BB%E5%8A%A0%E5%9B%BE%E7%89%87%E7%9A%84%E5%90%8C%E6%97%B6%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87.gif" alt="添加图片的同时自动上传图片"></p><p>至此，借助 PicGo 和 Typora 的上传服务，我们在文章中添加的图片，就存放在我们自家的图床上。这样当你把在 Typora 中写好的内容粘贴到其他的内容平台时，就再也不会遇到粘贴过去图片丢失的问题了。</p><p>值得一提的是，写稿子的人最怕遇到的一件事情，可能是写到一半还没保存的文档一不小就丢失了，如果你想把 Typora 作为你的主力编辑器，记得<strong>先打开它的「自动保存」</strong>，预防扑街。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/PicGo/image-20210512165707339.png" alt="image-20210512165707339"></p><p>以上就是本次想和你分享的内容。<br>看完文章如果觉得对你有帮助的话，别忘了点击底部的「点赞/在看」鼓励一下我，谢谢。</p><p>我的年度目标：公众号达到 1 万关注<br>目前进度 9086/10000<br>需要得到你的支持<br>公众号千千万，在比特世界相遇也是一种缘分<br>还没关注的朋友，请点下面👇👇的卡片关注   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/27/gong-zhong-hao-xiao-lu-gong-ju-zhi-nan.png" alt="公众号：效率工具指南">   </p>]]></content>
    
    
    
    <tags>
      
      <tag>写作</tag>
      
      <tag>Markdown</tag>
      
      <tag>编辑器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>相聚总是很短，离别总在眼前。</title>
    <link href="/2021/05/12/2021-5-12-workmate/"/>
    <url>/2021/05/12/2021-5-12-workmate/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/12/img0869de-fu-ben.jpg" alt="部门白云山之行"></p><p>之前有一回和水韬聊到，好像家庭背景不是很好的孩子，长大之后在做选择的时候，总会显得优柔寡断、不够爽快、包袱太多。</p><p>不像出身阔绰家庭的孩子，他们选择做一件事的时候，会更多地考虑自己当下的状态，这一刻爽或舒服就够了，他们不会太去忧愁说，如果现在这么任性，「明天」该怎么办？</p><p>比较巧的是，这位朋友和我，我们俩都属于前一种人。</p><p>而且，即便我不去忧愁，不去考虑那么多东西，身边的人可能也会催促你去忧愁，催促你紧张甚至是焦虑起来。</p><p>前面铺垫这么多，其实想说的还是职业上的选择。</p><p>今晚想了想，一份工作，要想让自己觉得很满意，除了看得见摸得着的钱💰，可能还受到这些因素的影响：</p><ul><li>是否认同你自己正在做的事情，或者说如果你变成一个消费者，你是否会购买自己公司的产品</li><li>是否能与同事建立良好的关系</li><li>是否认同或尊重与你一起共事的人</li><li>是否能从中获得满足感或者成就感</li><li>是否能让自己获得成长而不是单调地重复</li><li>是否拥有良好的企业文化</li></ul><p>工作三年，身边的人来了一茬，又走了一茬，其中有少数几个自己喜欢、觉得日后能成为朋友的同事，当得知 TA 们要离开的消息，心情总是会变得很低落。</p><p>对于 TA 们的离去，我似乎也没有什么好的办法，将他们挽留下来，因为我确实没办法，只能眼睁睁地看着 TA 们离去。</p><p>现实就是这么残忍：相聚总是很短，离别总在眼前。</p><p>和 TA 们一起共事的时光，没有发生过像职场剧或者宫斗剧那些恶心的事情，相处也很愉快。</p><p>在公司里，最开始我倾向于独立行动，下班后为了能有单车骑车回家，我选择了先回家再吃饭。</p><p>后来一位同事好几次问我下班后要不要一起吃饭，为了不显得不合群，我答应了。</p><p>连着和同事一起吃了几次饭之后，下饭后一起吃饭，好像就变成了约定俗成的事情。吃饭的间隙，我们会聊一些对方的八卦（感情经历）、游戏、最近在看的剧等等。</p><p>吃饭唠嗑的时候，才是我比较放松的时候，不想在办公室里那么拘谨，那种感觉，有点像是回到了学生时代、和朋友吃饭唠嗑的场景。</p><p>正因为这样，之前共事的时光，现在回想起来，不仅是周日晚上绞尽脑汁思考要写什么的苦恼，也有我们一起吃饭唠嗑、一起去白云山、一起去音乐节、一起做饭的快乐回忆，那些种种，才是更尤为珍贵的东西。</p><p>写这篇文章的过程中，我想到了一件事：希望未来有一天（可能是我们都退休的时候），能有机会重新聚到一起，讲述自己一路走来的各种事情，相遇的人会再重逢。</p><p>祝福你们。</p><p>音乐：<br>摩登兄弟刘宇宁 - 如约<br>杨宗纬 - 初爱<br>李健 - 温暖   </p>]]></content>
    
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>工作</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学 Python 前的准备工作</title>
    <link href="/2021/05/09/2021-5-9-pythoninstall/"/>
    <url>/2021/05/09/2021-5-9-pythoninstall/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>本文不是广告，请不要因为你在朋友圈或许多公众号看到的 Python 课程文案/广告，而也把本文误认为是一篇广告。</p><p>这只是我作为一名 Python 初学者写的一篇 Python 入坑前的准备工作的文章。</p><h2 id="为什么要学-Python？"><a href="#为什么要学-Python？" class="headerlink" title="为什么要学 Python？"></a>为什么要学 Python？</h2><p>做任何一件事之前，可能都会有无数个理由，但我目前还没想得特别清楚，可能包含下面一个或多个原因：</p><ul><li>想了解一下，这个语言真的有传说中的那么神奇吗？可以解放双手？可以让我们从繁琐枯燥的重复劳动中解放出来？</li><li>听说 Python 的学习曲线比较缓，比较适合无编程基础的人学？想来试试。</li><li>想知道，我学 Python 多久之后就会放弃？因为学 Python 之前，我还买过两门开发微信小程序的课程，学到一半没做出个啥就放弃了。</li><li>想着 100 天公众号日更即将结束（目前进度 74/100），我想试试能不能坚持做别的事情 100 天看看？于是我选择了 Python。</li><li>觉得会用 Python 抓取自己想要的数据，这个行为本身就很「极客」。</li><li>最后一个理由：人生苦短，我选 Python。</li></ul><h2 id="选择哪个版本的-Python"><a href="#选择哪个版本的-Python" class="headerlink" title="选择哪个版本的 Python"></a>选择哪个版本的 Python</h2><p>这可能是初学者都会面临的问题，现如今 Python 分为 Python 2 和 Python 3 两个版本。</p><p>为方便之后使用各种第三方 Python 库，这里推荐安装 Python 3。</p><h2 id="安装-Python"><a href="#安装-Python" class="headerlink" title="安装 Python"></a>安装 Python</h2><p>一种比较简单的安装方式就是从官网下载安装包。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/08/16204828409010.jpg" alt="-w1517">Python 官网地址：<br><em><a href="https://www.python.org/">https://www.python.org/</a></em></p><p>对于 Mac 用户，还可以通过包管理工具 <strong>Homebrew</strong> 来安装 Python。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/08/16204829008263.jpg" alt="-w1517">Homebrew 官网地址：<br><em><a href="https://brew.sh/index_zh-cn">https://brew.sh/index_zh-cn</a></em></p><p>不过用 Homebrew 之前，需要先安装 Homebrew。</p><p>关于 Homebrew 的安装，清华大学开源软件镜像站提供了安装的说明，但这份说明文档，对我这个编程门外汉来说，写得还是不够直白，所以就没参考下图介绍的安装方法。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/08/16204833576670.jpg" alt="-w1517">清华大学开源软件镜像站：<br><em><a href="https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/">https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/</a></em></p><p>我参考了一位视频 Up 主提供的方法：</p><p>打开 Mac 的终端，输入 <code>xcode-select --install</code> 安装 Xcode 的命令行工具。</p><p>输入之后，它会询问你是否安装 Xcode 命令行工具，选择安装之后等待完成下载。</p><p>注：这里其实我也不知道安装了这个 Xcode 命令行工具能干啥，我只知道 Xcode 是苹果官方推出的 IDE 工具，如果你想开发 iOS App 的话，应该离不开它。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/08/16203911851823.jpg" alt="-w1117">安装好 Xcode 命令行工具之后，我们接着就可以来安装 Homebrew 了。</p><p>Homebrew 官方提供的文件存放在 GitHub 仓库上，由于某些特殊的原因，从 GitHub 仓库下载 Homebrew 非常费劲，需要使用木弟子才能提高下载速度。</p><p>这里推荐使用<strong>国内的 Homebrew 镜像源</strong>来安装 Homebrew，下图是这位 Up 主基于清华大学的镜像仓库制作的安装 Homebrew 的命令行：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/08/16204826102268.jpg" alt="-w1552">Homebrew install 项目地址：<br><em><a href="https://gitee.com/iamhefang/homebrew-install">https://gitee.com/iamhefang/homebrew-install</a></em></p><p>在终端中输入如下的命令，接着输入电脑开机密码，就能开始 Homebrew 的安装啦：</p><p><code>/bin/bash -c &quot;$(curl -fsSL https://gitee.com/iamhefang/homebrew-install/raw/master/install.sh)&quot;</code></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/08/16203917754742.jpg" alt="-w1117">Homebrew 的文件比较大，安装的过程需要等待比较长的时间，需要耐心，当它完成安装的时候，你可以在终端看到「Installation successful」的提示。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/08/16203921686037.jpg" alt="-w1117">初次使用 Homebrew，你可以遵照软件的提示，在终端中输入 <code>brew help</code> 来查看 Homebrew 的帮助文件。  </p><p>帮助文件中提供了一些例子供我们参考，如下图的命令 <code>brew install FORMULA|CASK…</code> 就是我们等会安装 Python 需要用到的。 </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/08/16203924282234.jpg" alt="-w1117">安装好 Homebrew 之后，我们就可以通过 Homebrew 来安装 Python 了。</p><p>在终端中输入 <code>brew install python3</code>，按下回车键，等待 Python3 完成安装。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/08/16203930295687.jpg" alt="-w1270">安装好 Python3 之后，为了确认 Python3 已经安装到电脑上了，我们可以在终端中输入命令 <code>python3</code>，按下回车。</p><p>下方如果返回 Python3 的版本，例如我安装的 Python 版本是 3.9.4 ，则说明 Python 真的安装好啦。</p><p>顺带一提，在终端中运行 <code>python3</code> 会进入 Python 的解释环境，最下方的三个连续的大于号 <code>&gt;&gt;&gt;</code>，就代表我们当前已经进入了 Python 的解释器。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/08/16203932177900.jpg" alt="-w1270">此时，如果我们可以输入许多程序员刚学一门新语言时会用到的一句代码 <code>print(&#39;Hello world&#39;)</code>，下方就会返回 <code>Hello world</code>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/08/16204840244154.jpg" alt="-w1086"></p><h2 id="写-Python-代码的工具"><a href="#写-Python-代码的工具" class="headerlink" title="写 Python 代码的工具"></a>写 Python 代码的工具</h2><p>上面介绍的系统自带的终端，虽然可以作为写 Python 代码的工具，但存在不少缺点，例如不够高效，不会自动补全代码，不会有代码提示……</p><p>本着「懒就是第一生产力」的原则，我们可以选择其他更合适的工具，例如 <strong>PyCharm</strong>，来作为写 Python 代码的工具。</p><p>PyCharm 分为两个版本，一个是社区版，一个是专业版，社区版可免费使用，这对初学者来说也已经够用啦。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/08/16204844040829.jpg" alt="-w1552">PyCharm 官网下载地址：<br><a href="https://www.jetbrains.com/pycharm/download/">https://www.jetbrains.com/pycharm/download/</a></p><p>顺便一提，如果你是在校学生，可以在 PyCharm 官网以学生身份免费申请使用 PyCharm 专业版。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/08/16204841660100.jpg" alt="-w1552">学生授权申请方式链接：<br><em><a href="https://sales.jetbrains.com/hc/zh-cn/articles/207154369">https://sales.jetbrains.com/hc/zh-cn/articles/207154369</a></em></p><p>以上，就是本次想和你分享的内容。<br>希望对想学 Python 的朋友有帮助。</p><p>下回看看能不能给各位一些 Python 学习的教程哈哈哈哈，不🐦的话。</p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>更多精彩内容，欢迎关注我的个人公众号「效率工具指南」。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/08/gong-zhong-hao-xiao-lu-gong-ju-zhi-nan.png" alt="公众号：效率工具指南"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>Python</tag>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>生日快乐，何老师</title>
    <link href="/2021/05/08/2021-5-8-birthday/"/>
    <url>/2021/05/08/2021-5-8-birthday/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>今天是何老师 23 岁的生日，先祝何老师生日快乐。</p><p>刚认识她的时候，看到她的自我介绍，里面写了「金牛座」，后来逐渐熟悉之后，才确切地知道她的生日🎂。</p><p>她的生日很好记，508，记起来就像宿舍的房间号一样好记🤦‍♂️。</p><p>之前有两个朋友问过我类似的问题，说：为啥没有见到我在朋友圈发何老师的照片。</p><p>以前上大学的时候，我很羡慕那些有对象的朋友，有些会在不定时在朋友圈「秀恩爱」、「撒狗粮」。</p><p>看到他们那种行为，我也会禁不住幻想：啥时候我也可以在朋友圈里秀一会恩爱呢？</p><p>刚和何老师确定关系的时候，我也有想过要不要在朋友圈发一下照片，发的话还要想一句不落俗套的文案。</p><p>其实，在还没确定关系的时候，那时我在看一档综艺，临时想到了一句文案，不过最终还是没发出来，只留在了我的滴答清单里。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/07/16203950068775.jpg" alt="-w503">可能是过了以前那个年纪，心态不一样，觉得两个人相处得如何，不需要暴露在别人面前，或者是自己还活得太拧巴、太在意别人的看法，于是就没有在朋友圈发你的照片，希望你不要太介意。</p><p>说说我们相处下来让我比较开心或者印象深刻的事情吧：</p><h2 id="何老师给我的惊喜"><a href="#何老师给我的惊喜" class="headerlink" title="何老师给我的惊喜"></a>何老师给我的惊喜</h2><p>有一回我周六要上班，何老师在微信上跟我说「晚上要和朋友约饭」，但没具体说和谁，也没和朋友提前说好要吃什么。</p><p>后来下班准备去吃饭的时候，接到她的电话，还听到她专门录的广州地铁的提示音「本次列车开往天河客运站」，才意识到她偷偷从深圳跑过来广州、来接我下班了😭</p><p>没想到我之前随口开玩笑和她说的，「什么时候能来接我下班呢？」，真的变成了现实，她也放到了心上。</p><h2 id="何老师喜欢画画"><a href="#何老师喜欢画画" class="headerlink" title="何老师喜欢画画"></a>何老师喜欢画画</h2><p>何老师喜欢画画，最近疯狂画画，有一周画了 4 张画，真棒👍。比起打字，画画需要耐心以及更多的时间，我真是在偷懒🤦‍♂️。</p><p>何老师在老家养了一只雪纳瑞，名字叫瑞瑞，她给她花了一幅画（瑞瑞是女孩子👧）：</p><p>我见过瑞瑞的照片，这幅画和写真照一模一样，尤其那两个炯炯有神的大眼睛👀哈哈哈哈</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/07/img7251.jpg" alt="IMG_7251"></p><h2 id="何老师做的让我觉得很好笑的事情"><a href="#何老师做的让我觉得很好笑的事情" class="headerlink" title="何老师做的让我觉得很好笑的事情"></a>何老师做的让我觉得很好笑的事情</h2><p>有两回在何老师家，我们商量好在家做饭，不去外面吃。</p><p>每次想看看买什么菜之前，何老师的第一反应不是打开美团或者京东生鲜，她的第一反应是打开 B 站，先看看美食区 Up 主都在做什么好吃的😋，再决定买什么菜。</p><p>我：？？？</p><p>第一次见到这种操作——现学现做——哈哈哈哈，我觉得很好笑。</p><p>我的想法是，做饭从简单的开始就好、按自己以往知道的菜的做法做就好了。</p><p>她偏不，她说每次做饭都要挑战一下做新菜，她做过的菜有：芝士虾仁、咖喱鸡……</p><p>虽然这是何老师第一次做的菜，但我尝起来觉得味道不错，于是也只能认输了😂。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/07/getimgdata.gif" alt="getimgdata"></p><p>而且，我们之前在外面吃了不少次，工作日也都是各自在外面吃，周末有时间在家自己做饭换一下口味，对工作党来说，已经是一种莫大的幸福了。</p><h2 id="何老师给我普及了不少知识"><a href="#何老师给我普及了不少知识" class="headerlink" title="何老师给我普及了不少知识"></a>何老师给我普及了不少知识</h2><p>何老师喜欢看各种科普，比如看丁香医生、看果壳网、看一些 B 站 Up 主的视频，例如那个尺度稍微有些大、又很搞笑的 Up 主 @Vivi可爱多。</p><p>看到有意思的东西，她都会转发给我，异地恋少了一些陪伴或者面对面的接触或互动，彼此之间转发的内容，有时也可以打开我们的话匣子，作为聊天的话题。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/07/16203970948837.jpg" alt="-w1517"></p><h2 id="何老师送给我的生日礼物"><a href="#何老师送给我的生日礼物" class="headerlink" title="何老师送给我的生日礼物"></a>何老师送给我的生日礼物</h2><p>去年我生日的时候，我们还没在一起，不过何老师也送了一个让我意外的礼物：</p><p>她唱了一首歌送给我哈哈哈哈，这里就不放她唱的了，放一下原唱吧：</p><p><a href="https://music.163.com/#/song?id=1365898499">音乐 - 失眠飞行</a>   </p><p>祝何老师生日快乐，因为有了你，我的生活也变得可爱起来了：</p><p>每天和你以「宝宝」互相称呼对方，语言真的有魔力，每天和一个可爱的人聊天，瞬间也觉得自己变得可爱起来了。</p><p>感谢你，我爱你。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/07/16204014798699.jpg" alt="-w768"></p>]]></content>
    
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>亲密关系</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>运营微信公众号的工具集</title>
    <link href="/2021/05/05/2021-5-5-weblog/"/>
    <url>/2021/05/05/2021-5-5-weblog/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 大家好，我是安哥。</p><p>今天写一篇我在做这个公众号的过程中，经常会用到的一些工具，希望对正在做公众号、或者准备开始做公众号的朋友有帮助。</p><h2 id="微信公众号-X-小程序助手"><a href="#微信公众号-X-小程序助手" class="headerlink" title="微信公众号 X 小程序助手"></a>微信公众号 X 小程序助手</h2><p>这个是我很早之前就收藏的一个工具，但直到昨天，才第一次在公众号中使用。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/05/16202205504662.jpg" alt="-w1452"></p><p>它可以简化在公众号文章中插入各类小程序的流程，以插入来自 B 站小程序的视频为例，默认的插入方式需要按照下图的两个步骤，获取小程序路径，才能在文章中插入 B 站视频。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/05/16202207913715.jpg" alt="-w1079"></p><p>而这个工具简化了这个流程，只需要将你想添加的 B 站视频的网页链接粘贴到下方，它就会生成小程序跳转的地址（小程序路径），<strong>一步到位</strong>，不需要按照官方提供的流程分成两步操作。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/05/16202209788138.jpg" alt="-w1452"></p><p>微信公众号 X 小程序助手：<br><em><a href="https://www.wxmarkdown.com/">https://www.wxmarkdown.com/</a></em></p><h2 id="qrbtf-参数化二维码生成器"><a href="#qrbtf-参数化二维码生成器" class="headerlink" title="qrbtf 参数化二维码生成器"></a>qrbtf 参数化二维码生成器</h2><p>我在过往文章中用到的简约好看的二维码，都是使用这个网站生成的。</p><p>它有两种生成二维码的方式，一种是上传原始的、丑陋的二维码，另一种是粘贴网址。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/05/16202212118607.jpg" alt="-w1435"></p><p>对于生成的二维码，它提化了三种下载格式：PNG、JPG 和 SVG。</p><p>如果你刚好是一名设计师，会使用矢量设计软件 Adobe illustrator，可以对生成的 SVG 格式的二维码作进一步的改造。</p><p>qrbtf 参数化二维码生成器网址：<br><em><a href="https://qrbtf.com/">https://qrbtf.com/</a></em></p><h2 id="泥石流海报生成器"><a href="#泥石流海报生成器" class="headerlink" title="泥石流海报生成器"></a>泥石流海报生成器</h2><p>如果你觉得上面生成的二维码高端过头了，不太符合自己的风格，那么可以试试下面这一款二维码生成器——泥石流海报生成器。  </p><p>这个生成器生成的图片示例如下，完美符合许多不懂设计的人口中经常说的：「海报字要大」。</p><p>相比上面的 qrbtf，这个生成器生成的图片可以添加更多的<strong>附加信息</strong>，给未扫码的人提前预告一下扫码之后可能会看到的内容。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/05/ad48d5ee24a85d98495dc681d0d5ad9f.png" alt="ad48d5ee24a85d98495dc681d0d5ad9f"></p><p>如果你不喜欢上图这种看起来比较商务的蓝色，没关系，这个工具还有不少其他的颜色供你选择。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/05/16202220551931.jpg" alt="-w1435"></p><p>泥石流海报生成器：<br><em><a href="https://graph.readhub.cn/">https://graph.readhub.cn/</a></em></p><h2 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h2><p>一个用来上传各类小于 100 M 的文件分享工具，上传下载不限速。</p><p>之所以要用到这个，是因为有时介绍的一些软件，打开它们的官网需要用到木弟子，不方便没有条件访问的朋友下载，我就会将下载下来的安装包上传到蓝奏云，分享出来作为备用链接。</p><p>使用蓝奏云还有一个好处在于，它可以在分享的文件下方添加一个「文字描述」，方便我宣传一下自己的公众号。</p><p>虽然我平时也羞于向别人推荐我自己的公众号，但如果在这种地方都不敢去宣传自己，那也不要指望谁能帮自己张罗了。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/05/16202225216956.jpg" alt="-w1435"></p><h2 id="Emojityper"><a href="#Emojityper" class="headerlink" title="Emojityper"></a>Emojityper</h2><p>Emojityper，是一个非常有意思的 Emoji 网站，只要输入你想用的 Emoji 对应的英文，例如下图的 computer，它就会返回文本对应的 Emoji，听起来是不是有点绕呢？</p><p>说得直白一点，这个在线网站就是一个 <strong>Emoji 搜索工具</strong>，可以很方便地搜索到你想使用的 Emoji 表情。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/05/05/16202228838725.jpg" alt="-w1569"></p><p>以上就是本次想和你分享的内容。<br>看完文章如果觉得对你有帮助的话，别忘了点击底部的「点赞/在看」鼓励一下我，谢谢。</p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>我的年度目标：公众号达到 1 万关注<br>需要得到你的支持<br>公众号千千万，在比特世界相遇也是一种缘分<br>还没关注的朋友，请点下面👇👇的卡片关注     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/27/gong-zhong-hao-xiao-lu-gong-ju-zhi-nan.png" alt="公众号：效率工具指南">   </p>]]></content>
    
    
    
    <tags>
      
      <tag>微信公众号</tag>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>近期值得关注的 4 款工具</title>
    <link href="/2021/04/26/2021-4-26-pastenow/"/>
    <url>/2021/04/26/2021-4-26-pastenow/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于我的公众号「<a href="https://mp.weixin.qq.com/s/oyLp0Oi9WUzOIIb53e2-Mw">效率工具指南</a>」，欢迎移步关注。        </p><p>Hello 大家好，我是安哥。</p><p>我又来了，今天是我连续日更公众号的第 61 天，感谢你的陪伴呀。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/26/16194399756468.jpg" alt="-w636"></p><p>今天想给大家介绍一些我最近刚发现的工具，这些工具没有一个集中的主题，所以能不能帮得上你的忙，就比较随缘啦。</p><p>Have fun！Enjoy~  </p><h2 id="lofi-cafe"><a href="#lofi-cafe" class="headerlink" title="lofi.cafe"></a>lofi.cafe</h2><p>一个适合用作工作时的<strong>背景音乐</strong>的在线网站，播放的音乐节奏都比较舒缓，似乎都是纯音乐，用一个音质好的设备听起来很带感（例如 iMac，真不是吹，iMac 自带的音响真的超棒）。    </p><p>这个网站是在推特上看到一个网友 @海岛心hey 推荐的。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/26/16194397751823.jpg" alt="-w1661"></p><p>lofi.cafe 网址：<br><em><a href="https://lofi.cafe/">https://lofi.cafe/</a></em></p><h2 id="DAMA-图片智能打码"><a href="#DAMA-图片智能打码" class="headerlink" title="DAMA - 图片智能打码"></a>DAMA - 图片智能打码</h2><p>这是一个可以自动为图片「打码」的工具，通过扫描导入的照片，识别图中的隐私信息后自动打码，这些隐私包含：姓名、数字、手机号码等。</p><p>自动打码之后，如果还有一些未被打码的信息，你可以手动点击想打码的位置，App 会快速添加一个绿色的小矩形，体验非常棒，而不是想传统的打码，需要用手涂来涂去。  </p><p>这个 App 属于收费应用，价格为 3 元，只有 iPhone 和 iPad 版本。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/26/img8824.jpg" alt="IMG_8824"></p><p>DAMA - 图片智能打码 App 下载：<br><em><a href="https://apps.apple.com/cn/app/placeholder-image-privacy/id1534690075">https://apps.apple.com/cn/app/placeholder-image-privacy/id1534690075</a></em></p><p>开发这个应用的开发者的网络 ID 为 @Baye，是一名靠卖 App 为生的独立开发者，他之前还开发过另外一款应用——熊猫🐼吃短信，可用来过滤 iPhone 上的垃圾短信。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/26/16194417437004.jpg" alt="-w1616"></p><h2 id="App-Store-应用网页链接打开-404"><a href="#App-Store-应用网页链接打开-404" class="headerlink" title="App Store 应用网页链接打开 404"></a>App Store 应用网页链接打开 404</h2><p>App Store 应用网页链接是指类似于上图在浏览器中打开的网页，这样的网页我目前接触到的主要有两个域名：</p><p>一个是国内的域名——<code>apps.apple.com/cn/</code><br>一个是美国的域名——<code>apps.apple.com/us/</code></p><p>但每次打开美国域名下的 App Store 网页链接，都会遇到「找不到网页」的 404 提示。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/26/16194437225429.jpg" alt="-w1561"></p><p>之所以出现这个问题，是因为苹果的 App Store 美国域名屏蔽了来自中国的 IP，导致我们无法正常访问。  </p><p>解决这个问题，有一个非常简单的方法，就是将域名中表示美国的 <code>us</code> 更换为中国的 <code>cn</code>，一般情况下就可以顺利访问了。</p><p>如果你懒得动手去改网址中的 <code>us</code>，这里还有另外一个方法：给你的电脑浏览器安装一个插件「AppStore404」，这个插件会自动将美国域名的 App Store 链接重定向到中国区的 App Store。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/26/16194443222975.jpg" alt="-w1712"></p><p>这个插件未上架 Chrome 插件应用商店，只能从 GitHub 下载，点击页面的绿色按钮「Code」，选择「Download ZIP」，下载插件的压缩包。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/26/16194445062227.jpg" alt="-w1712"></p><p>下载到本地之后，先解压安装包，接着在 Chrome 地址栏输入 <code>chrome://extensions/</code> 打开插件管理页面，点击开启右上角的「开发者模式」，接着点击左上角的「加载已解压的扩展程序」，从本地选择刚刚解压的插件所在的文件夹📁。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/26/16194446621798.jpg" alt="-w1603"></p><p>AppStore404 浏览器插件下载地址：<br><em><a href="https://github.com/cielpy/AppStore404">https://github.com/cielpy/AppStore404</a></em></p><p>最后，再补充多一种方法：如果你有使用代理的话，将代理切换到全局模式，就可以直接打开美国域名的 App Store 链接啦。</p><h2 id="Paste-Now"><a href="#Paste-Now" class="headerlink" title="Paste Now"></a>Paste Now</h2><p>Paste Now，是 Mac 上一款剪贴板工具，它可以记录我们多次复制到系统剪贴板的所有内容，包含文本、图像、网页链接、甚至是代码。</p><p>这是一款可免费下载的买断制应用，价格为 50 元，由国内的独立开发者 @图拉鼎 开发，相比国外类似的工具 Paste（采用按年订阅的模式），这个价格已经很良心了。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/26/16194452302231.jpg"></p><p>Paste Now 与 Windows 上的剪贴板工具一脉相承的地方在于，它可以通过面板顶部的标签「全部」、「文本」、「图像」和「链接」，来快速地找到我们想要的剪贴板内容。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/26/16194451782388.jpg" alt="-w396"></p><p>此外，Paste Now 还额外增加了一个高级功能「智能列表」，它可以通过我们提前设置好的「规则」，自动为你归类剪贴板中的内容。</p><p>这个功能目前我还用不到，暂时没啥可分享的。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/26/16194460430684.jpg"></p><p>据开发者称，Paste Now 未来会推出 iOS 客户端，通过 iCloud 同步彻底打通手机和电脑之间的剪贴板，助力「在手机上复制、在电脑上粘贴」的梦想。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/26/16194461916232.jpg" alt="-w745"></p><p>如果你想更详细地了解这款应用，可以前往开发者的个人博客：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/26/qrcodea--a1.png" alt="QRcode_A — a1"></p><p>以上，就是本次想和你分享的内容。<br>更多精彩内容，欢迎移步我的公众号「效率工具指南」：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/27/gong-zhong-hao-xiao-lu-gong-ju-zhi-nan.png" alt="公众号：效率工具指南"></p>]]></content>
    
    
    
    <tags>
      
      <tag>剪贴板工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>比微信更好用的文件传输工具｜Telegram</title>
    <link href="/2021/04/24/2021-4-24-telegram/"/>
    <url>/2021/04/24/2021-4-24-telegram/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 大家好，我是安哥。 </p><p>今天来继续说一下上回介绍过的一款国外通讯工具 Telegram 的用法。</p><p>Telegram 既有网页版也有客户端，因为我既有 Windows 也有 macOS 的电脑，因此在两台电脑上都下载了客户端。</p><p>但是使用这两个客户端分别遇到了两个不同的问题：</p><h2 id="macOS-客户端无法登录"><a href="#macOS-客户端无法登录" class="headerlink" title="macOS 客户端无法登录"></a>macOS 客户端无法登录</h2><p>在 macOS 客户端的登录页输入手机号，点击下方的 Next 之后，无法顺利进入下一页，一直停留在 loading 的动画效果。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/24/16192457095838.jpg" alt="-w975">最开始我还以为是客户端的问题，卸载了从 Mac App Store 下载的软件，再从 Telegram 官网下载了另外一个版本的客户端，还是遇到了同样的问题。</p><p>后来在网上搜了一下，才找到了原因和解决方法：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/24/16192463162062.jpg" alt="-w880">图片来自 @聪聪</p><p>解决方法是这样的：点击登录页右上角的按钮，在打开的面板中，选择「<strong>Add Proxy</strong>」。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/24/16192462674658.jpg" alt="-w975">下方会弹出一个选项，选择「SOCKS5」。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/24/16192464564623.jpg" alt="-w975">这里需要填写的内容有两项，一项是 Server，一项是 Port，这两个值取决于你使用的木弟子软件。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/24/16192465170619.jpg" alt="-w975">以我为例，我在 Mac 上使用的是下图这个绿色图标的木弟子软件：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/24/16192466542669.jpg" alt="-w716">右击状态栏的软件图标，选择「高级设置」。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/24/16192467329325.jpg" alt="-w274"></p><p>在打开的窗口中，就可以看到本地 Socks5 配置的参数，这里的监听地址和监听端口，分别对应前面提到的 Server 和 Port 的值，将这个参数分别填入即可。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/24/16192468052877.jpg" alt="-w516">添加好 Proxy 之后，重启 Telegram，为保证后续登录不会出现问题，可以再次点击登录页的右上角的按钮，查看刚添加的 socks5 的连接状态，若显示的状态为 <strong>connected</strong>，则代表添加的 Proxy 可以正常运行。  </p><p>此时，回到 Telegram 的登录页，不出意外的话，就可以顺利登录了。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/24/16192470326556.jpg" alt="-w975"></p><h2 id="Windows-客户端需要开启全局代理"><a href="#Windows-客户端需要开启全局代理" class="headerlink" title="Windows 客户端需要开启全局代理"></a>Windows 客户端需要开启全局代理</h2><p>使用 Windows 版的 Telegram，在登录时并没有遇到像 macOS 版本那样的问题，但在使用的过程中，还是会有一个困扰我已久的问题：需要开启全局代理，不然就无法查看最新的消息。  </p><p>但开启全局代理，它又会影响到国内不少网站的使用，以至于我不得不在全局与 PAC 模式之间频繁切换。</p><p>看了网友 @聪聪 写的一份文档，我发现这个问题，实质上还是和 macOS 的登录问题是一样的。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/24/16192487950012.jpg" alt="-w933">解决方法：</p><p>点击 Telegram Windows 客户端左上角的三横线 &gt;&gt; Settings &gt;&gt; Advanced，进入高级选项页面。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/24/photo20210424-151557.jpeg" alt="photo_2021-04-24 15.15.57">点击 Connection type，进入网络设置页面。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/24/photo20210424-151602.jpeg" alt="photo_2021-04-24 15.16.02">选择使用自定义设置「Use custom proxy」，像前面介绍的方法一样，添加 socks5 配置，因为我两台电脑使用的木弟子是一样的，所以这里配置的值也是一样的。  </p><p>这样配置之后，使用 Telegram 就再也无需全局 Proxy 了。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/24/03.png" alt="03"></p><h2 id="使用-Telegram-在两台电脑之间传输文件"><a href="#使用-Telegram-在两台电脑之间传输文件" class="headerlink" title="使用 Telegram 在两台电脑之间传输文件"></a>使用 Telegram 在两台电脑之间传输文件</h2><p>Telegram 中有一个类似于微信「文件传输助手」的功能——Saved Messages，不过这个功能比文件传输助手更好用，好用在哪呢？</p><p>一个 Telegram 账号可以同时在两台电脑上登录，这意味着你可以借助这个功能，在两台电脑之间传输各种文件，且传输的文件不会过期，可以传输的单个文件大小上限为 2 GB。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/24/16192492668225.jpg" alt="-w975"></p><p>Telegram 客户端下载地址：<br><em><a href="https://desktop.telegram.org/">https://desktop.telegram.org</a></em>   </p><h2 id="欢迎关注"><a href="#欢迎关注" class="headerlink" title="欢迎关注"></a>欢迎关注</h2><p>本文首发于我的微信公众号「<a href="https://mp.weixin.qq.com/s/rzXeG7L5il7nb3WEnS8-Wg">效率工具指南</a>」，欢迎移步关注。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/18/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="微信公众号：效率工具指南">   </p>]]></content>
    
    
    
    <tags>
      
      <tag>Telegram</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从 Window 换到 Mac，真没有想象中的那么难。</title>
    <link href="/2021/04/17/2021-4-17-mactips/"/>
    <url>/2021/04/17/2021-4-17-mactips/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 大家好，我是安哥。  </p><p>以前苦口婆心劝别人买 iPhone 的时候，对方会用一个不成文的借口来拒绝我：  </p><blockquote><p>安卓用久了，我怕换到 iPhone 会不习惯。  </p></blockquote><p>那时我内心就 OS：俩系统能有多大的差别？差别会大到你得花一年的时间去学习或适应？ </p><p>如果真有那么大的差别，也可能只是你想象中的差别。不要低估了人的适应能力，年纪轻轻就思维固化、不敢去尝试新的东西，真是一件可怕的事情。  </p><p>世界上有众多的美好的事情，例如看不见的清新的空气，而看得见的东西就多了去了，苹果电脑应该也当属其中。  </p><p>今天的这篇文章，我整理了一些<strong>刚使用 Mac 电脑可能需要了解的东西</strong>，扫除刚从 Windows 切换到 Mac 可能会遇到的障碍。</p><h2 id="快速切换应用"><a href="#快速切换应用" class="headerlink" title="快速切换应用"></a>快速切换应用</h2><p>在 Mac 中快速切换应用有三种方法：</p><p>一种是像在 Windows 系统上的操作，按下 Command + Tab 键，桌面中央会出现切换应用的窗口。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/17/command--tab.jpeg" alt="command + tab"></p><p>另一种方式是使用触控板，<strong>四指上滑</strong>，会打开下图所示的「调度中心」，顶部可用于切换不同的桌面，中间则是你打开的所有软件窗口的缩略图，点击缩略图就可以切换到对应的软件。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/17/16186198805128.jpg" alt="-w2084"></p><p>这里再多介绍一种方法，它可以看成是第一种方法的增强版，它会在软件图标的右上角增加一个数字，方便你使用<strong>快捷键</strong>切换到对应的软件。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/17/16186201836114.jpg" alt="-w2084"></p><p>这需要在电脑安装上多安装一个软件——<strong>Manico</strong>，这是一个免费的软件，由国内的独立开发者 @图拉鼎 开发，可在应用商店下载。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/17/16186204996368.jpg" alt="-w1287"></p><p>Manico 与系统中使用 Command + Tab 呼出软件切换窗口是分离开的，它默认使用 Option 键激活切换窗口，按下 Option 键到呼出软件切换窗口，中间有一小会的时间间隔。</p><p>我现在使用的截图软件是 iShot，它的截图快捷键为 Option + A，也需要用到 Option 键，这与 Manico 默认的快捷键有一点小冲突，所以我将 Manico 的快捷键更改为了使用频率较低的 Control 键。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/17/16186206924347.jpg" alt="-w676"></p><h2 id="关闭窗口-VS-关闭应用"><a href="#关闭窗口-VS-关闭应用" class="headerlink" title="关闭窗口 VS 关闭应用"></a>关闭窗口 VS 关闭应用</h2><p>点击软件窗口左上角的关闭按钮（最左侧的红色按钮），其实只是关闭了软件窗口，并不会真正的退出关闭应用。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/17/16186223573808.jpg" alt="-w866"></p><p>关闭了软件窗口，软件还是处于后台运行的，macOS 也设计了一个小特性：如果 Dock 栏的软件图标下方有一个<strong>黑色的小圆点</strong>，说明软件<strong>正处于运行状态</strong>，要么是前台运行，要么是后台运行。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/17/16186225153243.jpg" alt="-w850"></p><p>如果你要彻底地关闭并退出某款应用，这里有两种方法：</p><p>一种是使用快捷键 Command + Q（Q 应该是 Quit 首字母的缩写，翻译为「退出」）</p><p>另一种方法是，右击 Dock 栏的软件图标，选择「退出」。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/17/16186227399475.jpg" alt="-w776"></p><h2 id="最小化窗口"><a href="#最小化窗口" class="headerlink" title="最小化窗口"></a>最小化窗口</h2><p>点击软件窗口左上角最小化按钮（中间黄色的按钮），当前窗口就会最小化显示。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/17/16186213340490.jpg" alt="-w1535"></p><p>这个最小化显示的窗口会缩放到屏幕底部 Dock 栏的最右侧，当你需要再次用到这个软件，点击缩略图就会打开软件窗口。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/17/16186214820749.jpg" alt="-w559"></p><p>这个最小化窗口的方法，可以说是使用电脑的基本操作，在 Windows 和 macOS 系统上都一样。</p><p>但对于 macOS 系统而言，它还有另外一个最小化窗口的方法——<strong>隐藏窗口</strong>，快捷键为 Command + H（这个 H 是 Hide 的首字母）。  </p><p>相比前面的最小化窗口的方法，<strong>隐藏的窗口不会在 Dock 栏的最右侧生成一个缩略图</strong>，不会导致 Dock 栏变得越来越长，且隐藏的窗口其实是位于后台运行，并没有被关闭。</p><p>此时，我们点击 Dock 栏的软件图标，就可以打开刚被隐藏的软件窗口。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/17/16186221127396.jpg" alt="-w896"></p><h2 id="最大化窗口"><a href="#最大化窗口" class="headerlink" title="最大化窗口"></a>最大化窗口</h2><p>点击软件窗口左上角的最大化按钮（最右侧的绿色按钮），确实可以将软件窗口最大化以至于<strong>填满整个屏幕</strong>，但这也会带来一个小问题：屏幕顶部的状态栏和底部的 Dock 栏都会被隐藏，Dock 被隐藏，不方便我们快速打开其他的应用或窗口。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/17/16186230947807.jpg" alt="-w1027"></p><p>如果你不太喜欢这种默认占用整个屏幕的最大化方式，可以在<strong>点击最大化按钮的同时，按下 Option 键</strong>，这样一来，就可以既让窗口最大化，但又不隐藏顶部的状态栏和底部的 Dock 栏，两全其美。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/17/16186234632829.jpg" alt="-w2084"></p><h2 id="触控板打开右键菜单"><a href="#触控板打开右键菜单" class="headerlink" title="触控板打开右键菜单"></a>触控板打开右键菜单</h2><p>这是一个我最初使用 Mac 不太适应的地方，自己摸索了一会之后，才发现在 Mac 上打开右键菜单的正确姿势：</p><p>不像 Windows 笔记本的触控板，触摸触控板右侧的区域，就可以呼出右键菜单；对于苹果触控板，需要<strong>双指按下触摸板</strong>，才可以呼出右键菜单。</p><h2 id="隐藏桌面的所有文件"><a href="#隐藏桌面的所有文件" class="headerlink" title="隐藏桌面的所有文件"></a>隐藏桌面的所有文件</h2><p>不像 Windows 系统，通过在桌面空白处右击，选择「隐藏桌面图标」，就可以快速隐藏桌面的所有文件。  </p><p>macOS 系统虽然也提供了隐藏桌面文件的方法，但操作起来比较麻烦，需要用到「终端 + 命令行」。</p><p>如果你想比较方便地隐藏 Mac 桌面的文件，推荐你安装一个软件——<strong>FreeMyDesktop</strong>。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/17/16186236678693.jpg" alt="-w320"></p><p>安装之后，点击顶部状态栏的软件图标，选择「Hide the desktop」，就可以一键隐藏桌面图标啦。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/17/16186237635317.jpg" alt="-w301"></p><p>FreeMyDesktop 是一个免费的软件，需要的朋友，可以点击下方的备用链接下载：</p><p><em><a href="https://wwx.lanzoui.com/i6qeBo7d4kd">https://wwx.lanzoui.com/i6qeBo7d4kd</a></em></p><p>以上，希望有帮助。</p><blockquote><p>本文首发于公众号「效率工具指南」，欢迎移步关注。  </p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/18/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>为什么每个人都需要学会使用 GitHub？</title>
    <link href="/2021/04/05/2021-4-5-proxy/"/>
    <url>/2021/04/05/2021-4-5-proxy/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>Hello 大家好，我是安哥。   </p><p>今天想写一下使用 GitHub 的小技巧，考虑有些人不知道 GitHub 是什么，或者以为 GitHub 是程序员才需要用到的网站，这是先介绍一下 GitHub： </p><p>如果你去百度 GitHub 是什么，很可能会看到下面这句话：  </p><blockquote><p>GitHub 是一个软件代码托管平台。  </p></blockquote><p>这句话没有什么问题，但对不是做技术的人来说，就比较难以理解。</p><p>按我的理解，这句话直白的解释就是：GitHub 是一个存放软件代码的网站。   </p><p>之所以要将代码放在网站上，可能有这么两个原因：  </p><ul><li>软件开源，即编写软件的代码对所有人公开，所有人可以在现有代码的基础上进行二次开发，减少不必要的重复劳动（IT 行话简称不要重复「造轮子」）</li><li>方便团队协作。这个过程有点像是我们把文档放在石墨或语雀这类支持团队协作的平台上，而 GitHub 上存放的是代码，参与编写软件的人可以通过 Git（版本控制工具）从 GitHub 拉取或往 GitHub 上传代码  </li></ul><p>说完了这两个原因，GitHub 好像还是和我们许多不写代码的人无关。</p><p>但我为什么还要说，每个人都需要学会使用 GitHub 呢？  </p><p>原因在于，我们可以从 GitHub 下载访问国外网站的工具，就是很多人费了好多心思在寻找的「<strong>木弟子</strong>」（前面两个字要拼成一个字）。  </p><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>Windows 上需要用到的工具如下：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/05/16176172391518.jpg" alt="-w1587"></p><p>下载页面分别提供了适合 32 位和 64 位系统的版本，按需选择下载即可。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/05/16176174210922.jpg" alt="-w1587"></p><p>下载地址：<br><em><a href="https://sourl.cn/AEB4jV">https://sourl.cn/AEB4jV</a></em></p><h2 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h2><p>Mac 上有不少工具，目前我使用的是下面这款工具： </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/05/16176176149809.jpg" alt="-w1587"></p><p>在下载页面点击下载第一个压缩包，解压后双击 dmg 文件安装即可。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/05/16176185050750.jpg" alt="-w1587"></p><p>下载地址：<br><em><a href="https://sourl.cn/hJXjNB">https://sourl.cn/hJXjNB</a></em></p><h2 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h2><p>iOS 上我使用的是下面这款工具，可从 App Store 下载，不过需要先注册一个美区 Apple ID 账号。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/05/img8617.jpeg" alt="IMG_8617"></p><p>如果你不知道如何注册美区 Apple ID 账号，可以看我之前的文章：  </p><p><a href="https://mp.weixin.qq.com/s/z6ROZNyKiynxmy1eQE9-KQ">买iPhone12之前，建议你先了解这些东西。</a> </p><h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><p>Android 系统的工具我好久没用了，只记得也是一个粉红色的图标。</p><p>下载地址：<br><em><a href="https://sourl.cn/A4ye6P">https://sourl.cn/A4ye6P</a></em></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/05/16176190925195.jpg" alt="-w1342"></p><p>👆上面分别提供了适合不同平台的工具，但即便有了这些工具，有些人还是不会用，因为还需要购买别人搭建好的服务，不会用的朋友可以试着百度看看或者问问别人。  </p><p>因为比较敏感，所以我就不详细说用法了。  </p><p>👇下面再说两个使用 GitHub 的小技巧：</p><h2 id="GitHub-小知识"><a href="#GitHub-小知识" class="headerlink" title="GitHub 小知识"></a>GitHub 小知识</h2><p>GitHub 上的多数内容都为英文，但这没关系，你可以使用浏览器右键自带的翻译功能，将页面内容翻译为中文，基本可以忽视语言带来的影响。  </p><p>如果你想快速找到某个 GitHub 项目提供的「安装包」下载链接，可以查看项目右侧是否有一个「<strong>Releases</strong>」的模块。</p><p>Releases 翻译为「发布」，即常说的软件发版或上线，点击下方的软件版本号，一般就可以快速找到软件的下载链接啦。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/05/16176178943166.jpg" alt="-w1587"></p><p>还有一个使用 GitHub 的小技巧，那就是 Star（可以理解为<strong>收藏</strong>），将你觉得有用、但现阶段可能用不到的项目暂时收藏起来，方便以后用到的时候来寻找。  </p><p>点击项目右上角的星星✨图标，就可以收藏啦：</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/05/16176195619067.jpg" alt="-w1587"></p><p>已收藏的所有 GitHub 项目，可以点击右上角的账号头像，选择「Your stars」查看：  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/05/16176196374335.jpg" alt="-w1587"></p><h2 id="解决-GitHub-打开速度慢的问题"><a href="#解决-GitHub-打开速度慢的问题" class="headerlink" title="解决 GitHub 打开速度慢的问题"></a>解决 GitHub 打开速度慢的问题</h2><p>有些地区打开 GitHub 网站速度较慢，可以使用一个名为「dev-sidecar」的工具，详情可以参考知乎上的这篇文章：  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/05/qrcodea--a1.png" alt="QRcode_A — a1"><br>以上，希望有帮助。  </p><blockquote><p>本文首发于公众号「效率工具指南」，欢迎移步关注。  </p></blockquote><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/04/18/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号：效率工具指南"></p>]]></content>
    
    
    
    <tags>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何美化 GitHub 个人主页？</title>
    <link href="/2021/03/29/2021-3-29-githubbeautify/"/>
    <url>/2021/03/29/2021-3-29-githubbeautify/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/github-g1-chip-octocat-developer-tools-developer-g.png" alt="GitHub G1 Chip octocat developer tools developer github app icon app i"></p><p>Hello 大家好，我是安哥。   </p><p>之前在 GitHub 上找东西的时候，无意间看到一位网友的 GitHub 主页弄得很好看：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/16170226251048.jpg" alt="-w1399"></p><p>对比 GitHub 主页原来默认的样式，好了不止一点两点。附上 GitHub 主页默认的样式（不要误会，我并没有批评下图的作者的意思，这张图是我随便找的）：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/16170227763856.jpg" alt="-w1433"></p><p>我后来在网上搜了一下，发现实现这个效果也不难，依葫芦画瓢做了一下，效果如下。对比原版还是有点丑，但我已经挺满意了。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/16170222939614.jpg" alt="-w1475"></p><p>下面简单讲一下实现方法：   </p><p>在 GitHub 中创建一个与 GitHub ID 同名的仓库，例如我的 GitHub ID 为 phh95，因此创建的仓库名也为 phh95。   </p><p>由于我已创建了这个仓库，所以 GitHub 会在下方提示我已经创建过同名的仓库了。     </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/16170231333641.jpg" alt="-w1475"></p><p>创建时记得勾选从下方的「Add a README file」，在仓库中添加一个 README 的 Markdown 文件，等会我们就是要在这个文件中创建我们最终想要的个人主页样式。          </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/16170233210242.jpg" alt="-w1475"></p><p>创建仓库之后，点击右上角的个人头像，选择「Your profile」回到你的 GitHub 主页，你应该就可以看到 Hi there 👋 的文本内容。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/16170236462097.jpg" alt="-w1441"></p><p>点击右侧的编辑按钮，进入 REMDME 文件的编辑状态。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/16170237918890.jpg" alt="-w1475"></p><p>进入编辑状态，这个文档是使用 <strong>Markdown 语法</strong>来编辑的，如果你之前用过 Markdown 的话，编辑起来应该非常简单，如果你没接触过，想学的话十分钟也可以入门。  </p><p>只需要记住一点，上一行结束时，要在最末尾加多至少两个空格，才能实现换行，否则本来想分行的两行内容会连在一起。       </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/16170240040252.jpg" alt="-w1475"></p><p>编辑的过程中，点击上方的「<strong>Preview changes</strong>」选项卡，查看 Markdown 渲染后的效果。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/16170242625606.jpg" alt="-w1475"></p><p>这里着重说一下个人主页中一个看起来比较高级的「小牌子」的实现方法：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/16170244947247.jpg" alt="-w989"></p><p>上面这个小牌子其实是一个 <strong>svg 图片</strong>，生成这个 svg 图片需要用到一个在线工具「Shields.io」。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/16170249379436.jpg" alt="-w1461"></p><p>这是个外国的网站，我使用浏览器自带的翻译功能将其翻译成中文。  </p><p>前面我们说的小牌子，对应的英文为 <strong>BADGE</strong>，浏览器翻译为了「<strong>徽章</strong>」。   </p><p>以前面的小牌子「写作工具｜VS Code」为例，生成这个小牌子的方法如下：   </p><p><img src="https://img.shields.io/badge/%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7-VS%20Code-blue">     </p><p>在网页 Shields.io 从左到右的三条短横线上填写：写作工具、VS Code、以及从颜色库中挑选一个颜色（这个颜色决定了第二个文本 VS Code 的背景色），最后点击右侧的「制作徽章」。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/16170252694705.jpg" alt="-w1461"></p><p>页面会返回生成的 svg 图片，效果如下图所示，觉得满意的话，复制页面地址栏的网址。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/16170255242593.jpg" alt="-w1461"></p><p>回到刚刚在编辑的 MD 文件中，先输入如下的字符，接着将刚才复制到剪贴板的链接 🔗 粘贴到英文括号 () 中，即以图片的形式将生成的 svg 图片添加到我们的 MD 文档中。     </p><p><code>![]()</code></p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/16170259342090.jpg" alt="-w1475"></p><p>将 README 文档切换到渲染视图，就可以看到我们想要的小牌子了。   </p><p>​这里只讲最简单的小牌子的制作方法，下图中的第四个 Git 小牌子制作起来会复杂一些些，其实就是在 svg 图片链接中加多了一个参数，感兴趣的朋友可以去下载别人的 GitHub 同名仓库进行拆解，这里不多讲。<br>​<br><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/16170261067119.jpg" alt="-w1475"></p><p>Shields.io 官网：<br><em><a href="https://shields.io/">https://shields.io/</a></em>  </p><p>如果你觉得我还是没讲清小牌子的用法，可以参考来自少数派上的一位作者 @SpencerWoo 写的文章《用 Substats 和 Shields.io 为你的个人主页定制动态数据小牌子》：    </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/qrcodea--a1.png" alt="QRcode_A — a1"></p><p>以上，希望有帮助。 </p><p>本文首发于我的公众号「效率工具指南」，欢迎关注。   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/29/gong-zhong-hao-wei-bu-er-wei-ma-dailogo.png" alt="公众号尾部二维码 带logo"></p>]]></content>
    
    
    
    <tags>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建博客可能会用到的 Git 命令</title>
    <link href="/2021/03/24/2021-3-24-gittips/"/>
    <url>/2021/03/24/2021-3-24-gittips/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>2019 年为了学习使用 GitHub Pages 搭建博客，我在一个 App 上买了一门和 GitHub 有关的课，但主要看了其中一讲：  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/24/16165915158049.jpg" alt="-w1266">学完这一讲之后，我还写了一篇简短的搭建博客的文章： </p><p><a href="https://mp.weixin.qq.com/s/es2mvKMy00lfasYJsjEJJg">不懂技术，如何搭建个人博客？</a>   </p><p>课程剩下的其他内容，就被我晾在一边了。上个月看到这个 App 提醒我好久没学习了，提醒的文案也很皮，「<strong>21 天了，似乎养成了不学习的习惯</strong>」，哈哈哈哈哈哈。</p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/24/img8559.jpeg" alt="IMG_8559"></p><p>买了课程没看，心里有点愧疚，就开始捡起来看一些，顺便做了一下笔记（别说了，主要是不知道今天发点啥，强行用学习笔记来凑数）。  </p><p>以下内容主要来自「极客时间」的课程《Git 三剑客》，这里的三剑客是指：  </p><ul><li>Git</li><li>GitHub</li><li>GitLab  </li></ul><p>我整理了一些在课程中用到的 Git 命令，对程序员可能是小菜一碟，可能对想搭建博客的朋友有帮助：</p><p>运行这些命令，需要有一个<strong>环境</strong>，这个环境就是电脑的「<strong>终端</strong>」，Windows 上打开「运行」，输入「cmd」，同样可以打开终端。  </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/24/16165937767585.jpg" alt="-w1066"></p><p>Git 下载地址：<br><em><a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></em></p><h2 id="安装-Git-之后，查看是否正确安装"><a href="#安装-Git-之后，查看是否正确安装" class="headerlink" title="安装 Git 之后，查看是否正确安装"></a>安装 Git 之后，查看是否正确安装</h2><p>git –version</p><p>这个命令也可以简写成 git –v</p><h2 id="创建一个新的仓库并初始化"><a href="#创建一个新的仓库并初始化" class="headerlink" title="创建一个新的仓库并初始化"></a>创建一个新的仓库并初始化</h2><p>git init hexo_blog    </p><h2 id="添加到暂存区"><a href="#添加到暂存区" class="headerlink" title="添加到暂存区"></a>添加到暂存区</h2><p>git add index.html   </p><p>注：add 后面加上做出变更的文件   </p><p>这里简单说一下 Git 的工作方式（或者说工作流程）：</p><ul><li>当前正在编辑的文件，处于工作目录（<strong>工作区</strong>）</li><li>编辑好但待提交的文件，可以暂时添加到<strong>暂存区</strong>，这相当于是一个<strong>中间态</strong>，既可以向前一步作提交（commit），也可以向后一步，回退或覆盖<strong>工作区</strong>，这个方式有点像是 PS 里的「历史记录」面板，可以比较灵活地进行变更。  </li></ul><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/24/16165942783235.jpg" alt="-w819"></p><h2 id="将编辑好的内容-push-到-GitHub"><a href="#将编辑好的内容-push-到-GitHub" class="headerlink" title="将编辑好的内容 push 到 GitHub"></a>将编辑好的内容 push 到 GitHub</h2><p>git add .<br>git commit -m”附带的信息，例如在某个时间点编辑了博客”<br>git push    </p><p>这三个命令，是搭建好博客之后，每次发布文章时，都需要用到的命令。看完这篇文章，其他的 Git 命令都可以忘记，除了这三条。      </p><h2 id="查看-Git-工作目录和暂存区的状态"><a href="#查看-Git-工作目录和暂存区的状态" class="headerlink" title="查看 Git 工作目录和暂存区的状态"></a>查看 Git 工作目录和暂存区的状态</h2><p>命令：git status   </p><p>遇到未被 Git 管理的文件或文件夹，可以使用 add 命令将其纳入到 Git 的管理之下。   </p><p>例如：git add index.html images    </p><p>注：add 后面可以加文件，也可以加文件夹 📁，上面的 index.html 是文件名，images 是文件夹。   </p><h2 id="查看-Git-变更的记录"><a href="#查看-Git-变更的记录" class="headerlink" title="查看 Git 变更的记录"></a>查看 Git 变更的记录</h2><p>这个有点像是 PS 里面的「<strong>历史记录面板</strong>」，记录了你做出的所有变更。     </p><p>命令：git log   </p><h2 id="清理一下终端当前显示的内容"><a href="#清理一下终端当前显示的内容" class="headerlink" title="清理一下终端当前显示的内容"></a>清理一下终端当前显示的内容</h2><p>命令：clear    </p><h2 id="新建文件夹的命令"><a href="#新建文件夹的命令" class="headerlink" title="新建文件夹的命令"></a>新建文件夹的命令</h2><p>命令：mkdir+空格+文件夹名称   </p><h2 id="创建一个新的文件"><a href="#创建一个新的文件" class="headerlink" title="创建一个新的文件"></a>创建一个新的文件</h2><p>echo “hello,world” &gt; readme</p><p>创建一个 readme 文件，里面的内容为 hello,world    </p><h2 id="查看-Git-最近-N-次的日志"><a href="#查看-Git-最近-N-次的日志" class="headerlink" title="查看 Git 最近 N 次的日志"></a>查看 Git 最近 N 次的日志</h2><p>git log -n   </p><p>如果之前提交过很多次，git log 不附带参数的话，会返回一长串日志，不便于观看     </p><h2 id="在终端中查看文件内容或编辑文件"><a href="#在终端中查看文件内容或编辑文件" class="headerlink" title="在终端中查看文件内容或编辑文件"></a>在终端中查看文件内容或编辑文件</h2><p>命令：vi+空格+文件名  </p><p>例如你想在终端中编辑一个名为 <code>style.css</code> 的文件，可以运行命令 </p><p>vi <code>style.css</code>     </p><p>在 Vim 编辑器中编辑好文件，该如何退出呢？   </p><p>按下 ESC 键，在终端底部输入不同的命令，命令对应的含义如下：</p><p>:w!     保存<br>:wq!    保存并退出编辑(w 代表写入，q 代表退出)          </p><h2 id="从某个子路径直接退回到根目录下"><a href="#从某个子路径直接退回到根目录下" class="headerlink" title="从某个子路径直接退回到根目录下"></a>从某个子路径直接退回到根目录下</h2><p>命令：cd ../    </p><h2 id="查看当前路径已有的文件和文件夹"><a href="#查看当前路径已有的文件和文件夹" class="headerlink" title="查看当前路径已有的文件和文件夹"></a>查看当前路径已有的文件和文件夹</h2><p>命令：ls -al</p><p>注：这个命令可以列出隐藏的文件。   </p><h2 id="在-Git-中给文件快速重命名的方法"><a href="#在-Git-中给文件快速重命名的方法" class="headerlink" title="在 Git 中给文件快速重命名的方法"></a>在 Git 中给文件快速重命名的方法</h2><p>命令：git mv</p><p>举个例子，如果你想把 readme 重命名为 <code>readme.md</code>，只需要执行命令：  </p><p>git mv readme <code>read.md</code> </p><h2 id="删除某个文件"><a href="#删除某个文件" class="headerlink" title="删除某个文件"></a>删除某个文件</h2><p>git rm filename</p><p>这个命令会直接将处于暂存区的文件删除，这样就不需要先在工作目录下删除文件，再到暂存区清理文件。 </p><h2 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h2><p>git checkout master    </p><p>注：从当前分支切换到 master 分支上，这个命令需要在工作路径下运行     </p><h2 id="新建分支并切换到新分支上"><a href="#新建分支并切换到新分支上" class="headerlink" title="新建分支并切换到新分支上"></a>新建分支并切换到新分支上</h2><p>git checkout -b 新分支的名称 旧分支名称      </p><p>注：基于旧分支的基础上，创建一个新的分支      </p><h2 id="查看当前工作在哪个分支下边（查看当前有哪些分支）"><a href="#查看当前工作在哪个分支下边（查看当前有哪些分支）" class="headerlink" title="查看当前工作在哪个分支下边（查看当前有哪些分支）"></a>查看当前工作在哪个分支下边（查看当前有哪些分支）</h2><p>git branch -av</p><p>注：运行返回的带有星号 * 的分支，就是当前的工作分支   </p><h2 id="查看本地的-git-配置"><a href="#查看本地的-git-配置" class="headerlink" title="查看本地的 git 配置"></a>查看本地的 git 配置</h2><p>git config –local –list：显示所有配置信息，包含 <code>user.name</code>、user.email 等。    </p><p>git config –local <code>user.name</code>：仅显示 <code>user.name</code> 信息。   </p><h2 id="更改-user-name-信息"><a href="#更改-user-name-信息" class="headerlink" title="更改 user.name 信息"></a>更改 <code>user.name</code> 信息</h2><p>git config –local <code>user.name</code> ‘angola’   </p><p>末尾的单引号内的名字 angola 就是更改之后的 <code>user.name</code>   </p><h2 id="cat-命令"><a href="#cat-命令" class="headerlink" title="cat 命令"></a>cat 命令</h2><p>命令含义：主要用来查看文件内容，创建文件，文件合并，追加文件内容等功能。      </p><p>cat+空格+文件名：将文件内容打印显示    </p><h2 id="查看-HEAD-指针目前指向哪个分支"><a href="#查看-HEAD-指针目前指向哪个分支" class="headerlink" title="查看 HEAD 指针目前指向哪个分支"></a>查看 HEAD 指针目前指向哪个分支</h2><p>cat .git/HEAD   </p><p>假设运行返回的结果是 ref: refs/heads/fix_readme    </p><p>这意味着 HEAD 目前指向分支 fix_readme    </p><h2 id="查看路径下边类型是文件的个数"><a href="#查看路径下边类型是文件的个数" class="headerlink" title="查看路径下边类型是文件的个数"></a>查看路径下边类型是文件的个数</h2><p>find .git/objects -type file   </p><p>注：.git/objects 路径下类型是文件的数量     </p><h2 id="比较两次-commit-的区别"><a href="#比较两次-commit-的区别" class="headerlink" title="比较两次 commit 的区别"></a>比较两次 commit 的区别</h2><p>git diff 3d4731d80eb 415c5c8086e1    </p><p>注：diff 后面跟的是两次 commit 对应的哈希值     </p><p>比较 HEAD 与 HEAD 父级（即 HEAD 的前一个版本）的不同：      </p><p>git diff HEAD <code>HEAD^1</code>     </p><p>最末尾也可以不加数字，单纯使用：   </p><p>git diff HEAD <code>HEAD^</code>    </p><p>HEAD 与 HEAD 父级的父级（即 HEAD 的爷爷）的不同：  </p><p>git diff HEAD <code>HEAD^^</code><br>等同于 git diff HEAD <code>HEAD～2</code>   </p><h2 id="图形界面工具"><a href="#图形界面工具" class="headerlink" title="图形界面工具"></a>图形界面工具</h2><p>gitk<br>gitk –all    </p><h2 id="删除不需要的分支"><a href="#删除不需要的分支" class="headerlink" title="删除不需要的分支"></a>删除不需要的分支</h2><p>git branch -d 待删除的分支名称    </p><h2 id="修改最新-commit-的-message"><a href="#修改最新-commit-的-message" class="headerlink" title="修改最新 commit 的 message"></a>修改最新 commit 的 message</h2><p>git commit –amend   </p><p>运行之后，会打开编辑窗口，顶部可编辑最近一次提交的 message 信息，编辑好之后按 ESC，输入 :wq! 退出编辑   </p><h2 id="消除最近的几次提交"><a href="#消除最近的几次提交" class="headerlink" title="消除最近的几次提交"></a>消除最近的几次提交</h2><p>git log –graph<br>git reset –hard 5df3fd1900</p><p>第一个命令是，在终端中以图形化的方式显示之前提交的记录，记录中会显示每一次 commit 对应的哈希值。</p><p>注：5df3fd1900 是恢复到的某一次 commit 对应的哈希值</p><h2 id="比较暂存区和-HEAD-所含文件的差异"><a href="#比较暂存区和-HEAD-所含文件的差异" class="headerlink" title="比较暂存区和 HEAD 所含文件的差异"></a>比较暂存区和 HEAD 所含文件的差异</h2><p>git diff –cached</p><p>cached 代表暂存区 </p><h2 id="比较工作区和暂存区所含文件的差异"><a href="#比较工作区和暂存区所含文件的差异" class="headerlink" title="比较工作区和暂存区所含文件的差异"></a>比较工作区和暂存区所含文件的差异</h2><p>git diff</p><p>diff 后面不加参数，默认比较的是工作区和暂存区的差别</p><p>如果 diff 添加了文件名，就是比较这个文件在工作区和暂存区的差别，例如    </p><p>git diff –readme.md   </p><p>添加两个文件名的话，就可以同时查看两个文件在工作区和暂存区的差别：   </p><p>git diff –readme.md styles/style.css </p><h2 id="如何指定不需要-Git-管理的文件？"><a href="#如何指定不需要-Git-管理的文件？" class="headerlink" title="如何指定不需要 Git 管理的文件？"></a>如何指定不需要 Git 管理的文件？</h2><p>不需要 Git 管理的文件，可以在 <code>.gitignore</code> 文件中列出。  </p><p>先使用命令 vi <code>.gitignore</code></p><p>创建一个 <code>.gitignore</code> 文件，文件名必须为 <code>.gitignore</code>，在文件中列明不纳入 Git 管理的文件和文件夹。</p><p>在输入文件和文件名时需要注意：</p><ul><li>doc 代表 doc 文件不纳入 Git 管理</li><li>doc/ 末尾如果带有斜杠，代表文件夹 doc 下的所有文件都不纳入 Git 管理</li></ul><p>如果先将文件或文件夹添加到了暂存区，<code>.gitignore</code> 对其也不起作用。   </p><h2 id="其他内容"><a href="#其他内容" class="headerlink" title="其他内容"></a>其他内容</h2><p>这本课我还没看完，其他有些单纯靠文字无法理解的内容，我在记笔记的时候还附上了一些截图，放在幕布中，感兴趣的朋友可以扫描下方的二维码查看：   </p><p><img src="https://article-picbed-1302715071.cos.ap-guangzhou.myqcloud.com/2021/03/24/qrcodea3.png" alt="QRcode_A3"><br>本文也同步发布在我的个人博客上，你可以点击底部左下角的「<strong>阅读原文</strong>」，查看本文在博客上的表现。   </p><p>以上。      </p>]]></content>
    
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我是谁？</title>
    <link href="/2021/03/22/2021-3-22-aboutme/"/>
    <url>/2021/03/22/2021-3-22-aboutme/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>自我剖析，可能是每个人不经意间会做的一件事，这是一种向内探寻自己的方式。</p><p>我们会在内心给出一些关于「我是谁」的答案，但不一定会落笔写下来，更谈不上展示给别人看，害怕自己认为的和他人认为的存在落差，害怕自己的人设不够完美。</p><p>每个人都有人设，人设不是明星独有的东西，你给人留下的印象，就是你的人设，有些人在网络上和现实中可能会有两个截然不同的人设，这并不奇怪。</p><p>微信之父张小龙曾在微信公开课上谈过朋友圈与「人设」的关系：</p><blockquote><p>发朋友圈，其实就是把自己的人设带给所有朋友，放到所有朋友的脑袋里面的过程。</p></blockquote><p>受一名网友 boyzcl 的文章《<a href="https://mp.weixin.qq.com/s/BAeszt31Qvdg-xYEqmPzJg">我是谁?</a>》的启发，我也想写一下我认为的自己。</p><p>我是谁？</p><p>我的本名叫彭宏豪，<br>网名叫安哥拉，<br>这两个昵称之间并没有什么联系。</p><p>在网上，<br>除非特殊的情况，<br>我更愿意用真名作为自己的 ID，<br>之所以用真名，<br>一方面是因为真名能更好地约束自己；<br>另一方面是受了李笑来老师的影响，<br>他曾说过：</p><blockquote><p>我一直认为使用实名是划算的……“个人品牌”的积累，从使用实名那一瞬间开始……</p></blockquote><p>我是一个 95 年出生的人，射手座，但我不太相信星座，我不希望我的人生被那几句优缺点定义，我不希望落入「自我实现的预言」的怪圈；<br>我是一个目前在广州打工的潮汕人，小时候来过广州，在广州度过一次春节，对广州有一种莫名的好感；<br>我是一个干过物流、后转行新媒体的新媒体人，自称新媒体小编，但不喜欢别人叫我小编或工具人（之所以顺利转行新媒体，说来话长，可能是运气，也可能是因为我在闲暇时间会断断续续写公众号，所以我有个不成熟的看法：我在空闲时间写东西，在别人在空闲时间备考公务员，这两者都是为人生未来的发展提供多一种选择，多一种可能性）；<br>我是一个长期自称爱好是跑步，但累计跑步公里数未超过 500 km 的人；<br>我是一个独自看过歌手李健两场演唱会的人；<br>我是一个喜欢余华、王小波、村上春树的人；<br>我是一个以前出门会带一包抽式纸巾、但拒绝被称作「暖男」的人；<br>我是一个轻度的泛社交软件用户，除了微信，我还会使用微博、知乎、知识星球、推特和即刻；<br>我是一个睡前喜欢听音频节目的人，因为我发现这东西能够助眠，不过后来听得少了，2018 年刚毕业那会，音频节目陪我度过了很多个夜晚；<br>我是一个有点细心、自认为记性比较好的人；<br>我是一个有点天真的人；</p><p>我是一个内向闷骚的人；<br>我是一个胆小、羞于宣传（包装）自己的人；<br>我是一个害怕挑战、畏惧变化、多数时候躲在舒适区的人；<br>我是一个心理素质/韧性还不够强（不够皮实）的人；<br>我是一个私下喜欢对自己的好朋友说粗话的人；<br>我是一个对自己长相没有自信、不喜欢拍照的人；<br>我是一个曾认为友谊（关系）不重要、自己厉害最重要的人，但后来发现缺少友谊的人生会缺少一大乐趣，并让人生呈现虚无；<br>我是一个容易放弃的人，好多事情坚持没多久没放弃了，如大学时代背英语单词、毕业后的每天做一页 PPT、公众号日更、每天做 7 分钟运动；<br>我是一个没什么特长、学生时代惧怕写自我评价的人；<br>我是一个曾梦想成为 IT 男、产品经理或单纯靠写字赚钱的人，但至今都没实现；</p><p>我想成为一个更自信、对自我评价更高的人；<br>我想成为一个富有人格魅力的人；<br>我想成为一个能输出高质量内容或观点的人，因为我相信「Brain is the new sexy」；<br>我想成为一个能帮到他人的人；<br>我想成为一个值得交往的人；<br>我想做一个不变坏的人。</p><p>我对未来有这些不成熟的想法：  </p><ul><li>未来能做一个能带来收入的 App，有时会觉得独立开发者很酷，不用生活在一线城市，做出来的产品也可以服务到广阔的人群。</li><li>不能做 App 的话，退而求次，做一个付费社群，只为愿意为我付费的人服务，因为不让人掏钱买的服务或内容，别人都不懂得珍惜。</li><li>希望未来有一天，自己的被动收入能 Cover 生活必需的支出，到时想工作就工作，不想工作就出去走走。</li></ul><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>本来今天想发一篇工具文章的，但下午部门开会的时候，看到一份问卷调查收集的数据，气死我了。  </p><p>写了接近两年的文章，居然还有好多人不知道看的文章是谁写的，看了说不来气是假的。  </p><p>气死我了，公众号还是不行，还是不够突出作者的位置，搞得我还是一个为他人做嫁衣的工具人，用完即扔。。。离开了平台，自己啥都不是。 </p><p>我又陷入了焦虑。   </p><h2 id="关注「效率工具指南」"><a href="#关注「效率工具指南」" class="headerlink" title="关注「效率工具指南」"></a>关注「效率工具指南」</h2><p>本文首发于我的公众号「效率工具指南」，原文链接 🔗：    </p><p><a href="https://mp.weixin.qq.com/s/fI1etNSdxpMWox3bABy-NA">我是谁</a>   </p>]]></content>
    
    
    
    <tags>
      
      <tag>总结</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何为视频加字幕？</title>
    <link href="/2021/02/27/2021-2-27-subtitle/"/>
    <url>/2021/02/27/2021-2-27-subtitle/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h1 id="title：如何为视频加字幕？"><a href="#title：如何为视频加字幕？" class="headerlink" title="title：如何为视频加字幕？"></a>title：如何为视频加字幕？</h1><p>Hello 大家好，我是安哥。 </p><p>今天这篇文章，想给大家介绍一下，在电脑上为视频加字幕的各种方法，希望对想做视频的朋友有帮助。 </p><h2 id="剪映电脑版"><a href="#剪映电脑版" class="headerlink" title="剪映电脑版"></a>剪映电脑版</h2><p>为视频添加字幕，必须推荐在我心目中第一的神器——剪映，剪映在去年推出了 Mac 版，而在今年推出了更多人使用的 Windows 版本，可以在剪映官网下载。  </p><p><img src="http://cdn.penghh.fun/mweb/16143434141477.jpg" alt="-w3602">之所以排名第一，是因为它的「识别字幕」和「识别歌词」功能真的太好用了。  </p><p>导入视频，切换到「文本」选项卡，普通视频的话选择「识别字幕」，如果是 Live 或演唱会上拍摄的视频，就选择「识别歌词」，等待软件完成识别，它就会在视频上方生成字幕。   </p><p><img src="http://cdn.penghh.fun/mweb/16143425230293.jpg" alt="-w1954">由于是机器自动识别生成的字幕，难免会出现识别错误的情况，在这基础上人工<strong>校对</strong>一下就可以了。</p><p>这里要说一下剪映电脑版做得不好的地方——双击生成的字幕，无法在视频预览窗口直接修改文本，反而需要点击右侧的文本编辑窗口才能修改，每次修改都要移动视线，看着真别扭，用久了的话不知道会不会变成斗鸡眼呢。。。   </p><p><img src="http://cdn.penghh.fun/mweb/16143429938252.jpg" alt="-w1954"><br>剪映电脑版下载地址：<br><em><a href="https://lv.ulikecam.com/">https://lv.ulikecam.com/</a></em></p><h2 id="Handbrake"><a href="#Handbrake" class="headerlink" title="Handbrake"></a>Handbrake</h2><p>Handbrake，是一款开源免费的视频处理工具，支持 macOS、Windows 和 Linux 系统，可用来压缩视频体积、转换视频格式，还能<strong>压制输出带有字幕的视频</strong>。  </p><p><img src="http://cdn.penghh.fun/mweb/16143438443965.jpg" alt="-w1685">这里说的压制输出带有字幕的视频，指的是在有字幕文件 srt 的情况下，将字幕文件和没有字幕的视频文件封装（合成）到一起。   </p><p>这个软件的界面为英文，但理解起来并不困难，请不要被吓到。</p><p>点击左上角的「Open Source」，打开需要添加字幕的视频文件。  </p><p><img src="http://cdn.penghh.fun/mweb/16143437635214.jpg" alt="-w921">接着点击下方的「<strong>Video</strong>」选项卡，这里有两个参数需要注意：</p><p>一个是视频编码器 Video Encoder，保持默认的 H.264 就可以了，这是一种非常通用的编码格式，在不同平台上都不会出现兼容性的问题。</p><p>另一个是视频的码率 Framerate，这个参数要根据导入的原始视频的帧率进行选择，如果不清楚视频的帧率，可右击视频文件，查看「属性」，一般就可以看到视频文件的帧率。    </p><p><img src="http://cdn.penghh.fun/mweb/16143440741073.jpg" alt="-w921">接着切换到「<strong>Subtitles</strong>」选项卡，这里就是用来为视频添加字幕的。</p><p>点击「Track」的下拉按钮，选择「<strong>Add External Subtitles Track</strong>」，即添加一条额外的字幕轨道。   </p><p><img src="http://cdn.penghh.fun/mweb/16143444676430.jpg" alt="-w921">在弹出的窗口中，选择已经准备好的 srt 字幕文件，导入 Handbrake 中。</p><p><img src="http://cdn.penghh.fun/mweb/16143445774462.jpg" alt="-w1529">勾选「Burned In」，即将视频文件和字幕文件合并到一个文件中，接着点击右下方的「Browse」，设置文件输出后保存的位置。  </p><p>最后点上方的绿色按钮「<strong>Start</strong>」，等待视频完成渲染，就可以得到带有字幕的视频了。   </p><p><img src="http://cdn.penghh.fun/mweb/16143447904874.jpg" alt="-w921"><br>Handbrake 下载地址：<br><em><a href="https://handbrake.fr/">https://handbrake.fr/</a></em></p><h2 id="Final-Cut-Pro-X"><a href="#Final-Cut-Pro-X" class="headerlink" title="Final Cut Pro X"></a>Final Cut Pro X</h2><p>Final Cut Pro X，简称 FCP，是苹果推出的视频剪辑软件，只支持 macOS 系统。  </p><p>它支持从零开始，给视频加字幕，但这种方法不符合我们的高效理念。要用 FCP 给视频加字幕，肯定要找一个可以偷懒、省时省力的方法。  </p><p>我用 FCP 加字幕的流程是这样的：</p><ul><li>使用网易见外工作台将音频转换为 srt 字幕文件</li><li>借助在线工具「crossub」，将得到的 srt 字幕文件转换为 fcpxml 文件</li><li>将 fcpxml 导入 FCP，修改识别错误的字幕，最终导出带有字幕的视频</li></ul><p>FCP 支持导入 srt 字幕文件，在视频预览窗口字幕也能正常显示，但不知道为什么最终导出的视频字幕总是缺失，有知道原因的朋友麻烦在留言区告诉我。   </p><p><img src="http://cdn.penghh.fun/mweb/16143495563214.jpg" alt="-w2084">虽然找不到原因，但这里可以借助在线工具 crossub，将 srt 字幕转换为 fcpxml 文件，接着再导入 FCP 中，就能顺利导出了。 </p><p>在使用 crossub 时，需要根据视频工程的<strong>帧率</strong>来确定下图的<strong>帧速率</strong>，不然转换得到的 fcpxml 文件与原来的时间轴会发生错位。  </p><p><img src="http://cdn.penghh.fun/mweb/16143498891861.jpg" alt="-w1660">转换为 fcpxml 后下载文件，需要对文件进行<strong>重命名</strong>，删除后缀多余的文本「.删除此后缀」，删除后才能导入 FCP。  </p><p><img src="http://cdn.penghh.fun/mweb/16143501796977.jpg" alt="-w1560">回到 FCP 中，选择「文件 &gt;&gt; 导入」，选择 XML，导入刚刚重命名的 fcpxml 文件。</p><p><img src="http://cdn.penghh.fun/mweb/16143503728308.jpg" alt="-w757">导入 fcpxml 文件后，它会在 FCP 中创建一个新的事件「crossub」，切换到新事件，再点击右侧的剪辑工程。  </p><p>在剪辑工程下方的<strong>时间轴</strong>上，就能看到所有的字幕文本，Cmd + A 全选所有字幕文本，再按下 Cmd + C 复制。  </p><p><img src="http://cdn.penghh.fun/mweb/16143506613307.jpg" alt="-w1252">点击时间轴中部的向左的箭头，切换到原来的剪辑工程中。  </p><p><img src="http://cdn.penghh.fun/mweb/16143508723977.jpg" alt="-w1414">将时间线对准到视频开头的位置，再按下 Cmd + V 粘贴，操作无误的话，字幕与视频此时应该是刚好能对上的。  </p><p><img src="http://cdn.penghh.fun/mweb/16143510373742.jpg" alt="-w1502">接着在 FCP 中对字幕进行简单的校对，费这么大劲使用 FCP 为视频加字幕，最方便的地方来了：你可以在视频预览窗口双击字幕，直接进入字幕编辑状态，修改识别错误的文字，而不是像剪映「一会看这，一会看那」。   </p><p><img src="http://cdn.penghh.fun/mweb/16143511419721.jpg" alt="-w2084">  </p><p>在线工具 crossub 网址：<br><em><a href="https://crossub.xiaowude.com/srt/226">https://crossub.xiaowude.com/srt/226</a></em></p><p>这个工具是 B 站一位叫 @偷工拣料 的 Up 主制作的，如果你看不懂我的文字教程，可以去看他录制的视频教程，手把手 👋 教学，包你能看懂：  </p><p><img src="http://cdn.penghh.fun/mweb/IMG_8414.jpg" alt="IMG_8414"><br>除了本文介绍的内容，关于视频制作的话题，我还写过另外一篇文章，感兴趣的朋友戳下方链接 👇：</p><p>如果本文对你有帮助的话，别忘了关注我的公众号「效率工具指南」，第一时间获取干货更新：  </p>]]></content>
    
    
    
    <tags>
      
      <tag>剪辑</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信十年，弹指一挥间</title>
    <link href="/2021/01/09/2021-1-9-wechatdecade/"/>
    <url>/2021/01/09/2021-1-9-wechatdecade/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>2021 年 1 月 21 日，是微信发布 10 周年的日子，弹指一挥间，这个国民级产品已经燃烧了将近 10 年。</p><p>在微信的宣传语中，有这么一句话，「微信是一个生活方式」，而不是「一种生活方式」，就像「一千个读者就有一千个哈姆雷特」，每个人都能在使用微信的过程中，用出独属于自己的生活方式，而如果把「一个」换成「一种」，它就消除了其他可能的生活方式。</p><p>鉴于之前推荐过不少应用，我发现，富有吸引力的产品，或多或少都有这样的特征：它具备想象空间，有延展性，每个使用它的人，可以找到各种各样的用法/玩法，微信也如此。</p><p>我是 2014 年刚上大学才用的微信，刚开始使用时，我本能地排斥它，心里会想：有了 QQ，为啥还要使用微信呢？腾讯是闲得蛋疼，没事又弄多一个新的社交软件。</p><p>但后来变成了不得不用的状态，因为当你身边的人都被卷入了微信，例如班里的同学都用微信、通过微信群接收班级通知，如果就你不用的话，你不就落单了吗？</p><p>人作为一种社会性动物，内心深处还是害怕孤独，害怕与别人格格不入。</p><p>起初刚接触微信，除了弄清基本功能的用法，最让我感兴趣的是，莫过于微信公众号，它对我来说是一个新东西，我想知道推送内容的后台长什么样，萌发了想注册一个公众号的想法，但直到 2015 年，我才注册了自己的微信公众号，但那时我并不知道公众号未来会有各种「红利」，也不知道自己能写点什么。</p><p>除了不知道写什么，公众号还有一个让人头疼的地方在于，它会在文章底部左下角显示阅读量，它会让刚开始写东西的我非常在意（现在当然也非常在意，但在意的原因不一样），因为当我把自己觉得好不容易写好的文章转发到朋友圈，阅读量还是没有什么增长，我就会觉得很丢脸，以至于后来很长时间我都不敢把自己写的东西转发到朋友圈。</p><p>显示阅读量有利也有弊，好的地方在于，它让一切更加<strong>透明</strong>，他人能通过阅读量反推公众号的关注数，能给你的公众号广告提供一个报价；不好的地方在于，它让许多新媒体人唯阅读量至上，激发出了人性的各种恶，如抄袭洗稿、尬蹭热点、吃「人血馒头」等等。</p><h2 id="最孤单的时刻"><a href="#最孤单的时刻" class="headerlink" title="最孤单的时刻"></a>最孤单的时刻</h2><p>微信起于熟人社交，但发展到今天，不少人添加的好友已经超出了熟人的范畴，根据微信之父张小龙在 2020 年初微信公开课上公开的数据，有将近 100 万人的微信好友数接近 5000 人，抵达了原先的微信好友上限。</p><p>通讯录好友数量上去了，但还是少不了会感到孤独，因为这里的好友并不是真正意义上的好友，并不等同于能说得上心里话的知心朋友。</p><p>这些年我使用微信最孤独的时刻，莫过于：我以为自己是在做一件正义的事情，但旁边多数人都是无动于衷、默默围观，不会给你任何反馈，那种感觉就像是，广场上突然出现了一个疯子，疯子在一旁大喊，旁边的人们仍继续做着自己的事情，这似乎也没有什么问题，这也不是在责备谁，只能说「人类的悲欢并不相通」。</p><p>有过同样感觉的，应该不止我一个吧？</p><h2 id="我的互联网启蒙"><a href="#我的互联网启蒙" class="headerlink" title="我的互联网启蒙"></a>我的互联网启蒙</h2><p>我之所以喜欢上互联网，很大程度上与公众号「小道消息」的作者 Fenng （真实的名字叫冯大辉）有关。</p><p>从冯老师那里，我看到了一个「大度」的人是怎样的，我之前曾在他的付费知识星球「小道消息的订阅服务」里发表过一段从心底里夸冯老师的话：</p><blockquote><p>在网上泡了挺多年，我见过最「大方」的人，莫过于无码科技的 Fenng 老师。</p><p>他很早就写公众号，算是科技圈里的一个个人大号，前期积攒了不少关注者。后来他免费推荐过不少公众号，有人是因为他的推荐，有了一定的读者，才坚持写把公众号写下来。</p></blockquote><p>也正是因为冯老师的推荐，我得以关注了不少有价值的公众号，进一步扩宽了我对互联网的认知，让我更加坚定地选择了从事互联网相关的工作。</p><p>不过，知道冯老师之前，还得感谢李笑来老师和他的公众号「学习学习再学习」（现改名「笑来」），那时是他转载了冯老师的一篇文章《<a href="https://mp.weixin.qq.com/s/z6VB1duhnDhd-asyegkvSA">冯大辉：有关健康常识的基本认知（2016 版）</a>》，我才知道了 Fenng 这个人，去微信里面搜了下，他的公众号叫「小道消息」，这个名字很容易让人产生误会，但看了一下发布的内容，觉得还不错，并不像公众号名字那样，于是就关注到了现在。  </p><h2 id="我的写作启蒙之路"><a href="#我的写作启蒙之路" class="headerlink" title="我的写作启蒙之路"></a>我的写作启蒙之路</h2><p>我之所以会在互联网上写东西，首先要感谢的还是李笑来老师，虽然我现在已经不看他写的内容了，但在 2015 年的时候，我还是很喜欢他写的东西，也看过他的一本畅销书《把时间当作朋友》。</p><p>李笑来老师主张人人都要掌握写作这个能力，它是一种带有「复利」和「杠杆」效应的能力，复利说的是只要把时间往后拉得足够长，日积月累之后，它能给人带来意想不到的影响，而杠杆效应强调写作是一个「一次付出，可获得多次回报」的行为。</p><p>以作家为例，作家写作一本书，他花费的时间就是从零到写完一本书的时间，出版之后，每当有一个人购买了他的书，他写作的时间就被出售了一次，如果有 1000 万人购买他的书籍，他的同一份时间就可以被出售 1000 万次，数量越多，越符合经济学上追求的「规模效应」，从理性的角度说，这是一笔非常划算的买卖。</p><p>除了出版，现实中还有好多东西也符合杠杆效应：</p><ul><li>付费视频课程：老师录完一次课程，后续可售出多次     </li><li>付费社群：社群群主提供的付费服务（如咨询、回答社群成员的提问等）的成本起初是相对恒定的，一个人加入的维护成本是那么多，1 万个人加入的维护成本也是那么多，只不过后者带来了更可观的收入。    </li><li>App Store 中的付费 App：开发出一个付费 App 后，上架苹果应用商店 App Store，可以卖给多个用户。当然 App 后续的维护和更新，也要付费高昂的成本，以至于后来很多 App 从一次买断转向了按年付费订阅的模式，这是后话。      </li></ul><p>放到自己身上，虽然出不了书，但在网上公开分享，同样具备杠杆效应，试想一下，同样一条有价值的内容，发布在几个人的微信里 VS 发布在一个公开的社区里，它的潜在价值也是不同的，发布在公开社区的内容，它可以突破时间和空间的限制，让你能够在不同的时间、与来自不同地方的人们进行多次交流，而不仅仅局限在一对一的私密交流，相比之下，一对 N 的交流更加有效率。</p><p>如果你想早日达到更加自由（首先是精神自由，其次是物质自由）的状态，一定要从现在开始，着手做那些具有复利和杠杆效应的事情，从分享身边的小事做起，从每天写一点东西开始。</p><h2 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h2><p>微信的出现，推动了二维码在互联网世界内的普及，后来许多 App 跟着使用二维码，其中也有微信的一份功劳。</p><p>2012 年 5 月，张小龙在自己的朋友圈布过这么一条动态：</p><blockquote><p>PC 互联网的入口在搜索框，移动互联网的入口在二维码。    </p></blockquote><p>那时候的二维码，远未像今天这样看起来稀松平常，后来别的 App 之所以跟着用，还是因为微信把事做成了，在移动互联网时代建立了一个新的标准。</p><p>对于同样一件事情，有些人是先相信再看见，有些人是先看见再相信。我不知道那时候发布这条动态的时候，张小龙心里在想什么，但我相信他也是属于前者——先选择相信这件事能做成，再投入各种资源和努力，将预想中的理想情况变成现实，最终被看见。       </p><p><img src="http://cdn.penghh.fun/mweb/v2-4d6a6baa963809daa3a0a7c06824e801_r.jpg" alt="v2-4d6a6baa963809daa3a0a7c06824e801_r"></p><h2 id="什么是好的产品？"><a href="#什么是好的产品？" class="headerlink" title="什么是好的产品？"></a>什么是好的产品？</h2><p>张小龙在 2019 年的微信公开课上，化用了德国的产品设计师 Rams 总结的好的设计的十个原则，将十个原则中的「设计」一词替换为「产品」二字：    </p><p>第一个原则是好的产品富有创意，必须是一个创新的东西；<br>第二个是好的产品是有用的；<br>第三个是好的产品是美的；<br>第四个是好的产品是容易使用的；<br>第五个是好的产品是很含蓄不招摇的；<br>第六个原则是好的产品是诚实的；<br>第七个是好的产品经久不衰，不会随着时间而过时；<br>第八个原则是好的产品不会放过任何细节；<br>第九个是它是环保的，不浪费任何资源的；<br>第十个是尽可能少的设计，或者说少即是多。     </p><p>这些原则，在微信身上多少都会有体现，以「少即是多」为例：    </p><p>张小龙曾说过，微创新是永无止境的，别人总可以加一点东西来跟你不太一样。<strong>我们这个功能已经做到最简化了，别人没法超越</strong>——我们当时是有这种自信的……产品极简，反而有利于在网络这个大生命体中<strong>自我繁衍</strong>，并且产品是面向连接的。</p><p>产品做加法，做功能的堆砌很简单，因为它可能是一种最偷懒的方式，按一亿想教张小龙做产品的人说的加功能就好了，也不用到处去做用户调研和需求的洞察。</p><p>当然，产品保持极简与复杂并不是对立的，也并不是说它不能加入新的功能。需求或底层的逻辑可以很复杂，但当它呈现在用户面前，它必须是简洁的，给用户带来的体验是自然而然的，使用时不需要引导，不需要看说明书，符合人最原始、本能的反应。     </p><h2 id="我喜欢的微信功能"><a href="#我喜欢的微信功能" class="headerlink" title="我喜欢的微信功能"></a>我喜欢的微信功能</h2><ul><li>公众号，它是我在数字世界的一个家，存放了我从最初到现在写过的所有内容，即便是以前删掉的内容，在公众号后台的「图文素材」也能看到，也让我看到了不一样的世界</li><li>微信小程序，省去了安装不高频使用的应用，小内存容量手机的福音</li><li>可以关闭「发现」页不需要用到的功能</li><li>朋友圈动态不显示浏览量（对比 QQ 空间）</li><li>浏览他人朋友圈相册不会留下痕迹</li><li>浮窗功能</li><li>赞赏功能，通过赞赏获得的收入，不会被抽成</li></ul><h2 id="我不喜欢的微信功能"><a href="#我不喜欢的微信功能" class="headerlink" title="我不喜欢的微信功能"></a>我不喜欢的微信功能</h2><ul><li>朋友圈仅三天可见</li><li>删除好友不具备双向删除的能力（有人说之所以这样设计，是为了预防诈骗发生时，骗子删掉你的微信后，不会留下任何证据）</li></ul><h2 id="2016-年-·-蝴蝶效应"><a href="#2016-年-·-蝴蝶效应" class="headerlink" title="2016 年 · 蝴蝶效应"></a>2016 年 · 蝴蝶效应</h2><p>在 2016 年微信公开课开幕的前夜，微信上线了一个名为「<a href="https://mp.weixin.qq.com/s/HOs_26OIA7yHyiH3SEX7Ig">我和微信 2015</a>」的页面，原本是想作为公开课前的预热小插曲，让参加公开课的人进行签到，了解自己第一次使用微信、第一次发布朋友圈的时间等等，但没想到这个链接被泄漏并传播开来，过多的人同时向服务器发出请求，导致页面瘫痪了。</p><p>页面挂掉之后，它被一些别有用心的人利用，制造出了一个谣言：它会盗用微信号，甚至是盗取微信钱包里的钱，引起了朋友圈内许多人的恐慌，许多人为了资金的安全，纷纷解绑了自己的银行卡。</p><p>我还清晰地记得，那天晚上我在教室外面背着书，在为第二天的期末考试准备着，最开始看到那些数据，会让人欣喜，但随之而来的谣言，又让我变得坐立不安，我会去频繁地刷新朋友圈，看看朋友圈中是否有知道具体情况的，期待有人能给出一个确定的答案。</p><p>微信之父张小龙在第二天的微信公开课上（这也是张小龙第一次在微信公开课上演讲），也以这个传播事件作为开头，以「蝴蝶效应」来类比这场突如其来的意外。</p><p><img src="http://cdn.penghh.fun/mweb/7558F18E-1D5B-4F44-97CE-335AC7903E32.png" alt="7558F18E-1D5B-4F44-97CE-335AC7903E32">截图来自 《<a href="https://tech.qq.com/a/20160111/025385.htm">微信张小龙公开演讲：未来要开发“应用号”</a>》</p><p>也因为这场意外，微信自此不再策划这种类似「年度报告」或「年度回顾」的活动，对比其他 App 每年都会有的、看起来是正常诉求的「年度报告」，你可能会觉得微信少了一点温度。</p><h2 id="微信公开课主题"><a href="#微信公开课主题" class="headerlink" title="微信公开课主题"></a>微信公开课主题</h2><p>2017 年：下一站 Let’s reset !<br>2018 年： to be 正当时<br>2019 年： 同行 WITH US<br>2020 年： Always Beta<br>2021 年：激发 WeBuild</p><h2 id="张小龙微信公开课演讲"><a href="#张小龙微信公开课演讲" class="headerlink" title="张小龙微信公开课演讲"></a>张小龙微信公开课演讲</h2><p>2014 年：<a href="https://mp.weixin.qq.com/s/qRHGtL-6L3YGqLBDGgNfFw">微信公开课 PRO 版张小龙演讲全文</a><br>2016 年：<a href="https://tech.qq.com/a/20160111/025385.htm">微信张小龙公开演讲：未来要开发“应用号”</a><br>2017 年：<a href="https://tech.qq.com/a/20161228/016787.htm">张小龙首次公开解读小程序：小程序在微信没有入口 1月9号正式推出</a><br>2018 年：<a href="https://daxue.qq.com/content/content/id/3842">张小龙 2018 微信公开课演讲全程视频，微信将有哪些新变化？</a><br>2019 年：<a href="https://zhuanlan.zhihu.com/p/54490834">2019 微信公开课PRO版张小龙演讲全文（官方完整版）</a><br>2020 年：<a href="https://v.qq.com/x/cover/mzc00200fyleel7/f304841frck.html">张小龙：微信的短内容一直是要发力的方向 顺利的话近期或将上线</a></p><p>关于张小龙的更多介绍，可以查看这篇可能是目前网上写得最翔实的文章，且文末附上了一份详细的参考链接：《<a href="https://coffee.pmcaff.com/article/2075760897470592/">张小龙22年</a>》      </p><h2 id="向往的团队"><a href="#向往的团队" class="headerlink" title="向往的团队"></a>向往的团队</h2><p>从这些年使用微信的经历来说，微信确实是国内众多互联网产品中的异类，在商业化或者说变现方面，它显得足够克制，没有开屏广告，没有像微博那样遍地的信息流广告，也不会主动向用户 Push 系统消息，在许多方面，它确实是把用户当成用户、当成朋友来对待。        </p><p>爱屋及乌，因为喜欢微信，也会对微信背后的微信团队产生了好感。微信团队在招聘链接上曾经有这么一句话，让我印象深刻：     </p><blockquote><p>和我们一起做个伟大产品取悦自己！     </p></blockquote><p>在知乎上的一个问题「在微信工作是怎样一番体验？」，其中有个匿名回答说到：     </p><blockquote><p>这里的员工更多的是自我成就的驱动，而非 KPI 的压力。    </p></blockquote><p>张小龙在 2019 年的微信公开课上也曾说过：      </p><blockquote><p>很多人问我们（指微信团队），你们跟别人有什么不一样？我觉得有一个不一样是这样的，我们在思考问题或者是思考做什么的时候我们经常会问自己一个问题，就是我们在做这个事情的意义是什么？     </p><p>我当然知道很多团队做这个事情他是不问这个意义的，他只问我们的 KPI 是什么？但是说老实话微信团队从开始成立到现在从来没有瞄准 KPI 去奋斗过，但是并不妨碍团队能够越做越好。因为就像小程序，如果围绕 KPI 去做，我们不知道怎么制定 KPI，因为它没有这个东西，没有办法制订它的 KPI，如果围绕一个 KPI，大家可能不会做这个事情。    </p></blockquote><p>如果说这辈子只剩下最后一次工作机会，我希望我能去微信团队。之所以排到最后一次，还是因为现在的我太辣鸡了。     </p><p>以上。   </p><p>来个互动：在使用微信这么多年的时间里，有什么让你难忘或者印象深刻的？你是否有因为微信而让你变得与众不同的经历吗？     </p><p>欢迎在下方留言。        </p>]]></content>
    
    
    
    <tags>
      
      <tag>微信</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>致公众号「职场神助攻」的助攻姐：写东西还是要点脸吧。</title>
    <link href="/2021/01/06/2021-1-6-qiuyepptcopy/"/>
    <url>/2021/01/06/2021-1-6-qiuyepptcopy/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发于我的公众号「效率工具指南」，这里作为备份。    </p><p><img src="http://cdn.penghh.fun/mweb/16099814864382.png"></p><p>Hello 大家好，我是安哥。</p><p>以前我很享受自己写的东西能发布在公司的大号上，因为同样的一篇文章，付出同样的努力，放在不同量级的公众号上，它的效用是不同的。</p><p>关注量更大的号，它带来的曝光更多，可能也可以帮到更多的人，这是我一直以来相信的。</p><p>而且我也知道一些关注者更喜闻乐见的内容，例如传播盗版软件、整理 100G 你收藏了也不会去看的学习资料等等，但我选择不写，因为我相信：</p><p>用优质内容而非套路获取关注者的信任，才是一种靠谱、长期可持续的方式，自己写的时候也写得心安理得。</p><p>但后来，我发现，更大的曝光量也会带来一些负面影响，例如被别人抄袭或者洗稿。</p><p>昨天下午，同事给我看了一篇秋叶 PPT 旗下的新号「职场神助攻」发的一篇文章《<a href="https://mp.weixin.qq.com/s?__biz=MzA4NzMxNTk2Ng==&mid=2247523168&idx=1&sn=f767c953d84e0ff895c14dd412b95f08&scene=21#wechat_redirect">涨知识了，原来简单的电脑锁屏还能玩出这么多花样！</a>》</p><p>说实话，这篇文章，和我去年 9 月份发布的文章《<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649890610&idx=1&sn=80b1a1693d942d5ec57fe9181ebcbfb4&scene=21#wechat_redirect">这12个好玩的电脑屏保，让你成为别人眼中最靓的仔。</a>》非常像，我本能地觉得自己被抄了：</p><p>同样是工具号，写相同的选题，无可厚非，我也不能说什么，但连行文方式都一样，就有点此地无银三百两了。</p><p>这篇抄袭的文章，开头所使用的引入方式，和我写的文章几乎一模一样，都是在吐槽 Windows 自带的屏保程序难看：</p><p><img src="http://cdn.penghh.fun/mweb/16099816108279.png"></p><p>此外，这篇文章中还引用了我自己起的一个短语「匍匐前进的布朗熊」：</p><p><img src="http://cdn.penghh.fun/mweb/16099816273693.jpg"></p><p>为了验证这个短语是我最先起的，我在 Google 中用关键字「匍匐前进的布朗熊 电脑屏保」进行搜索，并将时间限定在「2020 年 1 月 1 日 - 2021 年 1 月 5 日」。</p><p>搜索出来，排在第一位且发布在知乎的文章，就是我写的，时间为 2020 年 9 月 3 日，而第二条结果也用到了「匍匐前进的布朗熊」，时间是在稍晚的 2020 年 11 月 18 日。</p><p><img src="http://cdn.penghh.fun/mweb/16099816420250.png"></p><p>当我在微博上质疑助攻姐抄袭我的这个短语时，她也拿出了其他搜索结果来自证清白，解释说写文章的时候参考的是其他资料，并不知道这个短语最开始是我写的：</p><p><img src="http://cdn.penghh.fun/mweb/16099816520164.png"></p><p><img src="http://cdn.penghh.fun/mweb/16099816632076.png"></p><p><img src="http://cdn.penghh.fun/mweb/16099816734616.png">这篇知乎文章的发布时间为 2020 年 10 月 30 日，链接 <a href="https://zhuanlan.zhihu.com/p/270286326">https://zhuanlan.zhihu.com/p/270286326</a></p><p>除了这个，之前我在怀疑「职场神助攻」抄袭同事 Cherry 的另外一个选题「医疗工具」，同事在群里说了一下后台的数据：</p><p>助攻姐连续两周在公司的公众号「一周进步」后台的阅读和分享数都是排名第一。</p><p><img src="http://cdn.penghh.fun/mweb/16099816939429.png"></p><p>有微信公众号后台数据作为证据，想问助攻姐，你可以说完全没有把我们公司公众号的文章作为你写文章时的参考资料吗？</p><p>除了我这个「电脑屏保」选题，这个号之前疑似抄袭过我们另外的选题：</p><p>原文：“看病百度，癌症起步” 权威的健康科普平台，推荐这些！<br>Copy：别一生病就百度，这7个健康科普平台才靠谱！</p><p>抄袭标题：</p><p>原标题：微软推出的逆天神器，让我抛弃用了5年的 Chrome。<br>Copy：微软推出的新版Edge浏览器，让我抛弃用了5年的Chrome！</p><p>原标题：这款相见恨晚的效率神器，让我卸载了80%的软件。<br>Copy：这款超1.2亿次下载的小体积效率神器，让我卸载了电脑上80%的软件！</p><p>抄选题就算了，惊呼这届新媒体人都不会起标题了？？？还是连标题都懒得起了？</p><p>秋叶 PPT 旗下的这个新号「职场神助攻」，其实有一种套路：</p><p>为了迅速做大，快速产出内容，就会去研究同行的工具号，看他们发布文章的选题和阅读量，然后依葫芦画瓢照着 Copy 一篇，留下参考文章中介绍的部分工具，再加入一些新的工具（或者把两篇参考文章的内容拼凑在一起），就变成了一篇新的原创文章，冷血麻木，比我这个木得感情的工具人还木得感情！</p><p>嗯，我写的东西是垃圾，公众号确实也做得不咋地，连写的垃圾都被人抄袭，那抄的人是连垃圾都不如吗？</p><h2 id="另外一个抄袭-·-未经授权使用我的图片"><a href="#另外一个抄袭-·-未经授权使用我的图片" class="headerlink" title="另外一个抄袭 · 未经授权使用我的图片"></a>另外一个抄袭 · 未经授权使用我的图片</h2><p>据我所知，助攻姐还负责运营秋叶家的另外一个知乎账号「秦阳」，她在一个回答里面用到的两张截图，也是来自我之前写的一篇文章《<a href="https://mp.weixin.qq.com/s?__biz=MzAxMjY0NTY5OA==&mid=2649880429&idx=1&sn=6f626406d88a421fd518a88d899fe9b3&chksm=83abf340b4dc7a56221f4e0571af4d48ed27b93520ae7ffacb974dc4ee0d399fc4e84036183e&scene=21#wechat_redirect">Win10发布四年，这30个技巧还有很多人不知道！</a>》。</p><p><img src="http://cdn.penghh.fun/mweb/16099815394214.jpg"></p><p>这两张图片太有辨识度了：</p><p>一张介绍的是 Windows 的云剪贴板功能，不幸的是，图片里面的剪贴板内容，如「你在哪儿？我看不见」、「测试一下云剪贴板的个数」，就是那时我测试这个功能时自己随便输入的内容。</p><p>另外一张图，使用的是我去年非常喜欢的一个在线样机工具 Screely，那时我总喜欢先把截图上传到这个样机网站，套上一个类似 Mac 窗口截图的样机，再插入文章中。</p><p>请问助攻姐，你怎么解释这两张一模一样的图片呢？</p><p>因此，也不是我今天才冤枉你抄袭，因为你的抄袭是：</p><p>有「前科」的。<br>有「前科」的。<br>有「前科」的。</p><p>还有一个非常尴尬的事情是，那时我刚发现被未经授权引用了这两张图片，就在知乎上艾特了他们，但他们还是无动于衷，未对回答做出修改。</p><p>截至发本文的时候，那两张图片还在。感兴趣的朋友欢迎前去知乎围观，别说我冤枉他们：</p><p>秦阳在知乎问题「有哪些小白非常有必要知道但又不知道的 Windows 使用技巧？」的回答：</p><p><a href="https://www.zhihu.com/question/42056923/answer/1012248907">https://www.zhihu.com/question/42056923/answer/1012248907</a>  </p><p><img src="http://cdn.penghh.fun/mweb/16099815128712.png"></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>写这篇文章，一方面是为了泄恨，另一方面，是为了想让一些读者知道，一些你们所喜欢的大号、所以为的光明伟岸的新媒体团队，他们的真实嘴脸，原来是如此不堪，如此面目可憎。</p><p>希望屠龙少年最终不会成为恶龙，也自我告诫。</p><p>以上。</p>]]></content>
    
    
    
    <tags>
      
      <tag>新媒体</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的 2020 年度总结</title>
    <link href="/2020/12/24/2020-12-24-2020summary/"/>
    <url>/2020/12/24/2020-12-24-2020summary/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>2020 年即将过去，这是不平凡的一年，以一个人们始料未及的方式开始，至今在国外依然没有看到好转的趋势。</p><p>我中间有好长一段时间没有关注国外的数据，后来在一个群里看到一位网友 @boyzcl 发布的截图，才意识到：它让全人类付出的代价实在是太惨重了。</p><p>数据是一串串冰冷的数字，但背后是一条条鲜活的生命，但愿不好的数字能早一刻停滞下来。</p><p><img src="http://cdn.penghh.fun/mweb/IMG_7559.jpeg" alt="IMG_7559"></p><p>按照去年的做法，我也想试着写一下 2020 年的个人总结。</p><h2 id="微信公开课"><a href="#微信公开课" class="headerlink" title="微信公开课"></a>微信公开课</h2><p>今年年初很幸运，通过微博抽奖，免费获得了一张微信公开课的门票，原以为能见到张小龙本人，还进了一个叫「广州市民张小龙个人演唱会」的微信群，但 1 月 9 日开场的时候，只看到了张小龙提前录好的 VCR，虽然票是免费的，但其实我内心还是挺失落的。</p><p>张小龙原先就深居简出，不怎么接受外界的采访，后来甚至连朋友圈都不怎么发了，因为他的朋友圈耳目众多，一不小心就给没有道德操守的媒体截图，解读出各种自以为是的内容，而且张小龙还不能放下身段，主动去反驳他们，因为真理总是越辨越黑，所以最好的方式还是——不发朋友圈。</p><p>外界要想客观地获得第一手的张小龙产品心法，还得依靠一年一度的「微信公开课」，由于是自己亲手打造的产品，张小龙出来演讲，一方面是为自己的产品代言，看好自己对产品的规划和设计，另一方面，其实也是想借这个机会，来澄清外界对微信这个产品、微信背后的这个团队的误解，解释清楚：为什么许多用户想要的功能，他们不做？</p><p>来听张小龙演讲的人，其实也并不轻松，因为不少人可能都是抱着这么一种想法：试图从他的只言片语中，解构出微信下一步的动向，找到新的流量洼地或者所谓的风口。</p><p>但我没有那么大的诉求，我只是想听听看，这个已经打造出一个 10 亿级用户的产品经理，他对产品的一些最新思考、对微信这个产品本身的看法（例如为什么要推出某个特性或者某个 idea 是如何想到的）。</p><h2 id="知识星球运营"><a href="#知识星球运营" class="headerlink" title="知识星球运营"></a>知识星球运营</h2><p>今年 5 月份我创建了一个免费的知识星球「效率工具指南」，它可以看成是我的另外一个朋友圈，主要分享我遇到的各种效率工具、软件使用技巧，以及有时回答一些朋友的提问，顺便一提，它也是可以匿名提问的。</p><p><img src="http://cdn.penghh.fun/mweb/image_88512424255582_4.jpg" alt="image_88512424255582_4"></p><p>截至目前，这个星期创建了 211 天，有 497 位朋友加入，发布了 332 条动态，这里的动态包含一些网友的提问、一些网友对我发布的作业的互动和一位网友 @Janenesome 发布的动态。</p><p>单看数据，我这个星球运营得确实不怎么样，互动量极少，尤其是前期的点赞和评论都非常少，但幸运的是，有三位朋友经常来给我的动态点赞和评论，其中一位朋友还对我发布的内容给了极大的肯定：</p><blockquote><p>你那个星球早就应该收费了，要对自己的交付有信心。</p></blockquote><p><img src="http://cdn.penghh.fun/mweb/1608569144.jpeg" alt="1608569144"></p><h2 id="年度-flag-完成情况"><a href="#年度-flag-完成情况" class="headerlink" title="年度 flag 完成情况"></a>年度 flag 完成情况</h2><p>年初的时候，我立下了三个 flag，分别是：</p><ul><li>脱单</li><li>能从写作赚到更多的钱</li><li>高质量的输出</li></ul><p><img src="http://cdn.penghh.fun/mweb/16087427082637.jpg">目前我完成了一个，高质量的输出成了一句空谈，因为今年没有写出一篇自我感觉满意的文章。</p><p>质量不够，数量来凑。年中有一段时间进行了连续 30 天的日更，确实有些辛苦，阅读量也没有见长，但至少勉强做到了，以后有更充裕的时间，再立个新的 flag 挑战至少 30 天的日更～</p><h2 id="年度音乐"><a href="#年度音乐" class="headerlink" title="年度音乐"></a>年度音乐</h2><ul><li>梁博 - 想念</li><li>李健 - 美丽生灵</li><li>达达乐队 - 南方</li><li>五条人 - 梦幻丽莎发廊</li><li>Eels - Ordinary Man</li><li>Banners - Shine A Light</li><li>约翰·列侬 - Imagine</li><li>White Cherry - MELANCHOLY</li><li>棱镜乐队 - 机场雷雨</li><li>失眠飞行（特供版）</li></ul><p>梁博，中国好声音第一季的冠军，2014 年打工的暑假第一次听到他在好声音翻唱的《私奔》，这几年断断续续听他的歌，例如《男孩》、《日落大道》、《表态》、《我不知道》，创作力旺盛。这首《想念》是今年元旦当天发布的，我喜欢这首歌的第一句歌词「其实孤独从来都和那些节日无关，像外面曾与我无关」。等情况稳定，梁博开演唱会，一定要去看一次。</p><p>盼了一年，李健拖了五年的专辑，还是没见到影子，我都想脱粉了。《美丽生灵》是一首初听不觉得惊艳，但越听越觉得耐听的歌曲。我发现我不只是喜欢李健写的歌词，还喜欢他在歌词中加入的拟声词和「吟唱」，例如这首歌里面的「嗯」，《风吹麦浪》里面的「嗯啦嗯啦」。</p><p>达达乐队、五条人是看了乐队的夏天 2 后才知道的两支乐队：</p><ul><li>达达唱的这首《南方》很民谣</li><li>五条人给我的感觉是人歌合一，自带笑点，因为他们俩是汕尾人，听他们用方言唱的歌，不会有陌生感，基本都能听得懂</li></ul><p>这周日要去长隆看五条人和达达的演出，想想就开心（辛苦了同事 @Cherry 苦口婆心说服了我一下午，详见这里《<a href="https://mp.weixin.qq.com/s/a8tajky5SxJ1Fkpum2TSyA">做人太有趣了，下辈子我还想做人。</a>》）</p><p>《Ordinary Man》和《Shine A Light》这两首是美剧《良医》中的背景音乐，前一首沧桑的嗓音，一听就是有故事的人哈哈哈哈，很对我的胃口；后一首听着就觉得激动人心，至于那道光是什么，每个人有每个人的理解。</p><p>《MELANCHOLY》是一首纯音乐，最初是在室友刷的一条抖音视频上听到的，通过听歌识曲就找到了歌名，舒缓的旋律，可以用作摇篮曲。</p><p>《机场雷雨》是何老师分享给我的歌，应该是我听到的第一首棱镜的歌，喜欢这种白描式的歌词，一句歌词就是一个画面。来自四川的宝藏乐队，还有其他好听的歌，例如《总有一天你会出现在我身边》。</p><h2 id="好用的应用"><a href="#好用的应用" class="headerlink" title="好用的应用"></a>好用的应用</h2><p>滴答清单：把待办事项 App 当成我的日记本。  </p><p>一个比较欣慰的事情是，昨天有位滴答清单的工作人员加了我的微信，说要给我寄一份礼物，感谢我之前推荐过他们的产品，这可以算是在网上分享带来的一个意外之喜。</p><p><img src="http://cdn.penghh.fun/mweb/16087428597229.jpg" alt="-w418">  </p><p>Seven：一个付费的运动 App，它让我养成了做每天做运动的微习惯，中途有间断，但至少坚持下来了（比较尴尬的是，年底这 10 多天我又停下来了）。   </p><p>小宇宙：即刻团队推出的播客 App，虽然我使用小宇宙的次数不多，但这个应用的交互非常棒，就你一使用，可以明显地感觉到它与其他同类应用的差别，别人还是在做一个凑合可以用的产品，而他们是在用心做产品。    </p><p>Day One：这是一款日记软件，有时想起来就会用，由于没有购买会员，使用手机记录的东西不会同步到电脑端。它会记录下你写日记时的地理位置，虽然定位不那么精确，但以后走过（或待过）比较多地方的时候，看起来应该会有一种别样的感觉，就像夜晚的天空，星星飘落在不同的地方。愿你的生命有足够多的星星，来造成一个璀璨的银河。  </p><p>OffScreen：它一定程度上帮我减少了手机的使用时间，因为每当看到这个 App 的「你在就寝后又玩了 XX 分钟」、「今天已经拿起手机 XX 次」提醒时，多少会有一种「罪恶感」。<br>谜底时钟：这是 OffScreen 团队的另外一个作品，最吸引我的是时钟的设计，颜值让它在众多同类应用中脱颖而出。   </p><p>谜底时钟的出现，可能也可以成为买苹果产品的一个理由：苹果生态吸引人的，不仅是好用的苹果系统，更重要的是，上面有各种各样好用、好看的应用。</p><p>良好的生态可以激励更多的开发者到这上面来开发更好的产品，良好的生态包含：</p><ul><li>开发者可以在这里体面地赚到钱</li><li>开发者开发出来的产品，被他人盗版的成本较高</li></ul><p>此外，苹果在今年主动降低了对开发者的抽成比例：年收入少于 100 万美元的应用，抽成比例由 30% 调整为 15%。</p><p>别说了，现在学 iOS 开发，还来得及吗？</p><h2 id="友情推荐"><a href="#友情推荐" class="headerlink" title="友情推荐"></a>友情推荐</h2><p>这里还要给一位朋友推荐一下他们家的产品——点赞抽奖，这是微信上的一款抽奖小程序，可用来创建红包抽奖，也可参与他人发起的抽奖。</p><p>年底到了，如果你想给支持自己的关注者或小伙伴等发放福利，可以考虑使用这个工具。</p><p><img src="http://cdn.penghh.fun/mweb/IMG_7560.jpeg" alt="IMG_7560"></p><h2 id="购物清单-一些值得的投资"><a href="#购物清单-一些值得的投资" class="headerlink" title="购物清单/一些值得的投资"></a>购物清单/一些值得的投资</h2><p>微信周边「阿绿」：好几次出现在我拍的照片中，就是那只绿色萌萌的狗狗，在微信上有它和「阿白」的官方表情包<br>iMac 2020<br>西部数据 2TB 移动硬盘<br>佳能 M50<br>红米路由器 AX6<br>喜马拉雅买 1 送 13 会员：价格好像是 200+，和我家的姐姐弟弟一起分摊的，送的会员各取所需，我拿了其中的网易云和腾讯视频<br>小米冲牙器：刚买没多久，只用了一次，设计有点丑，体积有点大，带出去有些占地方</p><p>值得的投资：</p><ul><li>洗牙</li><li>得到电子书年度会员</li><li>Seven App</li></ul><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>去年一起工作的同事，不少都走了，最开始有些不舍，但后来想了想，这就有点像是大学毕业时的情况，有些人选择继续升学，有些人选择工作，有些人选择回家继承家业……有缘相聚，同时也意味着会有告别的一天。</p><h3 id="各自为战"><a href="#各自为战" class="headerlink" title="各自为战"></a>各自为战</h3><p>以前我会以为，一个公司的所有部门会主动联合起来，齐力断金，一致对外，但后来发现是我想多了，不管大公司小公司，到了某个阶段，不同部门明面上是一个整体，但实际上是各自为战，锦上添花不多见，部门间甩锅才是稀松平常的事，工作得越久，这种体会越深刻。</p><p>之前看过 caoz 老师写的一篇文章《<a href="https://mp.weixin.qq.com/s/L8ctSpEiKnlrjG_NH7dK_A">谈谈巨头的逻辑</a>》，其中谈的也是这个现象：</p><blockquote><p>巨头（内的各部门）从来不是一个整体，也会存在不同部门的利益诉求……巨头内部很多时候也会有一种尴尬，就是为什么明明我们是一家公司，我跟其他部门提个需求，还没有外部合作伙伴的优先级高，这在巨头，是常态，如果你在巨头打工时间比较长，你会有很多类似这样的案例体会。</p></blockquote><h3 id="工作的焦虑"><a href="#工作的焦虑" class="headerlink" title="工作的焦虑"></a>工作的焦虑</h3><p>每次开始写新的文章，可以说是一个新的轮回或者说开始。每个周末都要想一下，下周要写点什么，其间有过焦虑和抓耳挠腮的时刻。</p><p>焦虑的是，有时我觉得自己陷入了一种套路式的重复，总是在重复过去的东西，写工具文章给我带来的新鲜感和刺激变少了，觉得自己停止成长了；抓耳挠腮是因为发愁要写什么东西，其实我从今年年初就开始考虑「选题枯竭」的问题，但侥幸的是，这一年我还是勉强撑过来了。</p><h3 id="工作与生活"><a href="#工作与生活" class="headerlink" title="工作与生活"></a>工作与生活</h3><p>在上一家公司的时候，我会主张工作与生活要有明显的界限，而且还非常认同在豆瓣日历上看到的一句话：</p><blockquote><p>既然为了活命而工作，为什么又要为了工作而卖命？</p></blockquote><p><img src="http://cdn.penghh.fun/mweb/16086442245901.jpg"></p><p>但后来我的工作换成了写东西，这也是我的兴趣所在，即使是在没事的周末，我有时也会想着写东西的事情，选题也好，还是发在自己公众号上的文章，我并不会说刻意区分哪些是工作内的事情，哪些是自己的事情，当然这些事情之间存在着优先级。</p><p>重要的是，现在做的事情，和自己的长期目标（建立自己的个人品牌和影响力）是统一的，就还有值得做下去的理由。</p><p>说这些并不是想夸自己，因为自己也是个普通人，也会有犯懒、不想工作，只想咸鱼葛优躺的时候，但想着人生漫长，家里无矿，还是要保持一个积极的心态，时不时给自己加油打气。</p><p>末了，前两天还看到我喜欢的一位 Up 主 @极地手记 发布的一个视频《<a href="https://mp.weixin.qq.com/s/C03fCgIPrXbFHaQK6l9pwA">写给三年前辞职拍视频的自己</a>》，视频的形式比较简单，就是这位 Up 主读着一封写好的信，回顾辞职三年以来做全职 Up 主的经历，没有刻意突出自己一路走来有多么不容易，就纯粹是在讲故事，没有过多的叙述技巧，其中提到：</p><blockquote><p>很抱歉，现在的我对于如何过好这一生，依然没有什么明确的答案，但是找到一份让你热爱的事业，遇到一个人生伴侣，做对别人有价值的事情，是我用这三年的时间写给自己的回答。</p></blockquote><p>对了，还有一个非常奇妙的事情是，这位 Up 主和我是同一天生日。  </p><h2 id="2020-年幸运的事情"><a href="#2020-年幸运的事情" class="headerlink" title="2020 年幸运的事情"></a>2020 年幸运的事情</h2><ul><li>公众号有一段时间来了好多新的关注者，从最初的 3000+ 增加到现在的接近 7000（感谢各位朋友的支持）</li><li>遇到了何老师</li><li>同事帮我过生日，准备了一个蛋糕，给了我一个惊喜</li><li>拿到了期待已久的驾驶证（我是 2018 年上半年报名学车的，看到这如果有还在上学的朋友，请在校就把驾照拿了，不要拖。工作之后再来练车，不但费时间更费钱）</li></ul><h2 id="2021-年的-flag"><a href="#2021-年的-flag" class="headerlink" title="2021 年的 flag"></a>2021 年的 flag</h2><ul><li>把公众号做到 1 万关注，希望能接到广告</li><li>多做一些视频内容，不然对不起自己买的 Mac</li><li>培养一个习惯，早睡早起</li><li>多出去走走，看看这个大世界</li></ul><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>如果你有幸看到了这里，那我还是想提一个和去年一样的建议：请试着写一下自己的 2020 年度总结。</p><p>这个总结可以比较正式，也可以比较随意，重要的是，它是你写给自己的，你不要担心它写得好或坏，开始写就起了一个非常好的头，跟随自己内心的想法写下来，才是最重要的。</p><p>相关阅读：<a href="https://mp.weixin.qq.com/s/9kCLzPnY5NRVB9OAKdjRxg">我的 2019 年简短总结</a></p><p>以上。</p>]]></content>
    
    
    
    <tags>
      
      <tag>年终总结</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>首席工具人的我，是怎样挖到一个又一个神器的｜我的工具观</title>
    <link href="/2020/12/03/2020-12-3-tools/"/>
    <url>/2020/12/03/2020-12-3-tools/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>前两天看到一位网友分享的选择「效率工具」的三原则：</p><blockquote><p>上手简单<br>核心优势<br>解决问题</p></blockquote><p>看了他分享的这三个原则，我也想试着说一下，我找了这么多工具形成的「工具观」：</p><h2 id="贵精不贵多"><a href="#贵精不贵多" class="headerlink" title="贵精不贵多"></a>贵精不贵多</h2><p>把一个工具用好，远好过你去找多个同类的工具；在满足基本需求的情况下，才去考虑找一些稍微大而全的工具。</p><p>例如最开始我是用 TinyPNG 来压缩图片，但这个在线工具有个缺点，它只能在线压缩 5 MB 的图片；后来我找到了一个更好用的替代品——docsmall，它除了可以压缩图片，还可以压缩 Gif 和 PDF 文档，记住了一个工具，其实也让我记住了多个，减轻了大脑的记忆负担。</p><h2 id="找到工具的最佳使用场景"><a href="#找到工具的最佳使用场景" class="headerlink" title="找到工具的最佳使用场景"></a>找到工具的最佳使用场景</h2><p>找到符合工具本身的使用场景，或者说明确某个工具的边界（上限）。有些工具在某个场景下非常好用，但一旦超过某个界限，它就会显得力不从心了，但我不会因为它在某个场景下不适用，就把它归类到不好的工具里面。</p><p>例如，文件分享工具「蓝奏云」在分享 100 MB 以下的文件时，就非常好用，可以准确监测分享文件的下载量，但当分享的文件超出 100 MB 时，蓝奏云就派不上用场了，但这并不妨碍我称蓝奏云是一个好工具。</p><h2 id="转换思路，适当融合"><a href="#转换思路，适当融合" class="headerlink" title="转换思路，适当融合"></a>转换思路，适当融合</h2><p>适当融合，以认知范围内的工具去解决未知的问题。</p><p>这个说起来有点虚，还是举个例子：有人遇到一个问题，iPad 自带的录屏功能不能实现长时间录屏，录到一半会自动中断，来询问我该使用什么工具？</p><p>起初遇到这个问题，我的首要想法是，找一下 iPad 上有什么好用的第三方录屏工具，但试用了一个 iPad 上的第三方录屏工具后，我就放弃了，因为它需要付费，这对低频使用的工具来说非常不划算。</p><p>后来我灵机一动，想到了另外一个免费的解决方法：将 iPad 投屏到电脑上，再使用电脑的录屏软件进行录屏，就顺利地将原先的问题转换为——如何投屏到电脑，以及在电脑上使用什么工具进行录屏？转换之后的两个问题，对我来说都不是问题了。</p><blockquote><p>投屏工具选择 iTools 投屏大师。<br>电脑录屏工具选择 EV 录屏或者 OBS。</p></blockquote><p>表面上我们是在找工具，实际上，我们还是在寻找解决问题的最佳方案或者次优方案。   </p><h2 id="其他挑选工具的原则"><a href="#其他挑选工具的原则" class="headerlink" title="其他挑选工具的原则"></a>其他挑选工具的原则</h2><ul><li>在满足自身需求（能帮你解决遇到的问题）的条件下，再考虑产品的颜值或用户体验。</li><li>优先选用行业知名软件。例如做设计的人，可能会优先选用 Adobe 全家桶，而不是使用一些小众产品。</li><li>从可靠优质的信息源获得工具推荐。例如小众软件、国外的 Product Hunt。  </li><li>注意甄别，识别推广。不管什么平台，有流量的地方就存在付费推广，包括你以为可以信任的某个工具大 V 或博主，之所以推荐某个工具，还是因为他收了钱，不得不一顿瞎吹它有多么好用，实际上它真的没有那么好用。  </li><li>开源免费 &gt; 免费 &gt; 收费。多数情况是这样，但这个原则并不是一成不变的，因为有些免费软件的吃相真的很难看，比如 360 浏览器、2345 全家桶，如果市场只剩这些免费的垃圾软件，我还是宁愿使用付费的。 </li><li>支持你喜欢的产品。你不氪金我不氪金，良心终会变心。支持并不一定是物质上的，你也可以用你的实际行动，把你喜欢的产品安利给身边的人。</li><li>不以使用盗版软件为荣，不以白嫖产品为傲。  </li><li>保持好奇心，用好搜索。</li></ul><p>以上，希望有帮助。</p>]]></content>
    
    
    
    <tags>
      
      <tag>感悟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>25 岁来临前的感言</title>
    <link href="/2020/12/01/2020-12-1-25birthday/"/>
    <url>/2020/12/01/2020-12-1-25birthday/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>music：Life is wonderful - Jason Mraz<br><audio src="https://win-web-rh01-sycdn.kuwo.cn/36adf0875f39fbcc63c6de199354e5d7/5fc63ec2/resource/n1/62/30/4205227431.mp3" type="audion"></audio></p><p>在老家，我们那边的传统都倾向于算虚岁，从妈妈的肚子里出来，就默认是 1 岁了，所以我妈总会把我算「大」了，似乎总想让我快一点长大，在每一年新年伊始的时候，喜欢对我说一些这样的话：</p><blockquote><p>一年多一岁，你不能再这样了，你得更「会说话」、更成熟一点、找一份更好的职业……</p></blockquote><p>每年换一句，末了还不忘捎上一句，啥时候娶老婆呢？  </p><p>我自认为自己是个腼腆、无趣、在人群中不会发光、不会开玩笑、不幽默、不主动社交、不善于维护关系、没有亲和力、没有人格魅力的人，这么多年下来，只剩下两只手指头数得过来的可以称作朋友的人（异性朋友几乎没有），多少可以算是一种印证。</p><p>小时候我爸就看出了我性格内向孤僻，也时常鼓励我说，「不要太内向，要开朗一点」，但我多数时候还是停在原地，任其自然发展，以至于长大之后有一回我爸看见我小时候的照片，发出一声：  </p><blockquote><p>笑容真灿烂。</p></blockquote><p><img src="http://cdn.penghh.fun/mweb/IMG_4650.jpg" alt="IMG_4650">那是 2016 年的寒假，当他说那句话的时候，虽然用的不是叹息的语气，但我觉得自己听出了感慨的意味，那时在自己的朋友圈发了一条仅自己可见的动态：</p><blockquote><p>我是有多久没在爸爸面前灿烂、很放开地笑过一回了。 </p></blockquote><p>我也自认为自己是个慢性子的人，做啥都慢，好像总比别人慢几拍。在家洗碗拖地慢，干活挑料（这里的挑料是指废弃塑料分类）慢，学习理解得慢。</p><p>我妈小时候总在为我的慢性子担忧，她说：</p><blockquote><p>以后你要是出去给人干活，手脚这样慢，怎么能吃得上饭呢？</p></blockquote><p>当然，她不仅会为我发愁，也会给我想一些解决方法：</p><blockquote><p>要是监工的老板来看你干活，你可要把手脚装得麻利一点，不要给人捉住把柄。</p></blockquote><p>幸运的是，毕业两年多，我还是活得比妈妈以前预想的要好一些，我没有成为一名靠出卖体力挣钱的塑料加工从业者。  </p><p>说到塑料加工，它让我想起了遥远的高三毕业后的那个夏天。</p><p>那个夏天我第一次去到外面打工，那个工厂在离我家有 50、60 公里的金平区，因而晚上是住在工厂后边的铁皮宿舍。</p><p>那是高三的一位朋友给我介绍的工作，起初听他说这个厂是做玩具的，去到里面做了一阵子，和其他人交流之后才知道，这个工厂生产的东西是给去世的人准备的，而且主要销往国外。</p><p>看着手里捧着的撒满金粉的塑料花，周边的各种圆形的泡沫制品，起初我是不能理解和接受的，因为我觉得，人死了就死了，为啥还要折磨活着的人呢？</p><p>这里活着的人特指我自己，因为那段打工经历确实很辛苦，一天工作十二个小时，傍晚吃完饭还要上夜班，只有 75 块钱，晚上下班后还要奔跑着回宿舍，抢公共厕所洗澡，洗完还要自己手洗衣服。</p><p>那时候每天最幸福的时刻，就是晾完衣服，去工厂外边的小卖部或者超市买汽水或冰淇淋，然后就拖着疲惫的身子爬上床，等待睡意来临，一夜睡到天亮，不会受到失眠的困扰。  </p><p>这段经历，让我愈发觉得，以后还是得找一份体面一些的工作，至少不要出卖体力，而且有一些空闲时间留给自己。没了空闲的时间，我就不是我自己了。</p><p>自己的往事就聊到这，接下来想谈谈我近些年的感悟，也和知乎上以前看到的一个很火的问题「20岁做什么，可在 5 年后受益匪浅」有关。</p><p>现在我已经到了 25 岁的年纪，到了可以以一种「上帝视角」来回答这个问题。</p><p>如果能让我穿越回去，我一定会：</p><h2 id="重视公众号写作"><a href="#重视公众号写作" class="headerlink" title="重视公众号写作"></a>重视公众号写作</h2><p>坚持写公众号，而不是有一搭没一搭地写。多数人对未来的预判总有局限性，在没能足够看清未来的方向时，投入精力或时间做某一件事，总是显得<strong>患得患失</strong>，不够重视，尤其是在那种<strong>短期没有回报、不重要不紧急</strong>的事情上。</p><h2 id="大胆追求爱"><a href="#大胆追求爱" class="headerlink" title="大胆追求爱"></a>大胆追求爱</h2><p>大胆去爱，大胆向别人表达自己的情感，不要害怕被拒绝，不要害怕受伤。20-25 岁是一个风华正茂的年纪，不谈恋爱等着老来相亲或懊悔吗？</p><p>有些人还没谈恋爱，就提前发愁说，想到以后要和某个人待在一起生活一辈子，觉得这事就不太可能。</p><p>首先，可能是他们没做好一个心理准备：接受未来婚姻会出现失败的可能。能接受存在失败的可能性，才能勇敢、无包袱地踏出去。</p><p>其次，可能是你所爱非人。我之前曾看过一位博主表达的观点，衡量一个伴侣最重要的标准在于：是否具备成长性思维，即是否愿意改变自己。尽量远离那些口头禅是「我就是这样，你还要我怎么办」的人。</p><p>我承认，两个人在一起久了，难免会出现「腻」的情况，但这并不可怕，关键在于两人是否会做出改变，努力试着共同创造新的体验，例如试着一起去做对方喜欢而你还没不感兴趣的东西。  </p><p>由于我不是情感博主，感情经历也不丰富，只能点到为止，关于恋爱的更多内容，可以参考这篇文章：</p><p><a href="https://mp.weixin.qq.com/s/OzLVA8iXsQeDmXknwzn9rw">人生最重要的选择是什么？</a></p><h2 id="不要说服别人"><a href="#不要说服别人" class="headerlink" title="不要说服别人"></a>不要说服别人</h2><p>有些朋友看到我写的是电脑 &amp; 软件相关的内容，以为我对电子产品了若指掌（其实我懂的只是一点皮毛，真没有别人想象中的那么多），会来咨询我购买手机、电脑和平板电脑的建议，由于我是果粉，我会强烈建议他们买苹果的产品。</p><p>但后来我发现我错了，那纯粹就是浪费口舌，也让我明白了一个道理：</p><p><strong>世界上最没用的事情，就是说服别人</strong>，例如说服别人买某个东西。</p><p>这件事有多浪费时间呢？你要苦口婆心跟他说产品的优点在哪，买哪个型号，给他找好产品的链接……</p><p>到最后，来问我的人，大概率都会说：</p><blockquote><p>算了，还是买 Windows 笔记本 / 安卓平板好了。</p></blockquote><p>听完一口老血差点吐出来。</p><p>以后不再劝别人买苹果的东西了，爱咋咋滴。  </p><h2 id="不要随便把别人当成朋友"><a href="#不要随便把别人当成朋友" class="headerlink" title="不要随便把别人当成朋友"></a>不要随便把别人当成朋友</h2><p>不要随便把别人当成可以说真心话的朋友，世上真没有多少可以称作朋友的。</p><p>你以为某人把你当成朋友，以为可以交心，但这可能只是因为你暂时对他有价值，而不是因为彼此的特质相互欣赏。</p><h2 id="不要做一个害怕拒绝别人的「老好人」"><a href="#不要做一个害怕拒绝别人的「老好人」" class="headerlink" title="不要做一个害怕拒绝别人的「老好人」"></a>不要做一个害怕拒绝别人的「老好人」</h2><p>老好人、暖男、中央空调，这三个词好像是等价的，在如今的语境中都算是贬义词。</p><p>上大学的时候，有人就给我起了个暖男的外号，为什么呢？因为每次吃饭的时候，我都会从书包里掏出一包抽式的纸巾，不管在场有多少人，一包这样的纸巾基本能满足所有人的需求（我真是体贴到家……），但不开玩笑地说，其实我非常讨厌这个外号……</p><p>说回正事，之所以害怕拒绝别人，还是因为我们过于在意我们在别人眼里的形象或者他人的看法，正因为在意，反而越不敢轻易拒绝别人，害怕一次的拒绝，就会让以前建立的「光辉形象」化为乌有……</p><p>害怕拒绝别人的人，会让人觉得你没有原则，时间很廉价，可以随意驱使。</p><p>不敢拒绝，硬是把超出自己能力范围的事情扛下来，后续接踵而来让你烦恼的事情，可能会远远超出一次拒绝需要花费的心力。</p><p>心理学上有个术语叫「<strong>课题分离</strong>」，这是心理学家阿尔弗雷德·阿德勒提出的理论，大意是，要想解决人际关系的烦恼，就要区分什么是你的课题，什么是我的课题。</p><p>你是否要拒绝别人是你的课题，别人被拒绝之后心里怎么想是他的课题，区分好这两者，可以解决大多数烦恼和纠结。</p><p>对了，一个被拒绝一次之后就觉得很受伤的人，其实也不值得深交。</p><p>理智起见，选择适当地拒绝别人，反倒落得轻松自在。</p><p>以上。</p>]]></content>
    
    
    
    <tags>
      
      <tag>生日</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>不要忽视长期陪伴你的东西</title>
    <link href="/2020/11/22/2020-11-22-router/"/>
    <url>/2020/11/22/2020-11-22-router/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>之所以想写这个题目，是因为昨天换了一个新的路由器，有感而发，想写一下流水账。</p><p>租的房子提前交了未来 6 个月的网费，作为福利，可以免费将家里的网速由之前的 20 Mbps 免费提升到 50 Mbps。</p><blockquote><p>这里有个小知识，宽带宣传中经常见到的 100 M 高速宽带，用的度量单位其实是 Mbps，其全称为 Million bits per second，意为每秒传输百万位（比特）数量的数据，这里的 bit（比特，1 比特等于 1 个位）是表示<strong>数字信号</strong>数据的最小单位。<br>而我们日常中常说的下载速度多少多少兆，它对应的度量单位是 MB/s，其中的 MB 表示 Million Bytes（百万字节），Byte（字节）是计算机用于计量存储容量（<strong>数据存储</strong>）的一种计量单位，比如计算机中文件的大小就是用字节来表示的。<br>字节与比特之间有个换算：1 Byte（字节）= 8 bit（比特/位），因而宽带商家宣传的 100 M，它的真实速度其实只有 100/8 = 12.5 MB/s。为了方便记忆，你可以将 100 Mbps 理解为约等于 10 MB/s。 </p></blockquote><p>免费提升网速之后，我并没有感觉到明显的变化，反而是经常出现「手机显示 Wifi 连接正常，但就是上不了网」的情况。  </p><p>起初我还把原因归结到网络上，但最近真的是受不了了，用 App 给网络测过上行和下载的速度，和装宽带的人聊了一下之后，她发出了一个灵魂拷问：  </p><blockquote><p>你的路由器是双频的吗？   </p></blockquote><p>我内心 OS：哈？双频是个啥？（原谅我，到 0202 年我还不知道路由器的双频是个啥东西）   </p><p>后来在网上看了一下之前买过的路由器的参数，才发现双频可以简单理解为「发出两个 Wi-Fi 信号」。      </p><p>宽带的工作人员还提了一嘴：最好用双频的路由器，信号会稳定一点。    </p><p>吸取了之前贪便宜随意买的路由器的教训之后，购买新的路由器之前，我就在一个群里问了一下，一些有这方面经验的朋友给我安利了几个路由器，分别是：   </p><table><thead><tr><th>路由器</th><th>价格</th><th>参数</th><th>适用面积</th></tr></thead><tbody><tr><td>荣耀 Pro2</td><td>219</td><td>海思 4 核芯片，双频，内存容量 256 MB</td><td>复式/别墅（120㎡ 以上）</td></tr><tr><td>红米 AX6</td><td>329</td><td>高通 4 核芯片，双频，内存容量 512 MB</td><td>大户型（90-120㎡）</td></tr><tr><td>领势 AC2200M</td><td>899</td><td>高通 4 核芯片，三频，内存容量 512 MB，支持 Mesh</td><td>复式/别墅（120㎡ 以上）</td></tr><tr><td>领势 MX5300</td><td>1999</td><td>高通 6 核芯片，三频，内存容量 1 G 及以上，支持 Mesh</td><td>复式/别墅（120㎡ 以上）</td></tr></tbody></table><p>参数大概看看就行（其实我也不太懂），每个路由器的推荐理由：</p><blockquote><p>荣耀 Pro2：好用、颜值高。它的外形四四方方，像一个大号的骰子，天线内置，与平常看到的天线外置的路由器与众不同，价格也可以接受。<br>红米：高性价比<br>领势：路由器这种耐用品要买个好的</p></blockquote><p>我最终选择了红米的 AX6 路由器，看重了高通的芯片，因为最近在看一本科技方面的书《浪潮之巅》，对高通、海思、芯片这些东西有了多一点点的认识。   </p><p>买回来之后，从前天用到现在体验良好，暂时还没有出现我前面说到的问题——手机显示 Wifi 连接正常，且没有断开，但就是上不了网。  </p><p>我使用一个测速 App——<strong>Speedtest</strong>，粗略对比了相同的带宽（50 Mbps）条件下，更换路由器前后的网络速度，下图红色圆角矩形的三个数据是新的路由器的网速，连接的是 5 GHz 频段的 Wi-Fi 信号，而下方的三个测试记录是早前旧路由器的数据，连接的是 2.4 GHz 频段的信号，且测速的时间点不一致，一个是早上和晚上，一个是下午，故这个对比数据也只能大概做个参考。</p><p><img src="http://cdn.penghh.fun/mweb/IMG_BDFBBC52318F-1.jpeg" alt="IMG_BDFBBC52318F-1"></p><p>经过这次的经历，我更加明白了一个事情：  </p><p>千万不要忽视那些会长期陪伴你的耐用品，尤其是高频使用的耐用品，例如手机、电脑，以及这篇文章说的路由器。  </p><p>买个好一些的路由器，真的非常非常值得，毕竟它极大地决定了你在网络世界中的虚拟体验。</p><p>耐用品不像易耗品那样，用完即「消失」，相反，它会长时间陪伴在你身边，有些显而易见，有些不易察觉，但其实正是这些东西，日积月累下来，才真正地决定了我们的生活质量。  </p><p>对了，我之前图便宜买的路由器其实也是小米的，但这回依旧选择了小米家的产品，虽然被坑过，但我第二次还是选择了它 🤦‍♂️——这或许就是爱吧（这可能就是品牌的力量吧）。</p><p>客观地说，小米挺多产品确实挺好的，就像一个朋友 @阿混 老师说过的，大意是：  </p><blockquote><p>所有未经改造的传统用品（尤指家居用品），都需要被小米改造一次。     </p></blockquote><h2 id="来个互动"><a href="#来个互动" class="headerlink" title="来个互动"></a>来个互动</h2><p><strong>你买过哪些小米家的产品呢？用过之后有值得推荐的吗？</strong></p><p>欢迎留言互动（不会没有人留言吧，不会吧不会吧）     </p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><p>除了这篇文章，建议阅读另外一篇写得比我更有深度的文章，也是和路由器有关的：</p><p><a href="https://mp.weixin.qq.com/s/maj5c6ePqYyilqc2oUsHzA">生活别凑合</a>  </p><p>以上，希望有帮助，周末愉快。    </p>]]></content>
    
    
    
    <tags>
      
      <tag>路由器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac 使用技巧 01</title>
    <link href="/2020/11/20/2020-11-20-macOStips01/"/>
    <url>/2020/11/20/2020-11-20-macOStips01/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发地址：<a href="https://mp.weixin.qq.com/s/8RjUszGnObqTKLfrLi-FXw">Mac自带输入法如何输入「犇」和「焱」？Mac使用技巧</a>   </p><h2 id="更改屏幕分辨率"><a href="#更改屏幕分辨率" class="headerlink" title="更改屏幕分辨率"></a>更改屏幕分辨率</h2><p>打开「系统偏好设置 &gt;&gt; 显示器」，可以更改显示器的分辨率。对于大屏幕的 Mac 电脑，由于文字比较小，一般需要适当地调低分辨率来放大文字。</p><p>将分辨率切换到「缩放」，这里提供了 5 种分辨率，中间的选项是默认的分辨率，左侧「较大文字」对应较小的分辨率，右侧「更多空间」对应更大的分辨率，因而文字更小。</p><p>为了放大电脑的文字，你可以选择默认选项左侧的两档分辨率，分别是 2048*1152 和 1600*900。</p><p><img src="http://cdn.penghh.fun/mweb/16056173580452.jpg" alt="-w704"><br>之前我以为分辨率就只有这五档可供选择，看了网上的内容，才知道其他分辨率选项被隐藏起来了。</p><p>按住 Option，点击「缩放」，就可以查看被隐藏的分辨率选项，最低分辨率为 1280*720，如果你再勾选下方的「显示低分辨率模式」，就会看到，同一种分辨率还会分成两类，一类是正常分辨率，另一类是低分辨率。</p><p>切换到低分辨率模式下，屏幕会看起来比较模糊，因此不建议使用。<br><img src="http://cdn.penghh.fun/mweb/16056183664124.jpg" alt="-w704"></p><h2 id="复制-VS-剪切"><a href="#复制-VS-剪切" class="headerlink" title="复制 VS 剪切"></a>复制 VS 剪切</h2><p>直接拖拽移动是剪切。<br>按住 Option 键拖拽是复制。</p><p>当你拖拽一个文件，文件右下角出现一个绿色的加号时，代表复制操作。<br><img src="http://cdn.penghh.fun/mweb/%E6%8B%96%E6%8B%BD%E5%A4%8D%E5%88%B6.gif" alt="拖拽复制"></p><h2 id="调整桌面图标大小"><a href="#调整桌面图标大小" class="headerlink" title="调整桌面图标大小"></a>调整桌面图标大小</h2><p>在处于桌面的状态下，点击「显示」选项卡，选择「查看显示选项」。</p><p><img src="http://cdn.penghh.fun/mweb/16056608939239.jpg" alt="-w433"><br>在打开的窗口中，就可以看到调整桌面图标大小的选项，你可以根据电脑屏幕大小选择合适的图标大小。</p><p>此外，勾选下方的「显示项目简介」，可以让你在不打开文件夹或不展开叠放文件的情况下，了解文件夹中或叠放文件包含的<strong>文件数量</strong>。</p><p><img src="http://cdn.penghh.fun/mweb/16056628245983.jpg" alt="-w272"></p><p>桌面的「查看显示选项」与文件夹内部的「查看显示选项」设置是不共享的。</p><p>如果你想让文件夹内的图片或视频在名称下方显示<strong>分辨率信息</strong>，需要按照前面类似的操作，点击状态栏的「显示 &gt;&gt; 查看显示选项」，勾选「显示项目简介」。</p><p><img src="http://cdn.penghh.fun/mweb/16057482358664.jpg" alt="-w1146"></p><h2 id="显示文件夹路径"><a href="#显示文件夹路径" class="headerlink" title="显示文件夹路径"></a>显示文件夹路径</h2><p>macOS 不像 Windows 系统，打开文件默认会在左上角显示文件夹路径，这对刚用 Mac 的人来说不是很习惯。</p><p>在打开文件夹的状态下，点击状态栏的「显示 &gt;&gt; 显示路径栏」，快捷键为 Option + Command + P，<strong>文件夹底部</strong>就会显示当前文件所在的路径。</p><p>双击路径中的某个文件夹名称，就会跳转到相应的文件夹中。</p><p><img src="http://cdn.penghh.fun/mweb/%E6%98%BE%E7%A4%BA%E8%B7%AF%E5%BE%84%E6%A0%8F%E5%89%AF%E6%9C%AC.jpg" alt="显示路径栏副本"></p><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>Command + Del：快速删除<br>Command + 空格：打开聚焦搜索<br>Command + Shift + G：前往文件夹，输入路径即可到达特定的文件夹<br><img src="http://cdn.penghh.fun/mweb/16051953205391.jpg" alt="-w465"></p><h2 id="管理开机启动项"><a href="#管理开机启动项" class="headerlink" title="管理开机启动项"></a>管理开机启动项</h2><p>为了让电脑开机后迅速进入最适合工作的状态，我们有时会将一些软件设置为「开机启动」。</p><p>如果你想查看所有设置为开机启动的软件，可以打开「系统偏好设置 &gt;&gt; 用户与群组」，切换到「登录项」页面，就可以查看所有开机启动项。</p><p>点击下方的 + 或 - 按钮，可以添加或删除不必要的开机启动项。</p><p><img src="http://cdn.penghh.fun/mweb/16056624412092.jpg" alt="-w704"><br>此外，切换到「密码」页面，将鼠标移动到用户名左侧的头像上，会出现「编辑」的按钮，点击可以修改开机页面显示的用户头像。</p><p>这个用户头像与 Apple ID 的头像是不同的，修改这个头像并不会影响 Apple ID 的头像。</p><p><img src="http://cdn.penghh.fun/mweb/16056625701806.jpg" alt="-w704"></p><h2 id="改变状态栏图标的位置"><a href="#改变状态栏图标的位置" class="headerlink" title="改变状态栏图标的位置"></a>改变状态栏图标的位置</h2><p>改变状态栏图标的位置：按住 Command 键，使用鼠标拖动改变图标的位置</p><p><img src="http://cdn.penghh.fun/mweb/%E6%94%B9%E5%8F%98%E5%9B%BE%E6%A0%87%E7%9A%84%E4%BD%8D%E7%BD%AE.gif" alt="改变图标的位置"></p><h2 id="聚焦搜索"><a href="#聚焦搜索" class="headerlink" title="聚焦搜索"></a>聚焦搜索</h2><p>查看路径：在聚焦搜索返回的结果中，选择任意一项，按住 Commad 键，可以查看文件所在的文件夹或应用安装的路径</p><p>打开文件所在的位置：在搜索返回的结果中，按住 Command 键双击文件，可以打开文件所在的位置</p><h2 id="神奇的Option键"><a href="#神奇的Option键" class="headerlink" title="神奇的Option键"></a>神奇的Option键</h2><p>查看更多信息：按住 Option 键点击任务栏的图标，可以查看更多信息，例如点击 Wifi 图标，可以查看 Wifi 的更多信息，例如 IP 地址、BSSID 等信息。</p><p><img src="http://cdn.penghh.fun/mweb/16056212205170.jpg" alt="-w328"><br>点击音量图标，面板会增加「输入」的控制项，在连接蓝牙耳机的情况下，你可以将输入设备由电脑的「麦克风」切换为「蓝牙耳机」。  </p><p><img src="http://cdn.penghh.fun/mweb/16056213330569.jpg" alt="-w326"></p><p>关闭一个软件的多个窗口：按住 Option 键，点击窗口左上角的关闭按钮，可以同时关闭一个软件的多个窗口。  </p><p><img src="http://cdn.penghh.fun/mweb/%E5%90%8C%E6%97%B6%E5%85%B3%E9%97%AD%E4%B8%80%E4%B8%AA%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%A4%9A%E4%B8%AA%E7%AA%97%E5%8F%A3.gif" alt="同时关闭一个软件的多个窗口"></p><h2 id="触发角"><a href="#触发角" class="headerlink" title="触发角"></a>触发角</h2><p>触发角是 Mac 屏保附带的功能，通过为屏幕四个角落设置不同的触发操作，当你将鼠标移动到屏幕角落时，它会执行相应的命令，例如让电脑快速进入屏保程序。  </p><p>打开「系统偏好设置 &gt;&gt; 桌面与屏幕保护程序」，切换到「屏幕保护程序」页面，点击右下角的「触发角」。</p><p><img src="http://cdn.penghh.fun/mweb/16056598115539.jpg" alt="-w704"><br>打开的窗口会有四个下拉框，分别对应屏幕的四个角落，你可以从下拉框中选择不同的触发操作。</p><p>如下图，我将屏幕右上角的触发操作设置为「启动屏幕保护程序」，当我将鼠标移动到右上角时，电脑就会运行屏保程序。</p><p><img src="http://cdn.penghh.fun/mweb/16056603784633.jpg" alt="-w702"><br>如果你觉得单纯通过鼠标移动到屏幕角落触发命令容易导致<strong>误操作</strong>的话，可以在选择触发命令时，同时按住 Option 或 Command 键，为触发操作添加一个额外的按键，减少误操作的情况。</p><p>如下图，我在设置触发操作时按下了 Option，如此一来，当我将鼠标移动到屏幕右上角，且按下键盘的 Option 键时，电脑才会进入屏保程序。</p><p><img src="http://cdn.penghh.fun/mweb/16056605728240.jpg" alt="-w738"></p><h2 id="自带输入法输入不会读的字"><a href="#自带输入法输入不会读的字" class="headerlink" title="自带输入法输入不会读的字"></a>自带输入法输入不会读的字</h2><p>在 Windows 上，当你想输入你不知道拼音的「犇」字时，可在中文拼音的状态下，使用 u + niu + niu + niu 的拆字法，来达到间接输入「犇」的目的。</p><p>而在 macOS 上，你也可以使用类似的操作来输入「犇」字：先输入 niu + niu + niu，接着按 Shift + 空格键，自带的输入法就会弹出唯一的备选字「犇」。</p><p><img src="http://cdn.penghh.fun/mweb/16058002823333.jpg" alt="-w728"></p><p>如此一来，使用苹果自带的输入法输入一些可以拆解的字，是不是变得 So easy 了呢？</p><p>以上，就是本次想和你分享的 Mac 使用技巧，希望对你有帮助。关于 Mac 的更多使用技巧，过段时间再见。   </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>更新完 Big Sur 之后，我觉得电脑越来越像手机了</title>
    <link href="/2020/11/14/2020-11-14-bigsur/"/>
    <url>/2020/11/14/2020-11-14-bigsur/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本文首发地址：<a href="https://mp.weixin.qq.com/s/sZ6bWEy_7v-bBRJeSbvYtA">更新完Big Sur之后，我觉得电脑越来越像大号的手机了</a>   </p><p>盼星星盼月亮，macOS Big Sur 终于在昨天凌晨推送了正式版，之前看了一些文章，我也迫不及待想体验苹果为搭载自研芯片 M1 的 Mac 推出的新系统。</p><p>第一眼觉得它和 iOS 很像，程序坞、系统应用图标和应用窗口边缘，都变得圆滑了。</p><p><img src="http://cdn.penghh.fun/mweb/%E6%88%AA%E5%B1%8F2020-11-14%20%E4%B8%8A%E5%8D%8811.04.25.png" alt="截屏2020-11-14 上午11.04.25"></p><h2 id="系统兼容性"><a href="#系统兼容性" class="headerlink" title="系统兼容性"></a>系统兼容性</h2><p>更新系统之前，最好先打开「关于本机」，查看电脑的概览，了解电脑的生产年份。</p><p><img src="http://cdn.penghh.fun/mweb/16053212113212.jpg" alt="-w622"><br>如果你的电脑是以下或者更新的机型，就可以放心地更新。</p><p><img src="http://cdn.penghh.fun/mweb/16053166424868.jpg" alt="-w499"><br>更新系统之前，如果你的电脑有重要的文件，最好先进行备份，可以使用系统自带的「Time Machine」，将文件备份到外置的移动硬盘。</p><p>由于我的机器是比较新的，没有放什么重要的文件，因此在没有备份的情况下就进行更新了。（心真大，请勿模仿）</p><h2 id="菜单栏图标间距增大"><a href="#菜单栏图标间距增大" class="headerlink" title="菜单栏图标间距增大"></a>菜单栏图标间距增大</h2><p>菜单栏图标的间距变大了，看起来不会像之前那么有压迫感，但也带来了一个新的问题：间距越大，同样大小的区域可以容纳的图标数量就越少。</p><p>如果后台运行的程序比较多，就会让原本紧张的菜单栏「雪上加霜」。</p><p><img src="http://cdn.penghh.fun/mweb/%E7%8A%B6%E6%80%81%E6%A0%8F%E5%9B%BE%E6%A0%87.png" alt="状态栏图标"></p><p>对于不想显示在状态栏的系统图标，可以在「系统偏好设置」中搜索关键字「状态栏」，下方会返回相关的设置。</p><p><img src="http://cdn.penghh.fun/mweb/16053249243279.jpg" alt="-w1035"></p><h2 id="新增控制中心"><a href="#新增控制中心" class="headerlink" title="新增控制中心"></a>新增控制中心</h2><p>菜单栏新增了控制中心，点击 Siri 左侧的按钮，就可以打开控制中心的面板，第一眼也会觉得和 iOS 上的非常像。</p><p>在这里可以控制 Wifi、蓝牙、隔空投送、勿扰模式的开启与关闭，部分控制按钮与菜单栏已有的图标重复。</p><p><img src="http://cdn.penghh.fun/mweb/%E6%8E%A7%E5%88%B6%E4%B8%AD%E5%BF%8302.png" alt="控制中心02"></p><p>控制中心中常用的按钮，你可以长按拖拽到菜单栏上，将其添加到外部，缩短调节控制按钮的路径。</p><p><img src="http://cdn.penghh.fun/mweb/%E6%B7%BB%E5%8A%A0%E5%88%B0%E8%8F%9C%E5%8D%95%E6%A0%8F.gif" alt="添加到菜单栏"></p><h2 id="通知栏和小组件合并"><a href="#通知栏和小组件合并" class="headerlink" title="通知栏和小组件合并"></a>通知栏和小组件合并</h2><p>原先菜单栏角落的通知栏按钮取消了，你可以通过触控板左滑或者点击菜单栏的「日期和时间」呼出通知栏。</p><p>此外，通知栏下方增加了 iOS 14 上的小组件，默认打开的小组件有日期、天气、时钟、股市和屏幕使用时间。</p><p>由于 Mac 上没有自带的天气 App，当我点击天气小组件的时候，它会在浏览器中打开天气相关的网页，不像在 iOS 上会打开天气 App，这一点体验不是很好。</p><p><img src="http://cdn.penghh.fun/mweb/%E7%BB%84%E4%BB%B6.png" alt="组件"></p><p>点击底部的「编辑小组件」，可以打开小组件的编辑面板，左侧栏列出了支持添加小组件的应用，包括系统应用和第三方应用。</p><p>有些第三方应用跟进得比较快，例如微博第三方客户端 Maipo，在还没更新到 Big Sur 系统之前，它就提前对 Big Sur 进行了适配，等你更新到 Big Sur 之后，它就在小组件列表中等着你了。</p><p><img src="http://cdn.penghh.fun/mweb/16053284305517.jpg" alt="-w1418"></p><h2 id="照片编辑功能"><a href="#照片编辑功能" class="headerlink" title="照片编辑功能"></a>照片编辑功能</h2><p>Mac 自带的照片 App，提供了更强大的编辑功能，点击照片右上角的「编辑」按钮，进入照片编辑界面。</p><p>右侧提供了多个可供调整的参数，光效、颜色、黑白滤镜、白平衡、曲线等等，其中「润饰」可用来去除人像皮肤或脸部上的斑点，达到美化人像的目的。</p><p>如果你懒得动脑子调节这些参数，每个参数右侧都提供了「自动」的选项，勾选即可自动帮你修饰照片。如此一来，以后 Mac 上简单的修图工作，再也不用借助 PS 等第三方工具了。</p><p><img src="http://cdn.penghh.fun/mweb/16053349358164.jpg" alt="-w1350"></p><h2 id="基于墙纸调整窗口色调"><a href="#基于墙纸调整窗口色调" class="headerlink" title="基于墙纸调整窗口色调"></a>基于墙纸调整窗口色调</h2><p>这是「系统偏好设置 &gt;&gt; 通用」中新增的调节选项，勾选之后，你使用的壁纸，会影响到部分窗口的色调或者说观感。</p><p>举个例子，由于我使用的是 Big Sur 默认的流体渐变壁纸。</p><p><img src="http://cdn.penghh.fun/mweb/16053372943392.jpg" alt="-w1848"></p><p>当我勾选了这个选项，所使用的渐变壁纸就会让当前窗口看起来有点偏红。</p><p><img src="http://cdn.penghh.fun/mweb/16053366172501.jpg" alt="-w704"></p><p>作为对比，下图是取消勾选之后的状态，窗口的色调就会恢复为白色，我觉得还是正常的白色看着舒服一些。</p><p><img src="http://cdn.penghh.fun/mweb/16053374248208.jpg" alt="-w704"></p><h2 id="开机播放声音"><a href="#开机播放声音" class="headerlink" title="开机播放声音"></a>开机播放声音</h2><p>「启动时播放声音」是「系统偏好设置 &gt;&gt; 声音」新增的选项，开启之后，当你重启或开机时，伴随着咚的一声苹果 logo 出现了。</p><p>其实，在 2016 年初及更早的 Mac 机型在启动时都会发出声音。除 MacBook Air（13 英寸，2017 年）之外，2016 年末及之后生产的 Mac 机型都不会发出启动声，这个声音是四年后的首次回归。</p><p><img src="http://cdn.penghh.fun/mweb/16053376097016.jpg" alt="-w704"></p><h2 id="Safari-浏览器"><a href="#Safari-浏览器" class="headerlink" title="Safari 浏览器"></a>Safari 浏览器</h2><p>Safari 起始页右下角新增了一个选项，可设置起始页显示的内容，如个人收藏、经常访问的网站、通过 iCloud 同步的在 iPhone 上打开的网页，以及是否设置背景图像。</p><p>Safari 起始页默认的背景是灰色的，下图的熊猫是我从「背景图像」挑选的一张背景。</p><p><img src="http://cdn.penghh.fun/mweb/16053386529815.jpg" alt="-w1325"></p><p>除了我们肉眼容易观察到的变化，Safari 还在隐私保护方面做了改进，页面新增了「智能防跟踪」功能，阻止网站通过获取你的操作行为、个人信息数据，来向你推荐相关的广告。</p><p><img src="http://cdn.penghh.fun/mweb/16053390489050.jpg" alt="-w1325">  </p><h2 id="更新系统遇到的问题"><a href="#更新系统遇到的问题" class="headerlink" title="更新系统遇到的问题"></a>更新系统遇到的问题</h2><p>更新 Big Sur 系统有两种操作方式，一种是通过「系统偏好设置 &gt;&gt; 软件更新」，一种是在 App Store 搜索 Big Sur 并下载。</p><p>活久见，这是我第一次看到这么大的系统安装包——12.18 GB。</p><p><img src="http://cdn.penghh.fun/mweb/%E7%B3%BB%E7%BB%9F%E5%A4%A7%E5%B0%8F.png" alt="系统大小"></p><p>安装包下载好之后，它会出现在「启动台」中，点击即可运行。   </p><p>起初安装的时候，我遇到了一个问题，如下图所示，安装剩余时间停留在了 12 分钟的状态，过一会就提示无法验证 macOS，之后安装程序自动退出。</p><p><img src="http://cdn.penghh.fun/mweb/%E5%8D%A1%E5%9C%A812%E5%88%86%E9%92%9F.png" alt="卡在12分钟">   </p><p>起初我试过网友提供的解决方法：改 DNS 或者使用富强上网，但还是失败了。</p><p>后来选择重启电脑，也没有开启富强上网，反而顺利更新到了新的系统。</p><p>以上，就是本次我刚使用这个新系统发现的一些新特性，希望对你有帮助。<br>Have fun，Enjoy!   </p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>锁定微信防别人偷看，苹果电脑上的微信有何不同？</title>
    <link href="/2020/11/03/2020-11-3-post08/"/>
    <url>/2020/11/03/2020-11-3-post08/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>这是临时想到的一个题目，就想简单写一下苹果电脑的 Mac 版微信与 Windows 版本有何不同。    </p><h2 id="锁定微信"><a href="#锁定微信" class="headerlink" title="锁定微信"></a>锁定微信</h2><p>当你在电脑上登录微信后，移动端的微信首页顶部会显示「Windows/Mac 微信已登录」。</p><p>如果你是在 Mac 上登录微信，点击顶部的登录状态，相比在 Windows 上登录，菜单中会多出「<strong>锁定</strong>」的选项。</p><p><img src="http://cdn.penghh.fun/mweb/IMG_6997.jpeg" alt="IMG_6997"><br>点击锁定，Mac 上的微信会呈现下图的状态，当你离开座位且不锁定屏幕时，就可以很好地保护你的个人隐私。</p><p>这个功能还有个小细节：锁定和解锁 Mac 微信会有两个不同的<strong>音效</strong>，微信在声音设计上还下足了功夫。</p><p><img src="http://cdn.penghh.fun/mweb/16043344708914.jpg" alt="-w866"></p><h2 id="服务号消息收纳到订阅号中"><a href="#服务号消息收纳到订阅号中" class="headerlink" title="服务号消息收纳到订阅号中"></a>服务号消息收纳到订阅号中</h2><p>公众号主要分为两类，一类是订阅号，一类是服务号，这两类的区别在于，服务号给你发送推文或模板消息时，你会像收到微信好友消息一样收到通知，它推送的内容属于一种<strong>强通知</strong>。</p><p>而订阅号则位于「订阅号消息」或「公众号」中，所有订阅号推送的内容都被收纳到这个「盒子」里，相比服务号，它推送内容对用户的打扰更少。</p><p><img src="http://cdn.penghh.fun/mweb/16043612333771.jpg" alt="-w866"><br>在 Mac 微信上，每当收到新的微信消息时，桌面右上角都会弹出消息提醒，这个通知方式继承了微信移动端的设计。</p><p><img src="http://cdn.penghh.fun/mweb/16043622506897.jpg" alt="-w411"><br>可能是为了减少服务号这类强通知对用户的打扰，Mac 微信将服务号也收纳到了订阅号中，如此一来，当服务号给你推送内容时，它推送的内容就会出现在「公众号」这个盒子里，不会出现一个新消息的红点提醒。</p><p><img src="http://cdn.penghh.fun/mweb/%E5%BE%AE%E4%BF%A1%E6%9C%8D%E5%8A%A1%E5%8F%B7.png" alt="微信服务号"></p><h2 id="在微信中使用苹果自带的-Emoji"><a href="#在微信中使用苹果自带的-Emoji" class="headerlink" title="在微信中使用苹果自带的 Emoji"></a>在微信中使用苹果自带的 Emoji</h2><p>和 iPhone 一样，在 Mac 上同样可以使用苹果自带的 Emoji，快捷键为「Control + Command + 空格」。</p><p>你可以在任何可以输入内容的地方，使用快捷键调出 Emoji 面板，例如微信的聊天窗口、微信的搜索栏等等。</p><p><img src="http://cdn.penghh.fun/mweb/16043636759293.jpg" alt="-w382"></p><h2 id="管理微信聊天数据"><a href="#管理微信聊天数据" class="headerlink" title="管理微信聊天数据"></a>管理微信聊天数据</h2><p>在微信的设置中，Windows 和 Mac 微信都可以找到管理聊天数据的选项，区别在于：</p><p>Mac 上的管理界面更加<strong>人性化</strong>，继承了移动端的设计，它可以很清楚地让你看到过往聊天中产生的数据量，而不是像 Windows 客户端会打开存放聊天数据的源文件夹，让用户一脸懵逼、摸不着头脑。</p><p><img src="http://cdn.penghh.fun/mweb/16043641460853.jpg" alt="-w456"></p><h2 id="应用商店的微信-VS-官网下载的微信"><a href="#应用商店的微信-VS-官网下载的微信" class="headerlink" title="应用商店的微信 VS 官网下载的微信"></a>应用商店的微信 VS 官网下载的微信</h2><p>从 Mac 应用商店下载的微信，是一个阉割版的微信，它使用不了微信小程序，这是苹果而非微信的锅，微信为了上架应用商店不得不向苹果妥协。</p><p>如果你想在 Mac 上使用功能完整的微信，请前往微信官网下载。  </p><h2 id="状态栏的更多功能"><a href="#状态栏的更多功能" class="headerlink" title="状态栏的更多功能"></a>状态栏的更多功能</h2><p>Mac 上的每个软件，在屏幕左上角的状态栏都会有相应的菜单，微信也不例外，如下图的「文件」、「编辑」、「显示」和「窗口」。</p><p>以「窗口」菜单为例，里面就会有与 Mac 相关的操作或功能，例如：</p><ul><li>窗口操作「将窗口拼贴到屏幕左侧」</li><li>Mac 的随航功能，将微信窗口移动到 iPad 上</li></ul><p>但说实话，状态栏的微信菜单我并不常用，这里仅作提及，感兴趣的朋友可以去点开看看。</p><p><img src="http://cdn.penghh.fun/mweb/16043646540173.jpg" alt="-w491">    </p><p>以上，希望有帮助。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何对自己感到更满意一些？</title>
    <link href="/2020/10/31/2020-10-31-post07/"/>
    <url>/2020/10/31/2020-10-31-post07/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>多数人对自己的现状或多或少都有不满意的地方<br>不满意的原因不一而足</p><p>当你不满足于现状<br>你可能会试着去改变<br>尝试开始做一些不一样的事情</p><p>目前我觉得让自己对自己更满意一些的方法是：</p><ul><li>试着逼自己写点什么，不包括这一篇，这个月更新了 16 篇文章。写东西会让自己暂时充当一个生产者而非消费者的角色，会让自己觉得可能对这个世界产生了一点影响</li><li>尽可能每天能留出 7 分钟的运动时间，这个月我做了 26 次运动（包含周末的户外跑步）</li><li>在滴答清单中写简短的日记、摘抄语录、记下自己临时想到的东西。之前看过一句话，<strong>LIVE A LIFE YOU WILL REMEMBER</strong>（去过带给你回忆的生活）。如何让以后的自己不忘记某段回忆？一种比较好的方式是借助某种<strong>载体</strong>，它可以是文字，可以是音乐，可以是照片，可以是视频，可以是录音等等  </li></ul><p>当然，自己对自己满意的这种状态，它不会布满在过去或当下的每分每秒，有时还是会受到外部的影响：</p><ul><li>你妈和你说某某人的儿子月薪两万</li><li>你妈怨你当初为啥不去读研</li><li>在朋友圈看到别人的好消息</li></ul><p>破坏原先那种状态的根源在于——和别人比较，通过与别人的比较来确定自己的位置，这本质上还是学生时代分数思维的一种延续。（说到比较，父母有时候跟我说到别人家的孩子，本意可能是想借别人的例子来激励我奋起直追，但现实是我身边或者网络上并不缺少优秀的例子）</p><p>人生在世，你说做到完全不和别人比，基本上是不可能，但我们可以选择比较的对象。  </p><p>不少有智慧的人也曾告诉我们，「不要和别人比，只和昨天的自己比」，当你把比较的参照物从别人转移到自己身上，你会摆脱原先的竞争思维，专注于自己的优势，聚焦在自己能改变的事情上，而不是深深地陷入对自己的怀疑或自我否定之中。  </p><p>人生是一场长跑，每个人都有每个人的节奏，日拱一卒，道阻且长，行则将至。</p><h2 id="本月碎碎念"><a href="#本月碎碎念" class="headerlink" title="本月碎碎念"></a>本月碎碎念</h2><p>当我想回顾自己这个月做过什么<br>我会打开滴答清单<br>看一看我在过去的一个月写下的东西<br>其中少了几天的记录<br>可能那几天就是没有想写点什么的欲望</p><h3 id="本月阅读的书（包含未读完的书）："><a href="#本月阅读的书（包含未读完的书）：" class="headerlink" title="本月阅读的书（包含未读完的书）："></a>本月阅读的书（包含未读完的书）：</h3><ul><li>《夜晚的潜水艇》</li><li>《你当像鸟飞往你的山》</li><li>《最好的告别》</li></ul><h3 id="本月的碎片摘录"><a href="#本月的碎片摘录" class="headerlink" title="本月的碎片摘录"></a>本月的碎片摘录</h3><ul><li>凡他人承受的，有很大可能性会落在自己身上，这是一个非常沉痛的人生体会。——读库张立宪（江湖人称老六）</li><li>我做过的事，并不是每件都让我问心无愧，但要是再来一次，我肯定还会那么做的。——电影《遗愿清单》</li><li>人们看电影是为了时间：为了已经流逝、消耗，或者尚未拥有的时间。——安德烈·塔可夫斯基（来自豆瓣日历 2021 扉页）</li><li>我并不是在为自由而战，而是在用自己的存在证明自由并未消失。——Telegram 创始人 Pavel Durov</li><li>世界上最鼓舞人心的，莫过于看到一个都市忙于建设。我们受苦受难，乃是为了拯救未来。——《约翰·克里斯朵夫》</li><li>旅行是最劳顿，最麻烦，叫人本相毕露的时候。经过长期苦旅行而彼此不讨厌的人，才可以结交作朋友……结婚以后的蜜月旅行是次序颠倒的，应该先同旅行一个月，一个月舟车仆仆以后，双方还没有彼此看破，彼此厌恶，还没有吵嘴翻脸，还要维持原来的婚约，这种夫妇保证不会离婚。——钱钟书《围城》  </li><li>完美的相处关系是什么？窝在爱人怀里孤独。——英国心理学家唐纳德·温尼科特</li><li>小时候，我等待思想成熟，等待经验积累，等待抉择坚定，等待成为一个成年人的样子。那个人，或者那个化身，曾经有所归属。我属于那座山，是那座山塑造了我。只是随着年龄的增长，我开始思考，<strong>我的起点是否就是我的终点</strong>——一个人初具的雏形是否就是他唯一真实的样貌。——《你当像鸟飞往你的山》</li></ul><h3 id="后面可能会写的话题"><a href="#后面可能会写的话题" class="headerlink" title="后面可能会写的话题"></a>后面可能会写的话题</h3><ul><li>不要把人物化（来自于知乎的一个问题「你们怎样看待把朋友视为工具的这种人？」）</li><li>每个人的 KPI（爸妈的 KPI、自己的 KPI）</li><li>人生的种种遗憾（这是看到一篇文章后想到的）</li></ul><p>以上，祝秋安。    </p>]]></content>
    
    
    
    <tags>
      
      <tag>总结</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>盘点 Mac 上好用的七个软件</title>
    <link href="/2020/10/31/2020-10-28-post06/"/>
    <url>/2020/10/31/2020-10-28-post06/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>距离上一次写 Mac 上的软件，刚好过去两个月，错过的朋友可以戳这里：  </p><p><a href="https://mp.weixin.qq.com/s/tTRy9mw8ybFdQl6CZjO-Bg">Mac新手装机软件清单</a></p><p>这一次，我又带来了七款新的软件，每款软件的简介如下，其中既有免费也有付费的软件，下面会分明注明每一款软件的价格，方便有需要的朋友进行决策。  </p><p><img src="http://cdn.penghh.fun/mweb/16041106783088.jpg" alt="-w854"></p><h2 id="小历"><a href="#小历" class="headerlink" title="小历"></a>小历</h2><p>小历，是一款日历增强工具，点击状态栏的软件图标，它会以日历的形式呈现整个月份，且会在日期下方标注节日，如今天是「万圣节」，弥补了 Mac 原生日历的不足。</p><p>价格：买断制，18 元，可在 Mac App Store 下载。<br>软件开发者：钟颖，他还开发了一个更知名的应用「Pin」。</p><p><img src="http://cdn.penghh.fun/mweb/16041129297630.jpg" alt="-w330"></p><h2 id="Keka"><a href="#Keka" class="headerlink" title="Keka"></a>Keka</h2><p>Keka，是一个压缩软件，之所以在 Mac 上要安装压缩软件，有两个原因：  </p><ul><li>使用 Mac 自带压缩功能压缩得到的压缩包，在 Windows 上可能会出现乱码的问题</li><li>Mac 自带的「归档实用工具」不支持解压 rar 格式的压缩包</li></ul><p>价格：Keka 在 Mac App Store 下载需要付费，在官网下载则是免费的。<br>官网：<a href="https://www.keka.io/en/">https://www.keka.io/en/</a></p><p>附上使用 Keka 压缩文件的方法：右击文件，选择「服务 &gt;&gt; 使用 Keka 压缩」</p><p><img src="http://cdn.penghh.fun/mweb/16041133945379.jpg" alt="-w860"></p><h2 id="Day-One"><a href="#Day-One" class="headerlink" title="Day One"></a>Day One</h2><p>Day One，是一个设计简约的日记应用，它会在每条记录的左侧s突出显示日期，会自动记录你当前的位置、时间（具体到分钟）。</p><p>它还有一个「<strong>那年今日</strong>」的功能，和 QQ 空间的那年今日一样，当你使用 Day One 超过一年，它会在那年今日中显示去年的同一天你写下的东西，帮你唤起回忆。</p><p>价格：Day One 下载免费，采用按年订阅的模式，价格 250+（说实话比较贵），会员的功能有支持多台苹果设备同步、无限制添加照片和日记加密等。</p><p><img src="http://cdn.penghh.fun/mweb/16041140239019.jpg" alt="-w1051"></p><h2 id="Zoommy"><a href="#Zoommy" class="headerlink" title="Zoommy"></a>Zoommy</h2><p>Zoommy，是一个聚合了多个无版权图库的图片应用，这对经常要找图的人来说非常友好，当然也可以用作壁纸软件，支持 Windows、macOS、Linux 三个平台。</p><p>我在前几天的文章中介绍过这款软件，还没看过的朋友可以戳：<br><a href="https://mp.weixin.qq.com/s/l2bcxmO7igH4sZmGGFwQVg">史上第二全的壁纸下载攻略，以后别再找人要壁纸了。</a></p><p>价格：买断制，官网售价 4.99 刀，支付需要使用 Visa、万事达外币卡，图方便的话可以淘宝解决。</p><p>补充一下，Unsplash 图库不知从什么时候起，打开速度就变得非常缓慢，而在 Zoommy 中的访问速度还可以接受。</p><p><img src="http://cdn.penghh.fun/mweb/16041160240909.jpg" alt="-w1101"></p><h2 id="Downie-4"><a href="#Downie-4" class="headerlink" title="Downie 4"></a>Downie 4</h2><p>Downie 4，可能是 Mac 上最强悍的视频下载工具，支持下载 B 站、腾讯、优酷等视频网站的视频，将视频的链接拖拽或复制到软件中，即可开始下载。</p><p>价格：买断制，79 元，双 11 期间可能有优惠。</p><p><img src="http://cdn.penghh.fun/mweb/16041159502465.jpg" alt="-w1726"></p><h2 id="ScreeFlow"><a href="#ScreeFlow" class="headerlink" title="ScreeFlow"></a>ScreeFlow</h2><p>ScreenFlow，一款屏幕录制应用（录屏软件）。之前推荐过的截图软件 iShot 虽然也支持录屏，但它缺少了视频剪辑功能。</p><p>使用 ScreenFlow 则可以对录制的视频进行<strong>轻量剪辑</strong>，去除录制失败或多余的视频片段，录屏剪辑导出一条龙。</p><p>价格：买断制，848 元，可在 Mac App Store 下载。</p><p><img src="http://cdn.penghh.fun/mweb/16041164008851.jpg" alt="-w719"></p><h2 id="万兴优转"><a href="#万兴优转" class="headerlink" title="万兴优转"></a>万兴优转</h2><p>万兴优转，是一款多功能的音视频处理工具，支持 Windows 和 macOS 系统，可实现多种用途：</p><ul><li>转换音视频格式，包含视频转 Gif、视频提取音频等</li><li>视频编辑，包含添加滤镜、添加水印和更改视频尺寸等</li><li>压缩视频</li><li>屏幕录制</li></ul><p>价格：下载免费，部分功能需购买会员解锁权限。<br>官网：<a href="https://sourl.cn/92CHfT">https://sourl.cn/92CHfT</a></p><p><img src="http://cdn.penghh.fun/mweb/16041167654630.jpg" alt="-w1116"></p><p>以上，希望有帮助。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《如何让你爱的人爱上你》摘录</title>
    <link href="/2020/10/28/2020-10-28-post05/"/>
    <url>/2020/10/28/2020-10-28-post05/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>本书阅读于得到 App，是一本长期霸榜「得到」电子书榜单的书。即便是以聚集了爱学习的人著称的得到，对脱单、爱情这个话题还是免不了俗。</p><p>之前曾看到辉哥奇谭的主理人 @辉哥 说过一句话：</p><blockquote><p>全世界的人对两件事有天生的「耻感」，第一是金钱，第二是性。但人生的突破机会就在于直视这两点，哪怕你视之为「深渊」。  </p></blockquote><p>这里我还想补充一点，是关于「爱」的。人本生来孤独，走的时候也是孑然一身，为了让中间的过程更有意思一些，我们会渴望爱、渴望交流、渴望连接，这是一种再正常不过的诉求，但在今天，我们好像不敢直面这种内心诉求，不敢去勇敢追逐爱，甚至不知道怎么去爱。</p><h3 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h3><p>寻找另一半时关注的因素：</p><ul><li>相貌</li><li>财富</li><li>地位名望</li><li>知识与学问</li><li>社交风度或性格</li><li>人品</li></ul><p>对学识的追求是一生的事业，它可以为你带来持久而深刻的欢愉。</p><p>在今天这个世界，女人们倾向于爱上那些能够在专业方面帮助她们的男人。对于那些聪慧而进取的女人，你的学识就是春药。</p><p>为了提高你的市场价值，<strong>永不停止学习，永不放弃性格塑造与社交技巧，努力培养内在品质</strong>，并且持之以恒。它们像黄金子弹一样，能够射中意中人的芳心。</p><p>今天，女猎手想要的是心思细腻、可以与女人分享心情的男人。男猎手幻想的是超级女人，她可以带来绝佳的陪伴、绝佳的子女、绝佳的激情和绝佳的性高潮。</p><p>男性喜欢的话题：汽车、体育、事实、商务和政治<br>女性喜欢的话题：健康、艺术、个人成长以及谈心灵</p><p>女猎手们，你可以在男性话题中展露聪明才智，但不要比意中人更聪明。</p><p>男猎手们，要让你的言谈更具心理学意味。与意中人谈天时，要多谈论人、感受、哲学、基本原理和直觉。</p><p>男猎手，如果一个女人讲话时，你插嘴问出一个基本问题：“<strong>对于那件事，你感觉怎么样</strong>？”你就会脱颖而出，成为众多男人中的珍品，真的。基本上，对任何事情你都可以这么问。（这个技巧可以让女人将你视作真正心思细腻的男人）</p><p>恋情中，不要过早追问“感受”（献给女猎手）</p><h3 id="倾听"><a href="#倾听" class="headerlink" title="倾听"></a>倾听</h3><p>绅士们，当你的恋人看上去纠结、愤怒、心事重重或恼火的时候，献出那句神奇的妙语吧：“究竟发生了什么事，你能和我谈谈吗？”</p><p>如果女生一开始拒接了，你也要坚持。说：“来吧，我知道，如果你和我谈谈，心里会舒服一些。我真的很喜欢你把自己的感受拿出来和我一起分享。”</p><p>不用害怕，倾听女生分享感受时，你所需要做的只是闭嘴、倾听。</p><p>女猎手们，当你的意中人愤怒、不安或沮丧时，你需要学的妙语比男人需要学的还少。事实上，你什么都不必说，只需要闭嘴，像哥们一样尊重他的沉默。</p><p>男人通常不习惯与他人分享自己的感受，如果他选择不告诉你他的感受，请不要觉得伤心。在他看来，不拿自己的烦恼为你增加负担，就是在展示对你的敬意。</p><p>男猎手们，不要告诉她你们要干什么，而是要先征求她的意见。当意中人向你发问时，不要只从字面上理解，要读出字里行间的言外之意，领悟她的暗示。当她问“你想不想”时，意思可能是“她很想”。<br>（例如，你想吃饭，最好先询问女生，你想吃点什么吗？）</p><p>男人想得到信任，女人想得到关心。</p><p>接下来的一条建议听起来也许像反女权的疯话，但是我要悲伤地告诉你，这条技巧很管用：<strong>当男人帮你时，永远不要对他提建议——永远不要</strong>。即使他想用透明胶带粘好你漏水的龙头，而你知道有七种更好的办法，也要咬紧牙关别吭声。</p><p>男猎手们，当你见到意中人犯难时，请走过去问她是否需要帮忙。和你的哥们不同，她不会觉得你不信任她的能力，她会将你的主动帮忙理解为：你在乎她、对她的难题很上心。</p><p>在男性大脑中，自尊和性爱几乎是不可分割的大脑灰质。</p><p>男性最普遍的秘密性幻想是什么？幻想同时与两个女人上床，观赏两个女人交欢，观看其他情侣做爱，看女人自慰，服从女王颐指气使的性爱命令，统治女人（最为流行的六种隐秘的男性性幻想）……清单内的项目无穷无尽，内容也会越发异乎寻常、放荡不羁。</p><p>多数女人都很聪明，懂得在第一次见到恋人的阳具时要满脸震撼。</p><p>男人是视觉动物，也是听觉动物，男人也愿意千遍万遍地听到那些让自己兴奋的词汇。</p><p>在意中人耳中，巅峰的听觉性体验是在性爱过程中由你亲口说出他最爱的撩人词汇。</p><p>与男人相比，女人对伴侣的品质要求更高。</p><p>问问意中人，对她来说爱情意味着什么，弄明白你的意中人最喜欢怎样被爱。<br>在她回答的时候，你要仔细聆听那些撩人词汇。不要立即使用，而是要等到说出“我爱你”的那一刻，再用这些特定的词语编织出美丽的情话。</p><p>我们所有人其实都在不停地寻找应对孤独感或疏离感的方式，无论自己是否意识到这件事。</p><p>我们孤身一人，从母亲的子宫来到这个世界；我们活在世间，在一片以各自的思想和肉身为疆界的孤独中离群索居；撒手尘寰的时候，也是孑然一身，无人相伴。茫茫生死之间，如果两份孤独能够萍水相逢、两个凡尘俗子能够血脉相连，便能找到真正的幸福。但真爱是件奢侈品而非我们与生俱来的权利。正如追求其他奢侈品一样，我们必须尝试最有力的方法。</p>]]></content>
    
    
    
    <tags>
      
      <tag>阅读</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客图床配置之七牛云</title>
    <link href="/2020/10/25/2020-10-25-post04/"/>
    <url>/2020/10/25/2020-10-25-post04/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>之前我曾写过一篇 Mac 上的 Markdown 写作工具——MWeb 相关的文章 《<a href="https://mp.weixin.qq.com/s/itLe10q1x4B6CBvApRTcCQ">电脑写作利器 MWeb｜如何使用第三方预览样式？</a>》，主要是讲如何在 MWeb 中使用第三方预览样式，让文章的预览视图看起来更舒服。    </p><p>这一次我想写一下 MWeb 的图床配置问题，MWeb 内置了「<strong>发布服务</strong>」的功能，支持将本地编辑好的文章直接发布到 Wordpress、Medium、少数派等网站。</p><p>但要想让整个过程一气呵成的话，我们需要先解决图床配置的问题，这样你发布的文章中的图片才不会出现丢失或上传失败的问题。  </p><p><img src="http://cdn.penghh.fun/mweb/%E5%A4%9A%E4%B8%AA%E5%B9%B3%E5%8F%B0.png" alt="多个平台"></p><p>在解决这个问题之前，我们需要先了解什么是图床？  </p><h2 id="图床是什么？"><a href="#图床是什么？" class="headerlink" title="图床是什么？"></a>图床是什么？</h2><p>图床，可以理解为一个存放图片的网络空间或服务器，你发布到朋友圈的图片，别人之所以能看到，是因为你上传的图片放在了腾讯提供的网络空间上。</p><p>这个网络空间充当了桥梁的角色，对已成为微信好友的人或设置为最多可见 10 张图片的陌生人开放，这样别人就看到了你发布在朋友圈的图片。   </p><p>对应到写文章这件事，我们也需要将文章中用到的图片，上传到写作平台的图床（服务器），这样读者在读文章时才能顺利看到我们附上的图片。</p><p>但如果你和我一样，会<strong>将一篇文章发布到不同的平台</strong>，例如将首发在公众号的文章发布到知乎，你大概率会遇到一个蛋疼的问题——粘贴到知乎编辑器的文章会出现多个「<strong>图片上传失败</strong>」的提示。</p><p>之前为了解决这个问题，我的方法是：先将微信文章复制到简书，再从简书复制到知乎编辑器。这个方法几乎能完美解决图片上传失败，少数时候会遇到 Gif 上传失败的问题。</p><p>说句题外话，从上面这种解决方法推测，微信为了避免被别的写作平台当成图床（避免被薅羊毛），它<strong>禁用了图片的外链引用</strong>，当它识别到当前的环境不是在微信体系内，图片就会显示失败，这就导致了图片上传失败的问题。  </p><p>而现在，我有了一个更好的解决方法——<strong>将图片上传到自己的图床帐户中</strong>。这个方法可以省去上面「粘贴到简书」的中间步骤，简化整个流程，更重要的是，你可以更方便地将文章分发到多个平台，例如自己的个人博客或其他写作平台。   </p><h2 id="有哪些可用的图床？"><a href="#有哪些可用的图床？" class="headerlink" title="有哪些可用的图床？"></a>有哪些可用的图床？</h2><h3 id="免费图床"><a href="#免费图床" class="headerlink" title="免费图床"></a>免费图床</h3><p>网上有不少人整理了多个免费的图床，但目前我用过的免费图床只有两个：路过图床和微博图床。   </p><ul><li>路过图床  <a href="https://imgchr.com/">https://imgchr.com/</a><br>全球CDN加速, 支持外链, 原图保存, 最大单张支持10 MB   </li><li>新浪微博图床  <a href="https://www.crx4chrome.com/crx/17508/">https://www.crx4chrome.com/crx/17508/</a><br>为了让微博图床更易用，有人开发了一个浏览器插件「新浪微博图床」，支持选择/拖拽/粘贴上传图片，并生成图片地址、HTML、UBB 和 Markdown 等格式  </li></ul><p><img src="http://cdn.penghh.fun/mweb/%E5%BE%AE%E5%8D%9A%E5%9B%BE%E5%BA%8A%E6%8F%92%E4%BB%B6.png" alt="微博图床插件"><br>免费图床虽然可以不花钱，但我悲观地认为，大多免费且赚不了钱的服务终究走不了长远，也许未来的某一天，你就会突然收到「XX 关停」的通知。  </p><p>如果你想更妥善地保存自己的图片数据，最好还是选择大一点或者收费的图床工具。  </p><h3 id="收费图床"><a href="#收费图床" class="headerlink" title="收费图床"></a>收费图床</h3><ul><li>七牛云  <a href="https://www.qiniu.com/">https://www.qiniu.com/</a></li></ul><p>七牛云虽然是一个主打收费的服务，但它对所有注册的<strong>实名用户</strong>，还是免费提供了每月 10 GB 的存储空间、每月 10 GB 的 CDN 回源流量，具体可见下图。 </p><p>其实我对这些术语也不是很清楚，但这些免费额度，对于一个没什么访问量的博客来说，已经够用了。  </p><p><img src="http://cdn.penghh.fun/mweb/%E4%B8%83%E7%89%9B%E4%BA%91%E4%BB%B7%E6%A0%BC%E8%B4%B9%E7%94%A8.png" alt="七牛云价格费用"><br>了解更多关于七牛云计费方式的内容，可以参考官方的文档：<br><a href="https://www.qiniu.com/prices/kodo?source=kodo">https://www.qiniu.com/prices/kodo?source=kodo</a></p><p>首次使用七牛云，它会给每个人分配一个<strong>临时的测试域名</strong>，有效期为一个月，过期之后如果你还想使用七牛云作为图床的话，就需要自己去注册一个域名。  </p><h3 id="MWeb-七牛云图床配置"><a href="#MWeb-七牛云图床配置" class="headerlink" title="MWeb 七牛云图床配置"></a>MWeb 七牛云图床配置</h3><p>MWeb 本身支持的图床服务较多，例如七牛云、腾讯云和阿里云等，还支持自定义更多图床。</p><p><img src="http://cdn.penghh.fun/mweb/MWeb%E6%94%AF%E6%8C%81%E7%9A%84%E5%9B%BE%E5%BA%8A.png" alt="MWeb支持的图床"><br>配置之前，我们先在浏览器打开七牛云的「控制台」，切换到「对象存储」，新建一个公开的空间，这里我将空间名称命名为 blog-picbed20，空间名称自行定义，后面会用到。   </p><p><img src="http://cdn.penghh.fun/mweb/%E5%88%9B%E5%BB%BA%E7%A9%BA%E9%97%B4.png" alt="创建空间"></p><p>打开创建好的空间，需要添加「CDN 加速域名」，域名的格式为「cdn.+自己注册的域名」，接着需要配置右侧的「CNAME」，将鼠标移动到 CNAME 上方，它会给出配置 CNAME 的指导。</p><p><img src="http://cdn.penghh.fun/mweb/cname.png" alt="cname"></p><p>复制七牛云空间的 CNAME 值，接着打开你注册的域名的「DNS 解析页面」，因为我是在腾讯云注册的域名，这里打开的就是腾讯云的管理后台。 </p><p>在解析列表中新增一条记录，主机记录为 cdn，记录类型选择 CNAME，记录值位置粘贴刚从七牛云得到的 CNAME 值。   </p><p><img src="http://cdn.penghh.fun/mweb/%E5%A2%9E%E5%8A%A0%E8%A7%A3%E6%9E%90%E8%AE%B0%E5%BD%95.png" alt="增加解析记录"><br>完成这个步骤后，回到七牛云的控制台，刷新页面，直至 CDN 加速域名的状态显示为「成功」，则表示完成了七牛云的配置。   </p><p><img src="http://cdn.penghh.fun/mweb/%E6%88%90%E5%8A%9F.png" alt="成功"><br>回到 MWeb，打开「偏好设置」，切换到「发布服务」，添加「七牛云存储」，API 地址选择离你较近的地区即可。</p><p>空间名称：前面创建七牛云空间自定义的名称<br>域名：<a href="http://cdn.+自己注册的域名/">http://cdn.+自己注册的域名</a></p><p><img src="http://cdn.penghh.fun/mweb/MWeb%E9%85%8D%E7%BD%AE.png" alt="MWeb配置"><br>而其中的 Access Key 和 Secret Key 则需要再次回到七牛云的后台获取，点击右上角的帐户头像，在弹出的菜单中，选择「密钥管理」，创建一个新的密钥。 </p><p>下图的 AK 和 SK 分别对应 MWeb 里的 Access Key 和 Secret Key，分别粘贴到 MWeb 中相应的位置，就完成了 MWeb 中图片的配置。  </p><p><img src="http://cdn.penghh.fun/mweb/%E5%88%9B%E5%BB%BA%E5%AF%86%E9%92%A5.png" alt="创建密钥"><br>借助 MWeb 集成的将本地图片上传到图床的功能，当你将文章从 MWeb 发布或粘贴到其他平台之前，先选择顶部的菜单「发布–把本地图片传至图床」。 </p><p><img src="http://cdn.penghh.fun/mweb/15992331398624.jpg" alt="-w629"></p><p>在弹出的窗口中，选择「七牛云图床」，接着点击右下角的「上传本地图片」，MWeb 就会将本地的图片上传到七牛云图床，再自动返回图片上传到图床后的「<strong>远程地址</strong>」。    </p><p><img src="http://cdn.penghh.fun/mweb/%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87.png" alt="上传本地图片"></p><p>此时如果你想将文档发布到公众号或知乎，先点击「复制带样式的 HTML」，再切换到发布内容的平台，使用 Command + V 粘贴，文章和图片也会随之过去了，一气呵成，不会出现图片丢失的问题。            </p><p><img src="http://cdn.penghh.fun/mweb/15992333667413.jpg" alt="-w583"><br>第一次看完整个配置，你可能会觉得非常麻烦，但就像老话说的「万事开头难」，开头的坑趟过去了，后面等着你的可能就是一马平川的广阔天地。</p><p><strong>完成第一次稍微有些麻烦的配置，你就可以持续享受一次配置带来的多次收益</strong>，这某种程度上也可以算是一种「复利」行为，何乐而不为？  </p><p>以上，希望有帮助。 </p>]]></content>
    
    
    
    <tags>
      
      <tag>图床</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>做新媒体的几点体会</title>
    <link href="/2020/10/24/2020-10-24-post03/"/>
    <url>/2020/10/24/2020-10-24-post03/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>做新媒体起家的公司，前期可能会专门雇人写文章，到后期新媒体公司大概率会变为一家广告公司——不生产文章，只转载文章和广告文章（广告没啥错，错的是什么广告都接）。</p><p>你看见很多风马牛不相及的公众号，他们可能就是同一家公司的号。做多个新媒体账号，就像以前玩网游的时候，一个人同时注册多个账号，一方面是安全（不要把鸡蛋放在同个篮子里），一方面是可以多个号同时赚钱。</p><p>大号转载小号的文章，有些会抱着是看得起你的心态，作为小号的你不要不识抬举哈。大号会说，按行业惯例，你就必须给我开白名单且不显示转载来源（俗称双勾），不给我白嫖，你就是不对，不守行业惯例，完事了还要在朋友圈发一条动态来吐槽你，说你小号欺负人。</p><p>做新媒体的人都很小气，是的，都很小气（包括我）。看见别人写和自己一样的选题，就会本能地怀疑别人洗自己的稿，每个新媒体人或多或少都有「被洗稿妄想症」。</p><p>新媒体做久了真的很没意思，同行之间互相研究对方的选题，然后就仿写一篇类似的。</p><p>做新媒体真的没有多高大上，没必要抬高自己，也没必要贬低别的职业。有些人总看不起微商，说他们老是在朋友圈发广告，但其实新媒体人也好不到哪去，他们总在朋友圈转发自己写的文章。   </p><p><strong>不要羞于宣传自己</strong>。这和上一条看起来有点矛盾，但其实并不矛盾。原因在于：   </p><ul><li>宣传时你是否站在别人的角度，为别人带来了价值，而不是单纯的打扰</li><li>不少人可能碍于各种因素，羞于宣传自己，觉得不好意思，本质上还是你不够认可自己（或者说不够认可自己写的东西）。只有先认可自己的人，大概率才会得到别人的认可，就像爱情中的「爱人先爱己」</li><li>宣传自己或者说展示自己，也是一种很好的筛选方式，筛掉那些不喜欢你的人。人的时间有限，要把时间更多地花费在那些喜欢你或认可你的人身上</li></ul><p>千万不要随便惹做新媒体的，因为他们动不动就会威胁你说，「回头我在公众号说一下这事」、「回头我在公众号挂一下你」。</p><p>不要迷信大 V，不要迷信大 V，不要迷信大 V。大 V 真的不是神，在网上看不见摸不着，在网上有时只要让人觉得你很强，你也能成为一些人眼中的大 V。  </p><h3 id="为什么要写作？"><a href="#为什么要写作？" class="headerlink" title="为什么要写作？"></a>为什么要写作？</h3><p>写作是一种具有长尾效应的行为，在一个开放的网络环境中，你现在写的内容，特指有价值的内容，而不是煽动情绪的爽文，可能会帮到以后遇到同样问题的人。</p><p>写作是一种高质量的社交活动，同频相吸，它会让你和志同道合的人相遇。</p><p>写作可能是一种让你获得自由的方式，自由包含精神自由和财务自由。这里我还没有什么经验可谈，只是看了一些做自媒体的博主的案例，但经过今晚的饭局，我再次确认了，<strong>单纯的工资收入并不能使人致富</strong>。   </p><p>写作也是一种和自己对话的方式，当你把心中想说的东西写下来的时候，它会让你的内心更轻盈，排出心中积压已久的某种东西，为填入新的东西预留空间。 </p><p>写作是一种预防遗忘的手段，之前看过电影《寻梦环游记》，对其中的一句台词印象深刻：</p><blockquote><p>真正的死亡是世界上再没有一个人记得你。死亡不是真的逝去，遗忘才是永恒的消亡。</p></blockquote><p>年龄越大，记忆力越差，现在随手写下的东西，暮年闲来无事可以拿出来翻翻看。  </p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>本文大部分内容是之前已经写好的，这次增添了少量的内容。</p><p>今天之所以会发这个，除了吃晚饭时和朋友聊的内容，还有另外一个原因：</p><p>早上看到了一位关注已久的博主 @路人甲 发布的文章，如果你是一个知乎重度用户，可能对这个 ID 也不陌生。我最开始关注他，是看到他在知乎疯狂输出了很多 Python 相关的内容，觉得他是一位大神级别的人物，即便看不懂他写的代码，也值得关注看看。</p><p>后来他从知乎转战微信公众号，也做得挺好的，没记错的话还受到了一个大号「小道消息」的推荐，期间还孵化了一些新的账号。  </p><p>今天看到他说从待了三年的公司辞职了，准备创业自己带团队，做出这个决定也是深思熟虑之后的结果。</p><p>说实话，有时看到别人辞职单干或者成为一个自由职业者，我的首要感受还是挺羡慕的，羡慕他们十足的底气，也觉得很潇洒。</p><p>过后呢，羡慕就会转换为佩服，因为在我看来，创业或者成为自由职业者，需要有极大的热情和驱动力，一个人有时要像一支队伍，看似自由，实则需要极大的自律。  </p><p>简言之，<strong>人总会从一条河流踏进另外一条河流</strong>，换成不文艺的说法就是，人总会从一个坑跳到另外一个坑。  </p><p>既然还是跳到另外一个坑，那为啥还要做自媒体（写作）呢？   </p><p>可能只是多一种选择，可能只是在辞职的时候，更有底气地说出那句，fucxing your money!</p>]]></content>
    
    
    
    <tags>
      
      <tag>新媒体</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《夜晚的潜水艇》摘录</title>
    <link href="/2020/10/23/2020-10-23-post02/"/>
    <url>/2020/10/23/2020-10-23-post02/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>《夜晚的潜水艇》作者陈春成，1990 年出生，现居福建泉州，本书是他出版的处女作。在而立之年出版了自己的第一本小说，这让我联想到了村上春树，村上 29 岁开始写小说，次年将作品《且听风吟》投稿到文学杂志《群像》，结果一举赢得 1979 年的群像新人奖。</p><p><img src="http://cdn.penghh.fun/mweb/s33718940.jpg" alt="书籍封面来自豆瓣"></p><p>这本书是池建强老师推荐之后才买的，他写的推荐语是：</p><blockquote><p>文字洗练、丰盈、精准，像白描一般的故事情节，虚实交错，读起来让人着迷沉浸。文字如流苏，情节浑然天成，读来不知真假。<br>他的文章让我想起李海鹏、阿城的文字。这是一本处处闪烁光芒的天才之作，期待他能持续写下去。写作是个老天爷赏饭的技能，这种文字，理应让更多人知道。</p></blockquote><h1 id="我的体会"><a href="#我的体会" class="headerlink" title="我的体会"></a>我的体会</h1><p>在读这本书的过程中，我看到了一些形容非常贴切的比喻、作者丰沛的想象力，可以看出不少句子可能是经过多次的字斟句酌之后，才能有那般的准确。</p><p>以前读书时，于我而言，读散文体裁的文章一度让我非常痛苦，因为我觉得它很难理解，作者想表达的东西难以把握。</p><h1 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h1><p>老家被拆，手中剩下的老家钥匙，就是我与老家的最后一丝联系，它像风筝的线头，该如何处置这个「遗物」呢？</p><p>——不能放在身边。放在身边，久了，它就成了日常之物，日常的空气会消解它身上的魔力，直到对我失去慰藉作用。</p><p>作者选择藏起来，「藏东西，是我惯用的一种自我疗法」。</p><p>确定无疑的事情有这么一两桩，也就足以抵御世间的种种无常了。</p><p>长年累月 VS 年深日久</p><p>e.g. 文笔往往不错，那是一种年深日久的自我修养。</p><p>文笔 VS 笔力</p><p>但这些仍不能让我满意，笔力得不到充分的驰骋。</p><p>“可以惊四座，不可适独坐”，不能取悦自己的文章，再怎么让世人惊佩也没多大意思。</p><p><strong>我意识到表达的畅快来自于阻碍和阻碍的消除，而当我的笔无往不利，思路开阔无碍，那种畅快也就不复存在，一切只是熟极而流的操作</strong>。我不得不制定更难的写作计划。</p><p>我试图立足于有限的时间里，来用文字笼络住无穷的空间。</p><p>我做了一场梦，在梦中遇到了一个素不相识的老人，老人没来由地问了我一个问题：</p><blockquote><p>如果你可以写出伟大的作品，但只有你自己能领受，无论你生前或死后，都不会有人知道你的伟大——你愿意过这样的一生吗？</p></blockquote><p>自从那场梦后，我不再有作品示人（得到的传彩笔写出来的文章只有自己能看到），相识的编辑都以为我放弃写作了，这也正常不过，<strong>中年后放弃写作的大有人在</strong>。</p><p>古往今来每个春天豪掷的所有花瓣</p><p>写文章仿佛是医生在抓药那般：</p><blockquote><p>起初，我的脑子像一面巨大的中药柜，词汇分门别类地躺在无数抽屉里，我清楚它们的位置，熟练地抓取需要的文字，配成需要的句子。</p></blockquote><p>在写作的世界里，作者就是造物主：</p><blockquote><p>我熔铸月光，裁剪浮云，掣长鲸于碧海，我统治天上的星星……</p></blockquote><p>写作诚然能带来最澎湃的快乐，但他人的认同能让这份快乐变得确切，从滔天的浪涛变成可以珍藏的珠玉……我渴望听到别人的评价，来将这狂喜落到实处。</p><p>年轻时有许多次类似的经验：自以为写出了杰作而狂喜，隔了些时候再看，不过敝帚自珍罢了，一场蜃楼。</p><p>我穿进了别人的梦里，挨个问当初那老人问过我的问题，他们表示不愿意，将我请出或轰出了他们的梦。毕竟人在梦中没法说谎和逞强。</p><p>（我在梦中把传彩笔给了新的主人，第二天醒来）我试图回忆那些诗句，脑中空空荡荡，像从群仙的会饮中骤然离席，再也想不起琼浆的滋味和霓裳的色彩。</p><p>我领受过伟大作品的伟大，便无法再满足于这种残次品。饕餮过诸神的盛宴，从此人间脍炙都索然无味。</p><h2 id="酿酒师"><a href="#酿酒师" class="headerlink" title="酿酒师"></a>酿酒师</h2><p>喝过一口酒，好像有月光在经脉中流淌，春风吹进了骨髓。</p><p>历历在目 VS 朗然在目</p><p>e.g. 我试着回想过往人生中的一些细节，无不朗然在目。</p><h2 id="李茵的湖"><a href="#李茵的湖" class="headerlink" title="李茵的湖"></a>李茵的湖</h2><p>人生中一个微不足道、但挥之不去的谜团，轻烟一样，弥漫在生活的背面。<br>（生活的正面是什么呢？）</p><p>一生的顺遂和坎坷</p><p>李茵原名叫李迎男，成年后她自己去改了名字。迎男和招娣，有同一个酸楚的含义。</p><p>（野营的）锅里映着明亮的天，天上亮着橘红色的晚霞。</p><p>一段记忆，共同经历的人早都随手抛下，她却当珍宝一样收藏至今。</p><p>并非宇宙间有什么隐秘的牵连，是人的记忆常把不想干的事物无端地牵扯到一起。</p><h2 id="尺波"><a href="#尺波" class="headerlink" title="尺波"></a>尺波</h2><p>尺波是一本刊物的名称，也是一把剑的名字。</p><p> 这时天已变黑 VS 这时天已擦黑</p><p>也许唯一能将梦中之物带回现实的方法，是让它成为自己的一部分。</p><p>古代诗人吟唱过，大地是华美的毯子，神和历代国王在这一面用金线编织就了花纹；另一面却有另外的图案，人只能在梦中窥见。大地是广阔的书页，神和历代英雄在这一面写下史诗；另一面有另外的诗行，人只能在梦中听闻……大地的另一面是梦中的世界；我们则在那个世界的梦中。</p><h2 id="音乐家"><a href="#音乐家" class="headerlink" title="音乐家"></a>音乐家</h2><p>云气腾腾<br>潇潇而下<br>绵绵不绝<br>行人寥落</p><p>临街的窗口这时半数还亮着，概无例外地拉着窗帘，每一团暧昧的灯光都像在密谋着什么。</p><h2 id="音乐家-1"><a href="#音乐家-1" class="headerlink" title="音乐家"></a>音乐家</h2><p>这种散播资产阶级颓废情调的乐器（指萨克斯）在列宁格勒久已绝迹，因此引起了警局的重视。</p><p>深夜的敲门声让整栋楼的寂静绑得更紧了一些。</p><p>（手表）<strong>细小的齿轮像星体一样完美地运转着，将时间研磨成均等的颗粒</strong>。晶体般洁净的滴答声凭空堆积着，闪烁着无与伦比的秩序美。他喜欢这种透明、安全的声音，喜欢看着自己修好的各式各样的钟表摆满一桌面，然后在满屋子繁密的滴答声中进入无梦的睡眠。</p><p>那一段随口吹出的旋律，像一小汪春水，在他心底摇漾着；捧不住，也截不断。一些旧事像杯底的沉渣，因那旋律的翻搅而浮动起来。</p><p>他开了灯。他<strong>听见灯光在电线中涓涓流过，然后从灯盏中溢出</strong>，照亮那些细小的零件和他的白发。（运用通感的修辞手法）</p><p>他似乎能沿着曲谱追溯到作曲者创作时的心中所想，乃至潜意识里掠过的景象，就像品酒师一沾杯沿，就能说出葡萄生长时的阳光雨露；或者如古生物学家，从一小截指爪化石中还原出巨兽的身影。</p><p>年复一年，他一张接一张地读谱，每一张薄薄的乐谱上都升腾起一座庞大而沉重的蜃楼。</p><p>（两位老友经历过战争，饥荒，清洗，动荡）……而他们此刻竟完好无损地坐在一起，谈论着圣境般的故乡——只不过他们都被岁月磨蚀得不成样子了。</p><p>椋[liáng]鸟的传说：椋鸟终其一生没旁的事，一直在找寻自己的<strong>灰烬之歌</strong>。上帝每造出一只椋鸟，就造出一段旋律，和它灵魂的形状完全一致，藏在世间某处，让这鸟去寻找。也许在泉流中，也许在树梢的摇荡中，也许正盘旋在某个人的脑子里。椋鸟终日乱叫，探索着新的调子，也学它听来的任何声音，就是为找它的旋律。一旦被它偶然唱出，椋鸟的形体就会立时化作灰烬，而它的灵魂就钻进那旋律里，再也不出来了……这只椋鸟没有死，它只是进入了音乐的世界了，那是比尘世更接近上帝的地方……</p><p>我摸索了一辈子似乎就为了写出它——就像椋鸟找到了它的灰烬之歌。<strong>它不是伟大的，却是独一无二的，是和我灵魂形状最契合的容器了</strong>。只要听它被演奏上一次，我就再也不奢求什么了。</p><p>白天时迥然有别的万物，此刻都被黑暗熔铸成同一件事物了，巨大而阴森，消泯了各自的边界。</p><p>（他进入审查办公室后，）他每天在那些蹩脚作品中周旋，忍受着它们带来的乏味而合规的幻象，还得硬着头皮让它们过审，去蹂躏更多的耳朵，他想听到自己作品上演的渴望越发炽热。    </p>]]></content>
    
    
    
    <tags>
      
      <tag>文学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我终于拥有自己的独立博客了</title>
    <link href="/2020/10/21/2020-10-21-post01/"/>
    <url>/2020/10/21/2020-10-21-post01/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>这是我使用 Hexo 发布的第一篇博客。   </p><p>对于不懂技术的我来说，搭建这个博客一波三折，幸好中间有一位热心网友 @无声 的相助，这个博客才得以搭建起来。   </p><p>看着一个博客从 0 到顺利诞生，那种感觉可能就像是</p><ul><li>产品经理看着自己做的第一个产品顺利上线</li><li>准备要当妈妈的女人听到孩子第一声啼哭的那个瞬间     </li></ul><p>那种感觉不言而喻，虽累但成就感满满，一切值得。     </p><p>我之前曾写过两篇技术小白搭建博客的文章：   </p><p><a href="https://mp.weixin.qq.com/s/cRqTBEfHTmt0TvxCP7PjjA">可能是最最最最简单的搭建博客方法</a><br><a href="https://mp.weixin.qq.com/s/6Dp26H4YCXK5yNr3EvO90g">不会代码，如何零成本搭建个人博客？</a>    </p><p>这两篇文章都用到了同一个网站 GitHub，这个网站是世界上最大的代码托管平台，可用来托管代码，也可以用来存放文章数据，作为托管博客的站点，省去购买域名和租用服务器的钱。   </p><p>但使用这个方法存在一个弊端：访问时打开的速度很慢，需要使用网络代理，才能以正常的速度打开网站。   </p><p>此外，在没有购买域名和租用服务器的情况下，搭建的博客网址通常是「GitHub用户名.github.io」，github.io 后缀的网站以前虽然打开的速度慢，但至少还能访问。   </p><p>但在不久前，我想起自己许久没更新的博客，想打开看一下，发现 github.io 后缀的网站也打不开了。显而易见的是，它也被加入了大陆屏蔽的列表。   </p><p>正是这个问题，促使我萌生了再次搭建新博客的念头，我想搭建一个存在时间尽可能长、且能在国内正常访问的博客。    </p><h2 id="搭建博客的流程"><a href="#搭建博客的流程" class="headerlink" title="搭建博客的流程"></a>搭建博客的流程</h2><h3 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h3><p>域名可以理解为我们平常所说的网址，例如 baidu.com，我购买的域名是 penghh.fun。</p><p>这个域名是从腾讯云购买的，网站会提供各式各样的域名后缀，如.com、.net、.cn 等，在顶部的搜索框输入你想注册的域名，下面会返回加上不同后缀的域名及价格。   </p><p><img src="http://cdn.penghh.fun/mweb/16031995888236.jpg">  </p><p>域名是按年收费的，可只买一年，也可一次性买好几年，一次性购买多年的价格会划算一些。  </p><p>如果你像我一样，不确定一年之后是否有精力维护博客，那最好就只买域名的 1 年使用期。   </p><p>购买域名时的注意点：<strong>不要购买域名后缀为中文的域名</strong>。   </p><h3 id="租用一台服务器"><a href="#租用一台服务器" class="headerlink" title="租用一台服务器"></a>租用一台服务器</h3><p>在进行下一步域名备案之前，我们需要先租用一台服务器。</p><p>服务器可以理解为一台 24 小时不关机的电脑，如果你将博客的数据存放在上面，它就能随时随地被访问，无需担心电脑是否处于开机状态，且服务器能同时接收多个客户端的请求，因此它可以实现多人同时访问一个网站。    </p><p>下图是我租用的服务器配置，应该是最便宜的服务器，一年的费用为 99 元。   </p><p><img src="http://cdn.penghh.fun/mweb/WechatIMG196.png" alt="WechatIMG196"></p><p>腾讯云服务器：<br><a href="https://cloud.tencent.com/act/double11/go">https://cloud.tencent.com/act/double11/go</a></p><h3 id="域名备案"><a href="#域名备案" class="headerlink" title="域名备案"></a>域名备案</h3><p>如果你的网站想在国内正常访问，需要向互联网管理局提交备案，获得<strong>备案号</strong>后才能正常访问。  </p><p><img src="http://cdn.penghh.fun/mweb/16032063895650.jpg"></p><p>我是通过腾讯云提交备案的，在手机上通过小程序「腾讯云网站备案」提交网站名称和网站的备注信息等，网站名称存在着很多隐藏的限制，例如不能出现「分享」、「工具」等涉及诱导分享或商业性质的字样，我因为网站名称命中敏感词、描述不清而被驳回了三次。   </p><p>网站名称最后还是腾讯的客服根据备注信息帮我起的——「个人电子产品使用心得」，与我最开始想设置的「效率工具指南」相去甚远。   </p><p>此外，备案时还需要提交一个紧急联系人电话，可以将其设置为你的对象、家人或朋友，后续腾讯云客服在审核的过程中也会联系你留的紧急联系人电话，因此最好事先与紧急联系人打个招呼。    </p><p>提交的备案信息通过腾讯云审核后，客服会将你的信息提交到管局，正常情况下 10 个工作日之后就能收到审核的结果，顺利的话就能拿到网站的备案号。  </p><p>备案要点：耐心！耐心！耐心！尤其是在我们这个国家。   </p><h3 id="配置域名解析"><a href="#配置域名解析" class="headerlink" title="配置域名解析"></a>配置域名解析</h3><p>之前我对域名的理解是，只要在浏览器地址栏中输入域名 penghh.fun，就能打开我的博客，但后来发现输入 <a href="http://www.penghh.fun/">www.penghh.fun</a> 和 penghh.fun 是不一样的，在未正确配置域名解析的情况下，penghh.fun 打开失败，而 <a href="http://www.penghh.fun/">www.penghh.fun</a> 则打开正常。   </p><p><img src="http://cdn.penghh.fun/mweb/16032386324163.jpg"></p><p>咨询了网友 @无声 后，找到了解决方法，需要在服务器的 DNS 解析页面新增一条值为 @ 的主机记录，这里的 @ 代表直接解析域名 penghh.fun，将其指向与 <a href="http://www.penghh.fun/">www.penghh.fun</a> 相同的 IP。   </p><p><img src="http://cdn.penghh.fun/mweb/16032389387266.jpg"></p><p>完成配置后，之后无论是否输入带有 www. 的网址，都可以正常访问网站，打开同一个页面。     </p><p><img src="http://cdn.penghh.fun/mweb/16032393923196.jpg"></p><h3 id="安装-Hexo-框架"><a href="#安装-Hexo-框架" class="headerlink" title="安装 Hexo 框架"></a>安装 Hexo 框架</h3><p>搭建博客有两个比较多人用的<strong>框架</strong>：Hexo 和 Hugo，我选择的是 Hexo。</p><p>关于 Hexo，引用 IIssNan 介绍 Hexo 时说的一段话：   </p><blockquote><p>Hexo 是高效的静态站点生成框架，它基于 Node.js。通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 标签插件 来快速的插入特定形式的内容。  </p></blockquote><p>安装 Hexo 框架之前，需要先安装其他环境或软件：</p><ul><li>Git</li><li>Node.js</li></ul><p>Git，是一个版本控制软件，后面在将博客 push 到 GitHub 仓库时会用到。   </p><p>Node.js 目前已集成到包管理工具 npm 中，因此只要你安装了 npm，就会附带安装 Node.js。   </p><p>关于如何在本地安装 Hexo 框架，可以参考 B 站 Up 主 @CodeSheep 的视频教程，视频讲解得非常详细，说是一个保姆级教程也不为过。  </p><p>教程地址：<a href="https://www.bilibili.com/video/BV1Yb411a7ty">手把手教你从0开始搭建自己的个人博客 |无坑版视频教程| hexo</a>    </p><h3 id="配置服务器"><a href="#配置服务器" class="headerlink" title="配置服务器"></a>配置服务器</h3><p>在搭建博客的整个流程中，我觉得配置服务器对我来说是最难的，一方面是配置时需要在服务器和本地之间分别进行操作，你需要分清某个命令是要在服务上还是在本地上操作，但这东西一来二去就把我搞晕了，另一方面，配置服务器时全程用的是黑黢黢的<strong>命令行窗口</strong>，而不是我们常用的图形化界面。   </p><p>为了弄清在服务器上输入的某行命令产生了什么效果，例如是否在正确的路径下创建了文件夹，我们需要使用一些远程连接软件，将本地的电脑与服务器连接起来，通过软件查看服务器端生成的文件。    </p><p>Mac 电脑：远程连接软件推荐使用 Royal TSX<br>Windows 电脑：远程连接软件推荐使用 Xshell   </p><p>关于 Royal TSX 的用法，可以查看 B 站 Up 主 @老郭种树 的视频：<br><a href="https://www.bilibili.com/video/av70623689">怎样在Mac上SSH和FTP？完美替代XShell是哪个软件？item2吗？Royal TSX! 没有比它更好</a></p><p>不一边输命令，一边查看生成的文件，我觉得心里特没底，特别没有安全感。  </p><p>最终，服务器的配置还是网友 @无声 帮我弄好的，因此我少了这一步的实践，想了解的朋友，可以查看 @千古壹号 写的一篇搭建博客的文章：   </p><p><a href="https://www.qianguyihao.com/2020-09-19-hexo-aliyun-blog/#1%E3%80%81%E5%AE%89%E8%A3%85-git-%E7%8E%AF%E5%A2%83">hexo+阿里云搭建博客网站</a></p><h3 id="部署到-GitHub"><a href="#部署到-GitHub" class="headerlink" title="部署到 GitHub"></a>部署到 GitHub</h3><p>我的博客不是直接从本地部署到服务器的，它相比前者中间多了一步：部署到 GitHub。后面再通过 GitHub 的 Actions 命令自动部署到服务器。   </p><p>之所以要加多这一步（指部署到 GitHub），我的理解是，将 GitHub 作为一个备份的方案，它可能可以解决的问题有：  </p><ul><li>本地的博客文章数据丢失了  </li><li>换了新的电脑  </li><li>服务器欠费未缴清   </li></ul><p>对于前两个问题，只需要通过 git pull 或 git clone 命令，就能将之前提交到 GitHub 的博客文章恢复到本地，无需担心数据丢失或迁移带来的麻烦。  </p><p>第三个问题，由于 GitHub 是免费的，即便后面你不想租服务器了，将博客文章暂存到 GitHub 上，其实也是可以正常浏览的哈哈哈哈。    </p><h3 id="使用-GitHub-Actions-实现博客自动部署到服务器"><a href="#使用-GitHub-Actions-实现博客自动部署到服务器" class="headerlink" title="使用 GitHub Actions 实现博客自动部署到服务器"></a>使用 GitHub Actions 实现博客自动部署到服务器</h3><p>GitHub Actions 是 GitHub 提供的一个<strong>自动化工作流</strong>，它有点类似于 iPhone 上的「快捷指令」。   </p><p>在 GitHub 仓库根目录中创建一个工作流文件，即将博客自动化部署到服务器的配置文件，之后你每次将本地的博客提交到 GitHub，就会自动触发 GitHub Actions 执行，稍等一小会，它就会将所有更改同步到远端的服务器。  </p><p>这时，刷新一下之前停留的博客页面，就可以看到刚刚更新的博客文章了。   </p><p>能让程序自动化的，千万不要手动操作，正如 Perl 编程语言的作者 Larry Wall 所说的：   </p><blockquote><p>程序员的三大美德：懒惰，急切，傲慢。  </p></blockquote><p>懒才是第一生产力。        </p><h2 id="可能会用到的命令行"><a href="#可能会用到的命令行" class="headerlink" title="可能会用到的命令行"></a>可能会用到的命令行</h2><h3 id="查看-Git-Node-js-的版本号"><a href="#查看-Git-Node-js-的版本号" class="headerlink" title="查看 Git/Node.js 的版本号"></a>查看 Git/Node.js 的版本号</h3><p>git –version（也可以简写成 git –v）<br>node –version（同理可以简写成 node –v）</p><h3 id="路径操作"><a href="#路径操作" class="headerlink" title="路径操作"></a>路径操作</h3><p>进入 blog 文件夹：cd blog<br>进入 blog 文件夹下的子文件夹 posts：cd blog/posts<br>返回根目录：cd<br>返回上一级目录：cd ..</p><h3 id="显示当前路径"><a href="#显示当前路径" class="headerlink" title="显示当前路径"></a>显示当前路径</h3><p>pwd</p><h3 id="在当前路径下创建一个新的文件夹"><a href="#在当前路径下创建一个新的文件夹" class="headerlink" title="在当前路径下创建一个新的文件夹"></a>在当前路径下创建一个新的文件夹</h3><p>mkdir+空格+文件夹名称</p><h3 id="查看当前路径下所有文件的管控状态"><a href="#查看当前路径下所有文件的管控状态" class="headerlink" title="查看当前路径下所有文件的管控状态"></a>查看当前路径下所有文件的管控状态</h3><p>ls -l<br>*注：上面的两个字母是 L 的小写</p><h3 id="获取-Git-的-ssh-公钥"><a href="#获取-Git-的-ssh-公钥" class="headerlink" title="获取 Git 的 ssh 公钥"></a>获取 Git 的 ssh 公钥</h3><p>cat ~/.ssh/id_rsa.pub  </p><h3 id="博客-push-到-GitHub"><a href="#博客-push-到-GitHub" class="headerlink" title="博客 push 到 GitHub"></a>博客 push 到 GitHub</h3><p>git add .<br>git commit -m”附带的信息，例如在某个时间点编辑了博客”<br>git push</p><h3 id="Vim-编辑器模式下的操作-amp-命令行"><a href="#Vim-编辑器模式下的操作-amp-命令行" class="headerlink" title="Vim 编辑器模式下的操作 &amp; 命令行"></a>Vim 编辑器模式下的操作 &amp; 命令行</h3><p>快捷键 i：i 是 insert 的缩写，表示插入<br>:q——退出<br>:wq——保存并退出   </p><p>命令行虽然可能不像我们现在用的<strong>图形化界面</strong>那么直观，不那么易于理解，但通过输入短短的几行英文，就能实现某个看起来有些复杂的操作，那个感觉有时真的妙不可言，给人一种「我是上帝，正在造物」的错觉。   </p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>搭建这个新的博客，最要感谢的还是我在即刻偶然认识的一位网友 @无声，他很耐心地帮我解决了大部分问题，如博客部署到服务器、使用 GitHub Actions 实现博客自动化部署，即便他晚上工作到 10 点多才下班，依然很有耐心地帮我解决了遇到的所有问题。   </p><p>这也让我看到了一个技术人身上那种不屈不挠、誓要把问题解决的韧劲，他在帮我搭建博客的过程中，同样会遇到最初不知道怎么解决的问题，但他没有因为这是我的事情就草草地放弃了，反而是愈战愈勇。    </p><p>一个人之所以强大，不止是来自于强健的体魄，更重要的可能是拥有一颗「大心脏」，能扛得住各种磨难、不畏难，甚至是主动挑战困难，这也是我一直以来佩服做技术的人的原因。       </p><p>原本是想写一个详细的搭建 Hexo 博客教程，但写的时候发现自己还是不够耐心，就写了这篇比较笼统的文章，因为我自己其实也没有完全理清一些操作的意图或者命令，有些命令随着终端的关闭也消失了。。。好吧，这都是我的借口。   </p><p>以上，希望有帮助。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>IIssNan - <a href="http://theme-next.iissnan.com/getting-started.html">开始使用 NexT 主题</a><br>老郭种树 - <a href="https://www.bilibili.com/video/av70623689">怎样在Mac上SSH和FTP？完美替代XShell是哪个软件？item2吗？Royal TSX! 没有比它更好</a><br>千古壹号 - <a href="https://www.qianguyihao.com/2020-09-19-hexo-aliyun-blog/#1%E3%80%81%E5%AE%89%E8%A3%85-git-%E7%8E%AF%E5%A2%83">hexo+阿里云搭建博客网站</a><br>Frost’s Blog - <a href="https://frostming.com/2020/04-26/github-actions-deploy">使用 GitHub Actions 实现博客自动化部署</a><br>知乎 - <a href="https://zhuanlan.zhihu.com/p/220689883">如何配置七牛云图床 - OpenWrite</a><br>zkqiang - <a href="https://github.com/fluid-dev/hexo-theme-fluid">hexo-theme-fluid</a>    </p><p><em>本博客使用了优雅的 Fluid 主题，在此对开发这个主题的开发者 zkqiang 表示衷心的感谢。</em></p>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
